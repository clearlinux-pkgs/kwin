libkcmkwincommon.so.6:KWin::EffectsModel::qt_metacall(QMetaObject::Call, int, void**)
libkcmkwincommon.so.6:KWin::EffectsModel::qt_metacast(char const*)
libkcmkwincommon.so.6:KWin::EffectsModel::requestConfigure(QModelIndex const&, QWindow*)
libkcmkwincommon.so.6:KWin::EffectsModel::loadPluginEffects(KConfigGroup const&)
libkcmkwincommon.so.6:KWin::EffectsModel::loadBuiltInEffects(KConfigGroup const&)
libkcmkwincommon.so.6:KWin::EffectsModel::updateEffectStatus(QModelIndex const&, KWin::EffectsModel::Status)
libkcmkwincommon.so.6:KWin::EffectsModel::loadJavascriptEffects(KConfigGroup const&)
libkcmkwincommon.so.6:KWin::EffectsModel::load(KWin::EffectsModel::LoadOptions)
libkcmkwincommon.so.6:KWin::EffectsModel::save()
libkcmkwincommon.so.6:KWin::EffectsModel::loaded()
libkcmkwincommon.so.6:KWin::EffectsModel::setData(QModelIndex const&, QVariant const&, int)
libkcmkwincommon.so.6:KWin::EffectsModel::defaults()
libkcmkwincommon.so.6:KWin::EffectsModel::EffectsModel(QObject*)
libkcmkwincommon.so.6:KWin::EffectsModel::EffectsModel(QObject*)
libkcmkwincommon.so.6:KWin::EffectsModel::isDefaults() const
libkcmkwincommon.so.6:KWin::EffectsModel::metaObject() const
libkcmkwincommon.so.6:KWin::EffectsModel::columnCount(QModelIndex const&) const
libkcmkwincommon.so.6:KWin::EffectsModel::shouldStore(KWin::EffectsModel::EffectData const&) const
libkcmkwincommon.so.6:KWin::EffectsModel::findByPluginId(QString const&) const
libkcmkwincommon.so.6:KWin::EffectsModel::data(QModelIndex const&, int) const
libkcmkwincommon.so.6:KWin::EffectsModel::index(int, int, QModelIndex const&) const
libkcmkwincommon.so.6:KWin::EffectsModel::parent(QModelIndex const&) const
libkcmkwincommon.so.6:KWin::EffectsModel::rowCount(QModelIndex const&) const
libkcmkwincommon.so.6:KWin::EffectsModel::needsSave() const
libkcmkwincommon.so.6:KWin::EffectsModel::roleNames() const
libkwin.so.6:KWin::Activities::reallyStop(QString const&)
libkwin.so.6:KWin::Activities::setCurrent(QString const&)
libkwin.so.6:KWin::Activities::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Activities::qt_metacast(char const*)
libkwin.so.6:KWin::Activities::slotRemoved(QString const&)
libkwin.so.6:KWin::Activities::currentChanged(QString const&)
libkwin.so.6:KWin::Activities::slotCurrentChanged(QString const&)
libkwin.so.6:KWin::Activities::toggleWindowOnActivity(KWin::Window*, QString const&, bool)
libkwin.so.6:KWin::Activities::slotServiceStatusChanged()
libkwin.so.6:KWin::Activities::stop(QString const&)
libkwin.so.6:KWin::Activities::added(QString const&)
libkwin.so.6:KWin::Activities::start(QString const&)
libkwin.so.6:KWin::Activities::removed(QString const&)
libkwin.so.6:KWin::Activities::Activities()
libkwin.so.6:KWin::Activities::Activities()
libkwin.so.6:KWin::ColorLUT3D::sample(unsigned long, unsigned long, unsigned long)
libkwin.so.6:KWin::ColorLUT3D::ColorLUT3D(std::unique_ptr<KWin::ColorTransformation, std::default_delete<KWin::ColorTransformation> >&&, unsigned long, unsigned long, unsigned long)
libkwin.so.6:KWin::ColorLUT3D::ColorLUT3D(std::unique_ptr<KWin::ColorTransformation, std::default_delete<KWin::ColorTransformation> >&&, unsigned long, unsigned long, unsigned long)
libkwin.so.6:KWin::Compositor::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Compositor::qt_metacast(char const*)
libkwin.so.6:KWin::Compositor::prePaintPass(KWin::RenderLayer*, QRegion*)
libkwin.so.6:KWin::Compositor::reinitialize()
libkwin.so.6:KWin::Compositor::sceneCreated()
libkwin.so.6:KWin::Compositor::addSuperLayer(KWin::RenderLayer*)
libkwin.so.6:KWin::Compositor::postPaintPass(KWin::RenderLayer*)
libkwin.so.6:KWin::Compositor::aboutToDestroy()
libkwin.so.6:KWin::Compositor::removeSuperLayer(KWin::RenderLayer*)
libkwin.so.6:KWin::Compositor::compositingToggled(bool)
libkwin.so.6:KWin::Compositor::keepSupportProperty(unsigned int)
libkwin.so.6:KWin::Compositor::handleFrameRequested(KWin::RenderLoop*)
libkwin.so.6:KWin::Compositor::removeSupportProperty(unsigned int)
libkwin.so.6:KWin::Compositor::aboutToToggleCompositing()
libkwin.so.6:KWin::Compositor::deleteUnusedSupportProperties()
libkwin.so.6:KWin::Compositor::self()
libkwin.so.6:KWin::Compositor::inhibit(KWin::Window*)
libkwin.so.6:KWin::Compositor::isActive()
libkwin.so.6:KWin::Compositor::framePass(KWin::RenderLayer*, KWin::OutputFrame*)
libkwin.so.6:KWin::Compositor::paintPass(KWin::RenderLayer*, KWin::RenderTarget const&, QRegion const&)
libkwin.so.6:KWin::Compositor::uninhibit(KWin::Window*)
libkwin.so.6:KWin::Compositor::Compositor(QObject*)
libkwin.so.6:KWin::Compositor::Compositor(QObject*)
libkwin.so.6:KWin::Compositor::~Compositor()
libkwin.so.6:KWin::Compositor::~Compositor()
libkwin.so.6:KWin::Compositor::~Compositor()
libkwin.so.6:KWin::CursorItem::setSurface(KWin::SurfaceInterface*, QPointF const&)
libkwin.so.6:KWin::CursorItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CursorItem::qt_metacast(char const*)
libkwin.so.6:KWin::CursorItem::refresh()
libkwin.so.6:KWin::CursorItem::setImage(QImage const&, QPointF const&)
libkwin.so.6:KWin::CursorItem::CursorItem(KWin::Item*)
libkwin.so.6:KWin::CursorItem::CursorItem(KWin::Item*)
libkwin.so.6:KWin::CursorItem::~CursorItem()
libkwin.so.6:KWin::CursorItem::~CursorItem()
libkwin.so.6:KWin::CursorItem::~CursorItem()
libkwin.so.6:KWin::CustomTile::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CustomTile::qt_metacast(char const*)
libkwin.so.6:KWin::CustomTile::moveByPixels(QPointF const&)
libkwin.so.6:KWin::CustomTile::createChildAt(QRectF const&, KWin::Tile::LayoutDirection, int)
libkwin.so.6:KWin::CustomTile::layoutModified()
libkwin.so.6:KWin::CustomTile::setLayoutDirection(KWin::Tile::LayoutDirection)
libkwin.so.6:KWin::CustomTile::setRelativeGeometry(QRectF const&)
libkwin.so.6:KWin::CustomTile::supportsResizeGravity(KWin::Gravity)
libkwin.so.6:KWin::CustomTile::layoutDirectionChanged(KWin::Tile::LayoutDirection)
libkwin.so.6:KWin::CustomTile::split(KWin::Tile::LayoutDirection)
libkwin.so.6:KWin::CustomTile::remove()
libkwin.so.6:KWin::CustomTile::CustomTile(KWin::TileManager*, KWin::CustomTile*)
libkwin.so.6:KWin::CustomTile::CustomTile(KWin::TileManager*, KWin::CustomTile*)
libkwin.so.6:KWin::Decoration::DecorationBridge::initPlugin()
libkwin.so.6:KWin::Decoration::DecorationBridge::readPlugin()
libkwin.so.6:KWin::Decoration::DecorationBridge::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Decoration::DecorationBridge::qt_metacast(char const*)
libkwin.so.6:KWin::Decoration::DecorationBridge::reconfigure()
libkwin.so.6:KWin::Decoration::DecorationBridge::createClient(KDecoration2::DecoratedClient*, KDecoration2::Decoration*)
libkwin.so.6:KWin::Decoration::DecorationBridge::loadMetaData(QJsonObject const&)
libkwin.so.6:KWin::Decoration::DecorationBridge::metaDataLoaded()
libkwin.so.6:KWin::Decoration::DecorationBridge::createDecoration(KWin::Window*)
libkwin.so.6:KWin::Decoration::DecorationBridge::readDecorationOptions()
libkwin.so.6:KWin::Decoration::DecorationBridge::init()
libkwin.so.6:KWin::Decoration::DecorationBridge::settings(KDecoration2::DecorationSettings*)
libkwin.so.6:KWin::Decoration::DecorationBridge::findTheme(QMap<QString, QVariant> const&)
libkwin.so.6:KWin::Decoration::DecorationBridge::hasPlugin()
libkwin.so.6:KWin::Decoration::DecorationBridge::DecorationBridge()
libkwin.so.6:KWin::Decoration::DecorationBridge::DecorationBridge()
libkwin.so.6:KWin::DrmBackend::gpuRemoved(KWin::DrmGpu*)
libkwin.so.6:KWin::DrmBackend::initialize()
libkwin.so.6:KWin::DrmBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DrmBackend::qt_metacast(char const*)
libkwin.so.6:KWin::DrmBackend::removeOutput(KWin::DrmAbstractOutput*)
libkwin.so.6:KWin::DrmBackend::updateOutputs()
libkwin.so.6:KWin::DrmBackend::releaseBuffers()
libkwin.so.6:KWin::DrmBackend::handleUdevEvent()
libkwin.so.6:KWin::DrmBackend::sceneInitialized()
libkwin.so.6:KWin::DrmBackend::setRenderBackend(KWin::DrmRenderBackend*)
libkwin.so.6:KWin::DrmBackend::applyOutputChanges(KWin::OutputConfiguration const&)
libkwin.so.6:KWin::DrmBackend::createInputBackend()
libkwin.so.6:KWin::DrmBackend::createOpenGLBackend()
libkwin.so.6:KWin::DrmBackend::createVirtualOutput(QString const&, QSize const&, double)
libkwin.so.6:KWin::DrmBackend::removeVirtualOutput(KWin::Output*)
libkwin.so.6:KWin::DrmBackend::createQPainterBackend()
libkwin.so.6:KWin::DrmBackend::addGpu(QString const&)
libkwin.so.6:KWin::DrmBackend::gpuAdded(KWin::DrmGpu*)
libkwin.so.6:KWin::DrmBackend::addOutput(KWin::DrmAbstractOutput*)
libkwin.so.6:KWin::DrmBackend::DrmBackend(KWin::Session*, QObject*)
libkwin.so.6:KWin::DrmBackend::DrmBackend(KWin::Session*, QObject*)
libkwin.so.6:KWin::DrmBackend::~DrmBackend()
libkwin.so.6:KWin::DrmBackend::~DrmBackend()
libkwin.so.6:KWin::DrmBackend::~DrmBackend()
libkwin.so.6:KWin::EglContext::makeCurrent(void*)
libkwin.so.6:KWin::EglContext::makeCurrent()
libkwin.so.6:KWin::EglContext::createContext(KWin::EglDisplay*, void*, void*)
libkwin.so.6:KWin::EglContext::create(KWin::EglDisplay*, void*, void*)
libkwin.so.6:KWin::EglContext::EglContext(KWin::EglDisplay*, void*, void*)
libkwin.so.6:KWin::EglContext::EglContext(KWin::EglDisplay*, void*, void*)
libkwin.so.6:KWin::EglContext::~EglContext()
libkwin.so.6:KWin::EglContext::~EglContext()
libkwin.so.6:KWin::EglContext::~EglContext()
libkwin.so.6:KWin::EglDisplay::shouldUseOpenGLES()
libkwin.so.6:KWin::EglDisplay::create(void*, bool)
libkwin.so.6:KWin::EglDisplay::EglDisplay(void*, QList<QByteArray> const&, bool)
libkwin.so.6:KWin::EglDisplay::EglDisplay(void*, QList<QByteArray> const&, bool)
libkwin.so.6:KWin::EglDisplay::~EglDisplay()
libkwin.so.6:KWin::EglDisplay::~EglDisplay()
libkwin.so.6:KWin::FormatInfo::drmFormatName(unsigned int)
libkwin.so.6:KWin::FormatInfo::get(unsigned int)
libkwin.so.6:KWin::GLPlatform::driverToString(KWin::Driver)
libkwin.so.6:KWin::GLPlatform::driverToString8(KWin::Driver)
libkwin.so.6:KWin::GLPlatform::chipClassToString(KWin::ChipClass)
libkwin.so.6:KWin::GLPlatform::chipClassToString8(KWin::ChipClass)
libkwin.so.6:KWin::GLPlatform::GLPlatform(KWin::OpenGLPlatformInterface, QByteArrayView, QByteArrayView, QByteArrayView, QByteArrayView)
libkwin.so.6:KWin::GLPlatform::GLPlatform(KWin::OpenGLPlatformInterface, QByteArrayView, QByteArrayView, QByteArrayView, QByteArrayView)
libkwin.so.6:KWin::GLPlatform::~GLPlatform()
libkwin.so.6:KWin::GLPlatform::~GLPlatform()
libkwin.so.6:KWin::IccProfile::load(QString const&)
libkwin.so.6:KWin::IccProfile::IccProfile(void*, KWin::Colorimetry const&, KWin::IccProfile::BToATagData&&, std::shared_ptr<KWin::ColorTransformation> const&, std::optional<double>)
libkwin.so.6:KWin::IccProfile::IccProfile(void*, KWin::Colorimetry const&, std::shared_ptr<KWin::ColorTransformation> const&, std::shared_ptr<KWin::ColorTransformation> const&, std::optional<double>)
libkwin.so.6:KWin::IccProfile::IccProfile(void*, KWin::Colorimetry const&, KWin::IccProfile::BToATagData&&, std::shared_ptr<KWin::ColorTransformation> const&, std::optional<double>)
libkwin.so.6:KWin::IccProfile::IccProfile(void*, KWin::Colorimetry const&, std::shared_ptr<KWin::ColorTransformation> const&, std::shared_ptr<KWin::ColorTransformation> const&, std::optional<double>)
libkwin.so.6:KWin::IccProfile::~IccProfile()
libkwin.so.6:KWin::IccProfile::~IccProfile()
libkwin.so.6:KWin::OutputMode::OutputMode(QSize const&, unsigned int, QFlags<KWin::OutputMode::Flag>)
libkwin.so.6:KWin::OutputMode::OutputMode(QSize const&, unsigned int, QFlags<KWin::OutputMode::Flag>)
libkwin.so.6:KWin::RenderLoop::beginPaint()
libkwin.so.6:KWin::RenderLoop::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::RenderLoop::qt_metacast(char const*)
libkwin.so.6:KWin::RenderLoop::framePresented(KWin::RenderLoop*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, KWin::PresentationMode)
libkwin.so.6:KWin::RenderLoop::frameRequested(KWin::RenderLoop*)
libkwin.so.6:KWin::RenderLoop::setRefreshRate(int)
libkwin.so.6:KWin::RenderLoop::prepareNewFrame()
libkwin.so.6:KWin::RenderLoop::scheduleRepaint(KWin::Item*, KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLoop::refreshRateChanged()
libkwin.so.6:KWin::RenderLoop::setPresentationMode(KWin::PresentationMode)
libkwin.so.6:KWin::RenderLoop::setMaxPendingFrameCount(unsigned int)
libkwin.so.6:KWin::RenderLoop::setPresentationSafetyMargin(std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::RenderLoop::inhibit()
libkwin.so.6:KWin::RenderLoop::uninhibit()
libkwin.so.6:KWin::RenderLoop::RenderLoop(KWin::Output*)
libkwin.so.6:KWin::RenderLoop::RenderLoop(KWin::Output*)
libkwin.so.6:KWin::RenderLoop::~RenderLoop()
libkwin.so.6:KWin::RenderLoop::~RenderLoop()
libkwin.so.6:KWin::RenderLoop::~RenderLoop()
libkwin.so.6:KWin::ShadowItem::preprocess()
libkwin.so.6:KWin::ShadowItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ShadowItem::qt_metacast(char const*)
libkwin.so.6:KWin::ShadowItem::updateGeometry()
libkwin.so.6:KWin::ShadowItem::handleTextureChanged()
libkwin.so.6:KWin::ShadowItem::ShadowItem(KWin::Shadow*, KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::ShadowItem::ShadowItem(KWin::Shadow*, KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::ShadowItem::~ShadowItem()
libkwin.so.6:KWin::ShadowItem::~ShadowItem()
libkwin.so.6:KWin::ShadowItem::~ShadowItem()
libkwin.so.6:KWin::UdevDevice::hasProperty(char const*, char const*)
libkwin.so.6:KWin::UdevDevice::property(char const*)
libkwin.so.6:KWin::UdevDevice::UdevDevice(udev_device*)
libkwin.so.6:KWin::UdevDevice::UdevDevice(udev_device*)
libkwin.so.6:KWin::UdevDevice::~UdevDevice()
libkwin.so.6:KWin::UdevDevice::~UdevDevice()
libkwin.so.6:KWin::WindowItem::refVisible(int)
libkwin.so.6:KWin::WindowItem::markDamaged()
libkwin.so.6:KWin::WindowItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WindowItem::qt_metacast(char const*)
libkwin.so.6:KWin::WindowItem::unrefVisible(int)
libkwin.so.6:KWin::WindowItem::updateOpacity()
libkwin.so.6:KWin::WindowItem::updatePosition()
libkwin.so.6:KWin::WindowItem::updateShadowItem()
libkwin.so.6:KWin::WindowItem::updateVisibility()
libkwin.so.6:KWin::WindowItem::updateSurfaceItem(std::unique_ptr<KWin::SurfaceItem, std::default_delete<KWin::SurfaceItem> >&&)
libkwin.so.6:KWin::WindowItem::updateStackingOrder()
libkwin.so.6:KWin::WindowItem::updateDecorationItem()
libkwin.so.6:KWin::WindowItem::updateSurfacePosition()
libkwin.so.6:KWin::WindowItem::updateSurfaceVisibility()
libkwin.so.6:KWin::WindowItem::addSurfaceItemDamageConnects(KWin::Item*)
libkwin.so.6:KWin::WindowItem::freeze()
libkwin.so.6:KWin::WindowItem::elevate()
libkwin.so.6:KWin::WindowItem::deelevate()
libkwin.so.6:KWin::WindowItem::WindowItem(KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::WindowItem::WindowItem(KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::WindowItem::~WindowItem()
libkwin.so.6:KWin::WindowItem::~WindowItem()
libkwin.so.6:KWin::WindowItem::~WindowItem()
libkwin.so.6:KWin::Application::setSession(std::unique_ptr<KWin::Session, std::default_delete<KWin::Session> >&&)
libkwin.so.6:KWin::Application::createAtoms()
libkwin.so.6:KWin::Application::createInput()
libkwin.so.6:KWin::Application::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Application::qt_metacast(char const*)
libkwin.so.6:KWin::Application::setupMalloc()
libkwin.so.6:KWin::Application::updateXTime()
libkwin.so.6:KWin::Application::destroyAtoms()
libkwin.so.6:KWin::Application::destroyInput()
libkwin.so.6:KWin::Application::createOptions()
libkwin.so.6:KWin::Application::createOutline(KWin::Outline*)
libkwin.so.6:KWin::Application::createPlugins()
libkwin.so.6:KWin::Application::dispatchEvent(xcb_generic_event_t*)
libkwin.so.6:KWin::Application::notifyStarted()
libkwin.so.6:KWin::Application::setConfigLock(bool)
libkwin.so.6:KWin::Application::setCrashCount(int)
libkwin.so.6:KWin::Application::updateX11Time(xcb_generic_event_t*)
libkwin.so.6:KWin::Application::destroyPlugins()
libkwin.so.6:KWin::Application::createAboutData()
libkwin.so.6:KWin::Application::createWorkspace()
libkwin.so.6:KWin::Application::destroyPlatform()
libkwin.so.6:KWin::Application::createScreenEdge(KWin::ScreenEdges*)
libkwin.so.6:KWin::Application::destroyWorkspace()
libkwin.so.6:KWin::Application::setOperationMode(KWin::Application::OperationMode)
libkwin.so.6:KWin::Application::setOutputBackend(std::unique_ptr<KWin::OutputBackend, std::default_delete<KWin::OutputBackend> >&&)
libkwin.so.6:KWin::Application::setXwaylandScale(double)
libkwin.so.6:KWin::Application::setupCommandLine(QCommandLineParser*)
libkwin.so.6:KWin::Application::workspaceCreated()
libkwin.so.6:KWin::Application::createInputMethod()
libkwin.so.6:KWin::Application::destroyCompositor()
libkwin.so.6:KWin::Application::resetCrashesCount()
libkwin.so.6:KWin::Application::applyXwaylandScale()
libkwin.so.6:KWin::Application::createColorManager()
libkwin.so.6:KWin::Application::destroyInputMethod()
libkwin.so.6:KWin::Application::processCommandLine(QCommandLineParser*)
libkwin.so.6:KWin::Application::destroyColorManager()
libkwin.so.6:KWin::Application::registerEventFilter(KWin::X11EventFilter*)
libkwin.so.6:KWin::Application::createEffectsHandler(KWin::Compositor*, KWin::WorkspaceScene*)
libkwin.so.6:KWin::Application::createPlatformCursor()
libkwin.so.6:KWin::Application::setupLocalizedString()
libkwin.so.6:KWin::Application::x11ConnectionChanged()
libkwin.so.6:KWin::Application::xwaylandScaleChanged()
libkwin.so.6:KWin::Application::unregisterEventFilter(KWin::X11EventFilter*)
libkwin.so.6:KWin::Application::virtualTerminalCreated()
libkwin.so.6:KWin::Application::createTabletModeManager()
libkwin.so.6:KWin::Application::removeNativeX11EventFilter()
libkwin.so.6:KWin::Application::installNativeX11EventFilter()
libkwin.so.6:KWin::Application::setProcessStartupEnvironment(QProcessEnvironment const&)
libkwin.so.6:KWin::Application::startInteractiveWindowSelection(std::function<void (KWin::Window*)>, QByteArray const&)
libkwin.so.6:KWin::Application::x11ConnectionAboutToBeDestroyed()
libkwin.so.6:KWin::Application::startInteractivePositionSelection(std::function<void (QPointF const&)>)
libkwin.so.6:KWin::Application::start()
libkwin.so.6:KWin::Application::started()
libkwin.so.6:KWin::Application::wasCrash()
libkwin.so.6:KWin::Application::Application(KWin::Application::OperationMode, int&, char**)
libkwin.so.6:KWin::Application::Application(KWin::Application::OperationMode, int&, char**)
libkwin.so.6:KWin::Application::~Application()
libkwin.so.6:KWin::Application::~Application()
libkwin.so.6:KWin::Application::~Application()
libkwin.so.6:KWin::ColorDevice::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ColorDevice::qt_metacast(char const*)
libkwin.so.6:KWin::ColorDevice::setBrightness(unsigned int)
libkwin.so.6:KWin::ColorDevice::scheduleUpdate()
libkwin.so.6:KWin::ColorDevice::setTemperature(unsigned int)
libkwin.so.6:KWin::ColorDevice::brightnessChanged()
libkwin.so.6:KWin::ColorDevice::temperatureChanged()
libkwin.so.6:KWin::ColorDevice::update()
libkwin.so.6:KWin::ColorDevice::ColorDevice(KWin::Output*, QObject*)
libkwin.so.6:KWin::ColorDevice::ColorDevice(KWin::Output*, QObject*)
libkwin.so.6:KWin::ColorDevice::~ColorDevice()
libkwin.so.6:KWin::ColorDevice::~ColorDevice()
libkwin.so.6:KWin::ColorDevice::~ColorDevice()
libkwin.so.6:KWin::Colorimetry::calculateToXYZMatrix(QVector3D, QVector3D, QVector3D, QVector3D)
libkwin.so.6:KWin::Colorimetry::chromaticAdaptationMatrix(QVector2D, QVector2D)
libkwin.so.6:KWin::Colorimetry::xyToXYZ(QVector2D)
libkwin.so.6:KWin::Colorimetry::xyzToXY(QVector3D)
libkwin.so.6:KWin::Colorimetry::fromName(KWin::NamedColorimetry)
libkwin.so.6:KWin::Colorimetry::Colorimetry(QVector2D, QVector2D, QVector2D, QVector2D)
libkwin.so.6:KWin::Colorimetry::Colorimetry(QVector3D, QVector3D, QVector3D, QVector3D)
libkwin.so.6:KWin::Colorimetry::Colorimetry(QVector2D, QVector2D, QVector2D, QVector2D)
libkwin.so.6:KWin::Colorimetry::Colorimetry(QVector3D, QVector3D, QVector3D, QVector3D)
libkwin.so.6:KWin::CursorScene::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CursorScene::qt_metacast(char const*)
libkwin.so.6:KWin::CursorScene::paint(KWin::RenderTarget const&, QRegion const&)
libkwin.so.6:KWin::CursorScene::prePaint(KWin::SceneDelegate*)
libkwin.so.6:KWin::CursorScene::postPaint()
libkwin.so.6:KWin::CursorScene::CursorScene(std::unique_ptr<KWin::ItemRenderer, std::default_delete<KWin::ItemRenderer> >&&)
libkwin.so.6:KWin::CursorScene::CursorScene(std::unique_ptr<KWin::ItemRenderer, std::default_delete<KWin::ItemRenderer> >&&)
libkwin.so.6:KWin::CursorScene::~CursorScene()
libkwin.so.6:KWin::CursorScene::~CursorScene()
libkwin.so.6:KWin::CursorScene::~CursorScene()
libkwin.so.6:KWin::CursorShape::alternatives(QByteArray const&)
libkwin.so.6:KWin::EffectFrame::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::EffectFrame::qt_metacast(char const*)
libkwin.so.6:KWin::EffectFrame::setGeometry(QRect const&, bool)
libkwin.so.6:KWin::EffectFrame::setIconSize(QSize const&)
libkwin.so.6:KWin::EffectFrame::setPosition(QPoint const&)
libkwin.so.6:KWin::EffectFrame::setAlignment(QFlags<Qt::AlignmentFlag>)
libkwin.so.6:KWin::EffectFrame::enableCrossFade(bool)
libkwin.so.6:KWin::EffectFrame::setCrossFadeProgress(double)
libkwin.so.6:KWin::EffectFrame::free()
libkwin.so.6:KWin::EffectFrame::render(KWin::RenderTarget const&, KWin::RenderViewport const&, QRegion const&, double, double)
libkwin.so.6:KWin::EffectFrame::setFont(QFont const&)
libkwin.so.6:KWin::EffectFrame::setIcon(QIcon const&)
libkwin.so.6:KWin::EffectFrame::setText(QString const&)
libkwin.so.6:KWin::EffectFrame::EffectFrame(KWin::EffectFrameStyle, bool, QPoint, QFlags<Qt::AlignmentFlag>)
libkwin.so.6:KWin::EffectFrame::EffectFrame(KWin::EffectFrameStyle, bool, QPoint, QFlags<Qt::AlignmentFlag>)
libkwin.so.6:KWin::EffectFrame::~EffectFrame()
libkwin.so.6:KWin::EffectFrame::~EffectFrame()
libkwin.so.6:KWin::EffectFrame::~EffectFrame()
libkwin.so.6:KWin::IndexBuffer::accommodate(unsigned long)
libkwin.so.6:KWin::IndexBuffer::bind()
libkwin.so.6:KWin::IndexBuffer::IndexBuffer()
libkwin.so.6:KWin::IndexBuffer::IndexBuffer()
libkwin.so.6:KWin::IndexBuffer::~IndexBuffer()
libkwin.so.6:KWin::IndexBuffer::~IndexBuffer()
libkwin.so.6:KWin::InputDevice::keyChanged(unsigned int, KWin::InputRedirection::KeyboardKeyState, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::touchFrame(KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputDevice::qt_metacast(char const*)
libkwin.so.6:KWin::InputDevice::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pointerFrame(KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pointerMotion(QPointF const&, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::setOutputName(QString const&)
libkwin.so.6:KWin::InputDevice::touchCanceled(KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::holdGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pinchGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::swipeGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::switchToggledOn(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::tabletToolEvent(KWin::InputRedirection::TabletEventType, QPointF const&, double, int, int, double, bool, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputDevice::holdGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::switchToggledOff(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pinchGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::swipeGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pinchGestureUpdate(double, double, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pointerAxisChanged(KWin::InputRedirection::PointerAxis, double, int, KWin::InputRedirection::PointerAxisSource, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::swipeGestureUpdate(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::tabletPadRingEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputDevice::tabletPadStripEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputDevice::holdGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pointerButtonChanged(unsigned int, KWin::InputRedirection::PointerButtonState, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::tabletPadButtonEvent(unsigned int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputDevice::pinchGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::pointerMotionAbsolute(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::swipeGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::tabletToolButtonEvent(unsigned int, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputDevice::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::InputDevice::InputDevice(QObject*)
libkwin.so.6:KWin::InputDevice::InputDevice(QObject*)
libkwin.so.6:KWin::InputMethod::setEnabled(bool)
libkwin.so.6:KWin::InputMethod::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputMethod::qt_metacast(char const*)
libkwin.so.6:KWin::InputMethod::setLanguage(unsigned int, QString const&)
libkwin.so.6:KWin::InputMethod::commitString(int, QString const&)
libkwin.so.6:KWin::InputMethod::invokeAction(unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethod::keyboardGrab()
libkwin.so.6:KWin::InputMethod::panelChanged()
libkwin.so.6:KWin::InputMethod::activeChanged(bool)
libkwin.so.6:KWin::InputMethod::forceActivate()
libkwin.so.6:KWin::InputMethod::refreshActive()
libkwin.so.6:KWin::InputMethod::enabledChanged(bool)
libkwin.so.6:KWin::InputMethod::keysymReceived(unsigned int, unsigned int, unsigned int, bool, unsigned int)
libkwin.so.6:KWin::InputMethod::stateCommitted(unsigned int)
libkwin.so.6:KWin::InputMethod::visibleChanged()
libkwin.so.6:KWin::InputMethod::stopInputMethod()
libkwin.so.6:KWin::InputMethod::availableChanged()
libkwin.so.6:KWin::InputMethod::forwardModifiers(KWin::InputMethod::ForwardModifiersForce)
libkwin.so.6:KWin::InputMethod::setPreeditCursor(int)
libkwin.so.6:KWin::InputMethod::setPreeditString(unsigned int, QString const&, QString const&)
libkwin.so.6:KWin::InputMethod::setTextDirection(unsigned int, Qt::LayoutDirection)
libkwin.so.6:KWin::InputMethod::setTrackedWindow(KWin::Window*)
libkwin.so.6:KWin::InputMethod::startInputMethod()
libkwin.so.6:KWin::InputMethod::setCursorPosition(int, int)
libkwin.so.6:KWin::InputMethod::setPreeditStyling(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethod::contentTypeChanged()
libkwin.so.6:KWin::InputMethod::updateModifiersMap(QByteArray const&)
libkwin.so.6:KWin::InputMethod::installKeyboardGrab(KWin::InputMethodGrabV1*)
libkwin.so.6:KWin::InputMethod::resetPendingPreedit()
libkwin.so.6:KWin::InputMethod::deleteSurroundingText(int, unsigned int)
libkwin.so.6:KWin::InputMethod::setInputMethodCommand(QString const&)
libkwin.so.6:KWin::InputMethod::updateInputPanelState()
libkwin.so.6:KWin::InputMethod::surroundingTextChanged()
libkwin.so.6:KWin::InputMethod::adoptInputMethodContext()
libkwin.so.6:KWin::InputMethod::textInputInterfaceV1Reset()
libkwin.so.6:KWin::InputMethod::handleFocusedSurfaceChanged()
libkwin.so.6:KWin::InputMethod::textInputInterfaceV1StateUpdated(unsigned int)
libkwin.so.6:KWin::InputMethod::textInputInterfaceV2StateUpdated(unsigned int, KWin::TextInputV2Interface::UpdateReason)
libkwin.so.6:KWin::InputMethod::textInputInterfaceV1EnabledChanged()
libkwin.so.6:KWin::InputMethod::textInputInterfaceV2EnabledChanged()
libkwin.so.6:KWin::InputMethod::textInputInterfaceV3EnabledChanged()
libkwin.so.6:KWin::InputMethod::textInputInterfaceV3EnableRequested()
libkwin.so.6:KWin::InputMethod::activeClientSupportsTextInputChanged()
libkwin.so.6:KWin::InputMethod::key(unsigned int, unsigned int, unsigned int, bool)
libkwin.so.6:KWin::InputMethod::hide()
libkwin.so.6:KWin::InputMethod::init()
libkwin.so.6:KWin::InputMethod::show()
libkwin.so.6:KWin::InputMethod::setPanel(KWin::InputPanelV1Window*)
libkwin.so.6:KWin::InputMethod::modifiers(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethod::setActive(bool)
libkwin.so.6:KWin::InputMethod::InputMethod()
libkwin.so.6:KWin::InputMethod::InputMethod()
libkwin.so.6:KWin::InputMethod::~InputMethod()
libkwin.so.6:KWin::InputMethod::~InputMethod()
libkwin.so.6:KWin::InputMethod::~InputMethod()
libkwin.so.6:KWin::OutputFrame::addFeedback(std::unique_ptr<KWin::PresentationFeedback, std::default_delete<KWin::PresentationFeedback> >&&)
libkwin.so.6:KWin::OutputFrame::setContentType(KWin::ContentType)
libkwin.so.6:KWin::OutputFrame::addRenderTimeQuery(std::unique_ptr<KWin::RenderTimeQuery, std::default_delete<KWin::RenderTimeQuery> >&&)
libkwin.so.6:KWin::OutputFrame::setPresentationMode(KWin::PresentationMode)
libkwin.so.6:KWin::OutputFrame::presented(std::chrono::duration<long, std::ratio<1l, 1000000000l> >, KWin::PresentationMode)
libkwin.so.6:KWin::OutputFrame::setDamage(QRegion const&)
libkwin.so.6:KWin::OutputFrame::OutputFrame(KWin::RenderLoop*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::OutputFrame::OutputFrame(KWin::RenderLoop*, std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::OutputFrame::~OutputFrame()
libkwin.so.6:KWin::OutputFrame::~OutputFrame()
libkwin.so.6:KWin::OutputLayer::addRepaint(QRegion const&)
libkwin.so.6:KWin::OutputLayer::beginFrame()
libkwin.so.6:KWin::OutputLayer::setEnabled(bool)
libkwin.so.6:KWin::OutputLayer::setHotspot(QPointF const&)
libkwin.so.6:KWin::OutputLayer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OutputLayer::qt_metacast(char const*)
libkwin.so.6:KWin::OutputLayer::resetRepaints()
libkwin.so.6:KWin::OutputLayer::setSourceRect(QRectF const&)
libkwin.so.6:KWin::OutputLayer::setTargetRect(QRect const&)
libkwin.so.6:KWin::OutputLayer::attemptScanout(KWin::SurfaceItem*, std::shared_ptr<KWin::OutputFrame> const&)
libkwin.so.6:KWin::OutputLayer::doAttemptScanout(KWin::GraphicsBuffer*, KWin::ColorDescription const&, std::shared_ptr<KWin::OutputFrame> const&)
libkwin.so.6:KWin::OutputLayer::notifyNoScanoutCandidate()
libkwin.so.6:KWin::OutputLayer::endFrame(QRegion const&, QRegion const&, KWin::OutputFrame*)
libkwin.so.6:KWin::OutputLayer::setScale(double)
libkwin.so.6:KWin::OutputLayer::OutputLayer(KWin::Output*)
libkwin.so.6:KWin::OutputLayer::OutputLayer(KWin::Output*)
libkwin.so.6:KWin::RenderLayer::addRepaint(QRect const&)
libkwin.so.6:KWin::RenderLayer::addRepaint(QRegion const&)
libkwin.so.6:KWin::RenderLayer::addRepaint(int, int, int, int)
libkwin.so.6:KWin::RenderLayer::setVisible(bool)
libkwin.so.6:KWin::RenderLayer::addSublayer(KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLayer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::RenderLayer::qt_metacast(char const*)
libkwin.so.6:KWin::RenderLayer::setDelegate(std::unique_ptr<KWin::RenderLayerDelegate, std::default_delete<KWin::RenderLayerDelegate> >)
libkwin.so.6:KWin::RenderLayer::setGeometry(QRectF const&)
libkwin.so.6:KWin::RenderLayer::resetRepaints()
libkwin.so.6:KWin::RenderLayer::setSuperlayer(KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLayer::addRepaintFull()
libkwin.so.6:KWin::RenderLayer::removeSublayer(KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLayer::setOutputLayer(KWin::OutputLayer*)
libkwin.so.6:KWin::RenderLayer::scheduleRepaint(KWin::Item*)
libkwin.so.6:KWin::RenderLayer::updateBoundingRect()
libkwin.so.6:KWin::RenderLayer::updateEffectiveVisibility()
libkwin.so.6:KWin::RenderLayer::RenderLayer(KWin::RenderLoop*, KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLayer::RenderLayer(KWin::RenderLoop*, KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLayer::~RenderLayer()
libkwin.so.6:KWin::RenderLayer::~RenderLayer()
libkwin.so.6:KWin::RenderLayer::~RenderLayer()
libkwin.so.6:KWin::ScreenEdges::createEdge(KWin::ElectricBorder, int, int, int, int, KWin::Output*, bool)
libkwin.so.6:KWin::ScreenEdges::approaching(KWin::ElectricBorder, double, QRect const&)
libkwin.so.6:KWin::ScreenEdges::ensureOnTop()
libkwin.so.6:KWin::ScreenEdges::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScreenEdges::qt_metacast(char const*)
libkwin.so.6:KWin::ScreenEdges::reconfigure()
libkwin.so.6:KWin::ScreenEdges::reserveTouch(KWin::ElectricBorder, QAction*, std::function<void (KWin::ElectricBorder, QPointF const&, KWin::Output*)>)
libkwin.so.6:KWin::ScreenEdges::updateLayout()
libkwin.so.6:KWin::ScreenEdges::checkBlocking()
libkwin.so.6:KWin::ScreenEdges::recreateEdges()
libkwin.so.6:KWin::ScreenEdges::unreserveTouch(KWin::ElectricBorder, QAction*)
libkwin.so.6:KWin::ScreenEdges::handleDndNotify(unsigned int, QPoint const&)
libkwin.so.6:KWin::ScreenEdges::createVerticalEdge(KWin::ElectricBorder, QRect const&, QRect const&, KWin::Output*)
libkwin.so.6:KWin::ScreenEdges::handleEnterNotifiy(unsigned int, QPoint const&, QDateTime const&)
libkwin.so.6:KWin::ScreenEdges::setActionForBorder(KWin::ElectricBorder, KWin::ElectricBorderAction*, KWin::ElectricBorderAction)
libkwin.so.6:KWin::ScreenEdges::createEdgeForClient(KWin::Window*, KWin::ElectricBorder)
libkwin.so.6:KWin::ScreenEdges::deleteEdgeForClient(KWin::Window*)
libkwin.so.6:KWin::ScreenEdges::createHorizontalEdge(KWin::ElectricBorder, QRect const&, QRect const&, KWin::Output*)
libkwin.so.6:KWin::ScreenEdges::reserveDesktopSwitching(bool, QFlags<Qt::Orientation>)
libkwin.so.6:KWin::ScreenEdges::setActionForTouchBorder(KWin::ElectricBorder, KWin::ElectricBorderAction)
libkwin.so.6:KWin::ScreenEdges::setRemainActiveOnFullscreen(bool)
libkwin.so.6:KWin::ScreenEdges::init()
libkwin.so.6:KWin::ScreenEdges::check(QPoint const&, QDateTime const&, bool)
libkwin.so.6:KWin::ScreenEdges::reserve(KWin::ElectricBorder, QObject*, char const*)
libkwin.so.6:KWin::ScreenEdges::reserve(KWin::Window*, KWin::ElectricBorder)
libkwin.so.6:KWin::ScreenEdges::isEntered(QMouseEvent*)
libkwin.so.6:KWin::ScreenEdges::unreserve(KWin::ElectricBorder, QObject*)
libkwin.so.6:KWin::ScreenEdges::ScreenEdges()
libkwin.so.6:KWin::ScreenEdges::ScreenEdges()
libkwin.so.6:KWin::SurfaceItem::preprocess()
libkwin.so.6:KWin::SurfaceItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceItem::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceItem::resetDamage()
libkwin.so.6:KWin::SurfaceItem::updatePixmap()
libkwin.so.6:KWin::SurfaceItem::destroyPixmap()
libkwin.so.6:KWin::SurfaceItem::discardPixmap()
libkwin.so.6:KWin::SurfaceItem::setBufferSize(QSize const&)
libkwin.so.6:KWin::SurfaceItem::setScanoutHint(KWin::DrmDevice*, QHash<unsigned int, QList<unsigned long> > const&)
libkwin.so.6:KWin::SurfaceItem::setBufferSourceBox(QRectF const&)
libkwin.so.6:KWin::SurfaceItem::setBufferTransform(KWin::OutputTransform)
libkwin.so.6:KWin::SurfaceItem::setDestinationSize(QSizeF const&)
libkwin.so.6:KWin::SurfaceItem::referencePreviousPixmap()
libkwin.so.6:KWin::SurfaceItem::unreferencePreviousPixmap()
libkwin.so.6:KWin::SurfaceItem::freeze()
libkwin.so.6:KWin::SurfaceItem::damaged()
libkwin.so.6:KWin::SurfaceItem::addDamage(QRegion const&)
libkwin.so.6:KWin::SurfaceItem::SurfaceItem(KWin::Item*)
libkwin.so.6:KWin::SurfaceItem::SurfaceItem(KWin::Item*)
libkwin.so.6:KWin::SurfaceRole::SurfaceRole(QByteArray const&)
libkwin.so.6:KWin::SurfaceRole::SurfaceRole(QByteArray const&)
libkwin.so.6:KWin::TileManager::tileToJSon(KWin::CustomTile*)
libkwin.so.6:KWin::TileManager::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TileManager::qt_metacast(char const*)
libkwin.so.6:KWin::TileManager::tileRemoved(KWin::Tile*)
libkwin.so.6:KWin::TileManager::readSettings()
libkwin.so.6:KWin::TileManager::saveSettings()
libkwin.so.6:KWin::TileManager::parseTilingJSon(QJsonValue const&, QRectF const&, KWin::CustomTile*)
libkwin.so.6:KWin::TileManager::bestTileForPosition(QPointF const&)
libkwin.so.6:KWin::TileManager::bestTileForPosition(double, double)
libkwin.so.6:KWin::TileManager::TileManager(KWin::Output*)
libkwin.so.6:KWin::TileManager::TileManager(KWin::Output*)
libkwin.so.6:KWin::TileManager::~TileManager()
libkwin.so.6:KWin::TileManager::~TileManager()
libkwin.so.6:KWin::TileManager::~TileManager()
libkwin.so.6:KWin::Transaction::add(KWin::SurfaceInterface*)
libkwin.so.6:KWin::Transaction::lock()
libkwin.so.6:KWin::Transaction::amend(KWin::SurfaceInterface*, std::function<void (KWin::SurfaceState*)>)
libkwin.so.6:KWin::Transaction::apply()
libkwin.so.6:KWin::Transaction::merge(KWin::Transaction*)
libkwin.so.6:KWin::Transaction::commit()
libkwin.so.6:KWin::Transaction::unlock()
libkwin.so.6:KWin::Transaction::tryApply()
libkwin.so.6:KWin::Transaction::Transaction()
libkwin.so.6:KWin::Transaction::Transaction()
libkwin.so.6:KWin::UdevMonitor::filterSubsystemDevType(char const*, char const*)
libkwin.so.6:KWin::UdevMonitor::enable()
libkwin.so.6:KWin::UdevMonitor::getDevice()
libkwin.so.6:KWin::UdevMonitor::UdevMonitor(KWin::Udev*)
libkwin.so.6:KWin::UdevMonitor::UdevMonitor(KWin::Udev*)
libkwin.so.6:KWin::UdevMonitor::~UdevMonitor()
libkwin.so.6:KWin::UdevMonitor::~UdevMonitor()
libkwin.so.6:KWin::grabXServer()
libkwin.so.6:KWin::ColorManager::deviceAdded(KWin::ColorDevice*)
libkwin.so.6:KWin::ColorManager::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ColorManager::qt_metacast(char const*)
libkwin.so.6:KWin::ColorManager::deviceRemoved(KWin::ColorDevice*)
libkwin.so.6:KWin::ColorManager::handleOutputAdded(KWin::Output*)
libkwin.so.6:KWin::ColorManager::handleOutputRemoved(KWin::Output*)
libkwin.so.6:KWin::ColorManager::handleSessionActiveChanged(bool)
libkwin.so.6:KWin::ColorManager::ColorManager()
libkwin.so.6:KWin::ColorManager::ColorManager()
libkwin.so.6:KWin::ColorManager::~ColorManager()
libkwin.so.6:KWin::ColorManager::~ColorManager()
libkwin.so.6:KWin::ColorManager::~ColorManager()
libkwin.so.6:KWin::CursorSource::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CursorSource::qt_metacast(char const*)
libkwin.so.6:KWin::CursorSource::changed()
libkwin.so.6:KWin::CursorSource::CursorSource(QObject*)
libkwin.so.6:KWin::CursorSource::CursorSource(QObject*)
libkwin.so.6:KWin::DebugConsole::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DebugConsole::qt_metacast(char const*)
libkwin.so.6:KWin::DebugConsole::updateKeyboardTab()
libkwin.so.6:KWin::DebugConsole::initGLTab()
libkwin.so.6:KWin::DebugConsole::showEvent(QShowEvent*)
libkwin.so.6:KWin::DebugConsole::DebugConsole()
libkwin.so.6:KWin::DebugConsole::DebugConsole()
libkwin.so.6:KWin::DebugConsole::~DebugConsole()
libkwin.so.6:KWin::DebugConsole::~DebugConsole()
libkwin.so.6:KWin::DebugConsole::~DebugConsole()
libkwin.so.6:KWin::EffectLoader::loadEffect(QString const&)
libkwin.so.6:KWin::EffectLoader::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::EffectLoader::qt_metacast(char const*)
libkwin.so.6:KWin::EffectLoader::queryAndLoadAll()
libkwin.so.6:KWin::EffectLoader::clear()
libkwin.so.6:KWin::EffectLoader::setConfig(QExplicitlySharedDataPointer<KSharedConfig>)
libkwin.so.6:KWin::EffectLoader::EffectLoader(QObject*)
libkwin.so.6:KWin::EffectLoader::EffectLoader(QObject*)
libkwin.so.6:KWin::EffectLoader::~EffectLoader()
libkwin.so.6:KWin::EffectLoader::~EffectLoader()
libkwin.so.6:KWin::EffectLoader::~EffectLoader()
libkwin.so.6:KWin::EffectWindow::addRepaint(QRect const&)
libkwin.so.6:KWin::EffectWindow::refVisible(KWin::EffectWindowVisibleRef const*)
libkwin.so.6:KWin::EffectWindow::unminimize()
libkwin.so.6:KWin::EffectWindow::closeWindow()
libkwin.so.6:KWin::EffectWindow::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::EffectWindow::qt_metacast(char const*)
libkwin.so.6:KWin::EffectWindow::unrefWindow()
libkwin.so.6:KWin::EffectWindow::setMinimized(bool)
libkwin.so.6:KWin::EffectWindow::transientFor()
libkwin.so.6:KWin::EffectWindow::unrefVisible(KWin::EffectWindowVisibleRef const*)
libkwin.so.6:KWin::EffectWindow::windowDamaged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::addRepaintFull()
libkwin.so.6:KWin::EffectWindow::addLayerRepaint(QRect const&)
libkwin.so.6:KWin::EffectWindow::minimizedChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowHiddenChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowOpacityChanged(KWin::EffectWindow*, double, double)
libkwin.so.6:KWin::EffectWindow::windowDesktopsChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowModalityChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowKeepAboveChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowKeepBelowChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowDecorationChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowFullScreenChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowUnresponsiveChanged(KWin::EffectWindow*, bool)
libkwin.so.6:KWin::EffectWindow::windowFrameGeometryChanged(KWin::EffectWindow*, QRectF const&)
libkwin.so.6:KWin::EffectWindow::windowStepUserMovedResized(KWin::EffectWindow*, QRectF const&)
libkwin.so.6:KWin::EffectWindow::windowMaximizedStateChanged(KWin::EffectWindow*, bool, bool)
libkwin.so.6:KWin::EffectWindow::windowStartUserMovedResized(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowFinishUserMovedResized(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowExpandedGeometryChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowFrameGeometryAboutToChange(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectWindow::windowMaximizedStateAboutToChange(KWin::EffectWindow*, bool, bool)
libkwin.so.6:KWin::EffectWindow::elevate(bool)
libkwin.so.6:KWin::EffectWindow::setData(int, QVariant const&)
libkwin.so.6:KWin::EffectWindow::minimize()
libkwin.so.6:KWin::EffectWindow::findModal()
libkwin.so.6:KWin::EffectWindow::refWindow()
libkwin.so.6:KWin::EffectWindow::EffectWindow(KWin::WindowItem*)
libkwin.so.6:KWin::EffectWindow::EffectWindow(KWin::WindowItem*)
libkwin.so.6:KWin::EffectWindow::~EffectWindow()
libkwin.so.6:KWin::EffectWindow::~EffectWindow()
libkwin.so.6:KWin::EffectWindow::~EffectWindow()
libkwin.so.6:KWin::EglSwapchain::create(KWin::GraphicsBufferAllocator*, KWin::EglContext*, QSize const&, unsigned int, QList<unsigned long> const&)
libkwin.so.6:KWin::EglSwapchain::acquire()
libkwin.so.6:KWin::EglSwapchain::release(std::shared_ptr<KWin::EglSwapchainSlot>, KWin::FileDescriptor&&)
libkwin.so.6:KWin::EglSwapchain::EglSwapchain(KWin::GraphicsBufferAllocator*, KWin::EglContext*, QSize const&, unsigned int, unsigned long, std::shared_ptr<KWin::EglSwapchainSlot> const&)
libkwin.so.6:KWin::EglSwapchain::EglSwapchain(KWin::GraphicsBufferAllocator*, KWin::EglContext*, QSize const&, unsigned int, unsigned long, std::shared_ptr<KWin::EglSwapchainSlot> const&)
libkwin.so.6:KWin::EglSwapchain::~EglSwapchain()
libkwin.so.6:KWin::EglSwapchain::~EglSwapchain()
libkwin.so.6:KWin::FTraceLogger::setEnabled(bool)
libkwin.so.6:KWin::FTraceLogger::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::FTraceLogger::qt_metacast(char const*)
libkwin.so.6:KWin::FTraceLogger::enabledChanged()
libkwin.so.6:KWin::FTraceLogger::open()
libkwin.so.6:KWin::FTraceLogger::create(QObject*)
libkwin.so.6:KWin::FTraceLogger::filePath()
libkwin.so.6:KWin::FTraceLogger::FTraceLogger(QObject*)
libkwin.so.6:KWin::FTraceLogger::FTraceLogger(QObject*)
libkwin.so.6:KWin::IdleDetector::markAsIdle()
libkwin.so.6:KWin::IdleDetector::timerEvent(QTimerEvent*)
libkwin.so.6:KWin::IdleDetector::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::IdleDetector::qt_metacast(char const*)
libkwin.so.6:KWin::IdleDetector::setInhibited(bool)
libkwin.so.6:KWin::IdleDetector::markAsResumed()
libkwin.so.6:KWin::IdleDetector::idle()
libkwin.so.6:KWin::IdleDetector::resumed()
libkwin.so.6:KWin::IdleDetector::activity()
libkwin.so.6:KWin::IdleDetector::IdleDetector(std::chrono::duration<long, std::ratio<1l, 1000l> >, QObject*)
libkwin.so.6:KWin::IdleDetector::IdleDetector(std::chrono::duration<long, std::ratio<1l, 1000l> >, QObject*)
libkwin.so.6:KWin::IdleDetector::~IdleDetector()
libkwin.so.6:KWin::IdleDetector::~IdleDetector()
libkwin.so.6:KWin::IdleDetector::~IdleDetector()
libkwin.so.6:KWin::InputBackend::deviceAdded(KWin::InputDevice*)
libkwin.so.6:KWin::InputBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputBackend::qt_metacast(char const*)
libkwin.so.6:KWin::InputBackend::deviceRemoved(KWin::InputDevice*)
libkwin.so.6:KWin::InputBackend::setConfig(QExplicitlySharedDataPointer<KSharedConfig>)
libkwin.so.6:KWin::InputBackend::InputBackend(QObject*)
libkwin.so.6:KWin::InputBackend::InputBackend(QObject*)
libkwin.so.6:KWin::ItemRenderer::beginFrame(KWin::RenderTarget const&, KWin::RenderViewport const&)
libkwin.so.6:KWin::ItemRenderer::endFrame()
libkwin.so.6:KWin::ItemRenderer::ItemRenderer()
libkwin.so.6:KWin::ItemRenderer::ItemRenderer()
libkwin.so.6:KWin::ItemRenderer::~ItemRenderer()
libkwin.so.6:KWin::ItemRenderer::~ItemRenderer()
libkwin.so.6:KWin::ItemRenderer::~ItemRenderer()
libkwin.so.6:KWin::RenderTarget::RenderTarget(QImage*, KWin::ColorDescription const&)
libkwin.so.6:KWin::RenderTarget::RenderTarget(KWin::GLFramebuffer*, KWin::ColorDescription const&)
libkwin.so.6:KWin::RenderTarget::RenderTarget(QImage*, KWin::ColorDescription const&)
libkwin.so.6:KWin::RenderTarget::RenderTarget(KWin::GLFramebuffer*, KWin::ColorDescription const&)
libkwin.so.6:KWin::SyncTimeline::signal(unsigned long)
libkwin.so.6:KWin::SyncTimeline::moveInto(unsigned long, KWin::FileDescriptor const&)
libkwin.so.6:KWin::SyncTimeline::SyncTimeline(int, unsigned int)
libkwin.so.6:KWin::SyncTimeline::SyncTimeline(int, unsigned int)
libkwin.so.6:KWin::SyncTimeline::~SyncTimeline()
libkwin.so.6:KWin::SyncTimeline::~SyncTimeline()
libkwin.so.6:KWin::VsyncMonitor::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::VsyncMonitor::qt_metacast(char const*)
libkwin.so.6:KWin::VsyncMonitor::errorOccurred()
libkwin.so.6:KWin::VsyncMonitor::vblankOccurred(std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::VsyncMonitor::VsyncMonitor()
libkwin.so.6:KWin::VsyncMonitor::VsyncMonitor()
libkwin.so.6:KWin::XRenderUtils::findPictFormat(unsigned int)
libkwin.so.6:KWin::XRenderUtils::findPictFormatInfo(unsigned int)
libkwin.so.6:KWin::XRenderUtils::init(xcb_connection_t*, unsigned int)
libkwin.so.6:KWin::XRenderUtils::cleanup()
libkwin.so.6:KWin::checkGLError(char const*)
libkwin.so.6:KWin::gainRealTime()
libkwin.so.6:KWin::BlurInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::BlurInterface::qt_metacast(char const*)
libkwin.so.6:KWin::BlurInterface::region()
libkwin.so.6:KWin::BlurInterface::BlurInterface(wl_resource*)
libkwin.so.6:KWin::BlurInterface::BlurInterface(wl_resource*)
libkwin.so.6:KWin::BlurInterface::~BlurInterface()
libkwin.so.6:KWin::BlurInterface::~BlurInterface()
libkwin.so.6:KWin::BlurInterface::~BlurInterface()
libkwin.so.6:KWin::GLFramebuffer::popFramebuffer()
libkwin.so.6:KWin::GLFramebuffer::pushFramebuffer(KWin::GLFramebuffer*)
libkwin.so.6:KWin::GLFramebuffer::currentFramebuffer()
libkwin.so.6:KWin::GLFramebuffer::blitFromFramebuffer(QRect const&, QRect const&, unsigned int, bool, bool)
libkwin.so.6:KWin::GLFramebuffer::initColorAttachment(KWin::GLTexture*)
libkwin.so.6:KWin::GLFramebuffer::blitFromRenderTarget(KWin::RenderTarget const&, KWin::RenderViewport const&, QRect const&, QRect const&)
libkwin.so.6:KWin::GLFramebuffer::initDepthStencilAttachment()
libkwin.so.6:KWin::GLFramebuffer::bind()
libkwin.so.6:KWin::GLFramebuffer::GLFramebuffer(KWin::GLTexture*, KWin::GLFramebuffer::Attachment)
libkwin.so.6:KWin::GLFramebuffer::GLFramebuffer(unsigned int, QSize const&)
libkwin.so.6:KWin::GLFramebuffer::GLFramebuffer()
libkwin.so.6:KWin::GLFramebuffer::GLFramebuffer(KWin::GLTexture*, KWin::GLFramebuffer::Attachment)
libkwin.so.6:KWin::GLFramebuffer::GLFramebuffer(unsigned int, QSize const&)
libkwin.so.6:KWin::GLFramebuffer::GLFramebuffer()
libkwin.so.6:KWin::GLFramebuffer::~GLFramebuffer()
libkwin.so.6:KWin::GLFramebuffer::~GLFramebuffer()
libkwin.so.6:KWin::GlLookUpTable::bind()
libkwin.so.6:KWin::GlLookUpTable::create(std::function<QVector3D (unsigned long)> const&, unsigned long)
libkwin.so.6:KWin::GlLookUpTable::GlLookUpTable(unsigned int, unsigned long)
libkwin.so.6:KWin::GlLookUpTable::GlLookUpTable(unsigned int, unsigned long)
libkwin.so.6:KWin::GlLookUpTable::~GlLookUpTable()
libkwin.so.6:KWin::GlLookUpTable::~GlLookUpTable()
libkwin.so.6:KWin::IdleInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::IdleInterface::qt_metacast(char const*)
libkwin.so.6:KWin::IdleInterface::IdleInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::IdleInterface::IdleInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::IdleInterface::~IdleInterface()
libkwin.so.6:KWin::IdleInterface::~IdleInterface()
libkwin.so.6:KWin::IdleInterface::~IdleInterface()
libkwin.so.6:KWin::InputEventSpy::wheelEvent(KWin::WheelEvent*)
libkwin.so.6:KWin::InputEventSpy::switchEvent(KWin::SwitchEvent*)
libkwin.so.6:KWin::InputEventSpy::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::pointerEvent(KWin::MouseEvent*)
libkwin.so.6:KWin::InputEventSpy::holdGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::pinchGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::swipeGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::tabletToolEvent(KWin::TabletEvent*)
libkwin.so.6:KWin::InputEventSpy::holdGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::pinchGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::swipeGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::pinchGestureUpdate(double, double, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::swipeGestureUpdate(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::tabletPadRingEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::tabletPadStripEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::holdGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::tabletPadButtonEvent(unsigned int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::pinchGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::swipeGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::tabletToolButtonEvent(unsigned int, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::keyEvent(KWin::KeyEvent*)
libkwin.so.6:KWin::InputEventSpy::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventSpy::InputEventSpy()
libkwin.so.6:KWin::InputEventSpy::InputEventSpy()
libkwin.so.6:KWin::InputEventSpy::~InputEventSpy()
libkwin.so.6:KWin::InputEventSpy::~InputEventSpy()
libkwin.so.6:KWin::InputEventSpy::~InputEventSpy()
libkwin.so.6:KWin::KXcursorTheme::KXcursorTheme(QString const&, int, double, QList<QString> const&)
libkwin.so.6:KWin::KXcursorTheme::KXcursorTheme(KWin::KXcursorTheme const&)
libkwin.so.6:KWin::KXcursorTheme::KXcursorTheme()
libkwin.so.6:KWin::KXcursorTheme::KXcursorTheme(QString const&, int, double, QList<QString> const&)
libkwin.so.6:KWin::KXcursorTheme::KXcursorTheme(KWin::KXcursorTheme const&)
libkwin.so.6:KWin::KXcursorTheme::KXcursorTheme()
libkwin.so.6:KWin::KXcursorTheme::~KXcursorTheme()
libkwin.so.6:KWin::KXcursorTheme::~KXcursorTheme()
libkwin.so.6:KWin::KXcursorTheme::operator=(KWin::KXcursorTheme const&)
libkwin.so.6:KWin::KXcursorTheme::operator==(KWin::KXcursorTheme const&)
libkwin.so.6:KWin::KXcursorTheme::operator!=(KWin::KXcursorTheme const&)
libkwin.so.6:KWin::OpenGLBackend::copyPixels(QRegion const&, QSize const&)
libkwin.so.6:KWin::OpenGLBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OpenGLBackend::qt_metacast(char const*)
libkwin.so.6:KWin::OpenGLBackend::checkGraphicsReset()
libkwin.so.6:KWin::OpenGLBackend::setFailed(QString const&)
libkwin.so.6:KWin::OpenGLBackend::OpenGLBackend()
libkwin.so.6:KWin::OpenGLBackend::OpenGLBackend()
libkwin.so.6:KWin::OpenGLBackend::~OpenGLBackend()
libkwin.so.6:KWin::OpenGLBackend::~OpenGLBackend()
libkwin.so.6:KWin::OpenGLBackend::~OpenGLBackend()
libkwin.so.6:KWin::OpenGlContext::currentContext()
libkwin.so.6:KWin::OpenGlContext::popFramebuffer()
libkwin.so.6:KWin::OpenGlContext::setIndexBuffer(KWin::IndexBuffer*)
libkwin.so.6:KWin::OpenGlContext::initDebugOutput()
libkwin.so.6:KWin::OpenGlContext::pushFramebuffer(KWin::GLFramebuffer*)
libkwin.so.6:KWin::OpenGlContext::setShaderManager(KWin::ShaderManager*)
libkwin.so.6:KWin::OpenGlContext::currentFramebuffer()
libkwin.so.6:KWin::OpenGlContext::glResolveFunctions(std::function<void (*(char const*))()> const&)
libkwin.so.6:KWin::OpenGlContext::setStreamingBuffer(KWin::GLVertexBuffer*)
libkwin.so.6:KWin::OpenGlContext::epoxy_glReadnPixels(int, int, int, int, unsigned int, unsigned int, int, void*)
libkwin.so.6:KWin::OpenGlContext::epoxy_glGetnTexImage(unsigned int, int, unsigned int, unsigned int, int, void*)
libkwin.so.6:KWin::OpenGlContext::epoxy_glGetnUniformfv(unsigned int, int, int, float*)
libkwin.so.6:KWin::OpenGlContext::checkGraphicsResetStatus()
libkwin.so.6:KWin::OpenGlContext::OpenGlContext(bool)
libkwin.so.6:KWin::OpenGlContext::OpenGlContext(bool)
libkwin.so.6:KWin::OpenGlContext::~OpenGlContext()
libkwin.so.6:KWin::OpenGlContext::~OpenGlContext()
libkwin.so.6:KWin::OpenGlContext::~OpenGlContext()
libkwin.so.6:KWin::OutlineVisual::OutlineVisual(KWin::Outline*)
libkwin.so.6:KWin::OutlineVisual::OutlineVisual(KWin::Outline*)
libkwin.so.6:KWin::OutlineVisual::~OutlineVisual()
libkwin.so.6:KWin::OutlineVisual::~OutlineVisual()
libkwin.so.6:KWin::OutlineVisual::~OutlineVisual()
libkwin.so.6:KWin::OutputBackend::outputAdded(KWin::Output*)
libkwin.so.6:KWin::OutputBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OutputBackend::qt_metacast(char const*)
libkwin.so.6:KWin::OutputBackend::outputRemoved(KWin::Output*)
libkwin.so.6:KWin::OutputBackend::outputsQueried()
libkwin.so.6:KWin::OutputBackend::applyOutputChanges(KWin::OutputConfiguration const&)
libkwin.so.6:KWin::OutputBackend::createInputBackend()
libkwin.so.6:KWin::OutputBackend::createOpenGLBackend()
libkwin.so.6:KWin::OutputBackend::createVirtualOutput(QString const&, QSize const&, double)
libkwin.so.6:KWin::OutputBackend::removeVirtualOutput(KWin::Output*)
libkwin.so.6:KWin::OutputBackend::createQPainterBackend()
libkwin.so.6:KWin::OutputBackend::setSceneEglGlobalShareContext(void*)
libkwin.so.6:KWin::OutputBackend::OutputBackend(QObject*)
libkwin.so.6:KWin::OutputBackend::OutputBackend(QObject*)
libkwin.so.6:KWin::OutputBackend::~OutputBackend()
libkwin.so.6:KWin::OutputBackend::~OutputBackend()
libkwin.so.6:KWin::OutputBackend::~OutputBackend()
libkwin.so.6:KWin::OverlayWindow::OverlayWindow()
libkwin.so.6:KWin::OverlayWindow::OverlayWindow()
libkwin.so.6:KWin::OverlayWindow::~OverlayWindow()
libkwin.so.6:KWin::OverlayWindow::~OverlayWindow()
libkwin.so.6:KWin::OverlayWindow::~OverlayWindow()
libkwin.so.6:KWin::PluginFactory::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PluginFactory::qt_metacast(char const*)
libkwin.so.6:KWin::PluginFactory::PluginFactory()
libkwin.so.6:KWin::PluginFactory::PluginFactory()
libkwin.so.6:KWin::PluginManager::loadPlugin(KPluginMetaData const&)
libkwin.so.6:KWin::PluginManager::loadPlugin(QString const&)
libkwin.so.6:KWin::PluginManager::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PluginManager::qt_metacast(char const*)
libkwin.so.6:KWin::PluginManager::unloadPlugin(QString const&)
libkwin.so.6:KWin::PluginManager::PluginManager()
libkwin.so.6:KWin::PluginManager::PluginManager()
libkwin.so.6:KWin::PluginManager::~PluginManager()
libkwin.so.6:KWin::PluginManager::~PluginManager()
libkwin.so.6:KWin::PluginManager::~PluginManager()
libkwin.so.6:KWin::QuickRootTile::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::QuickRootTile::qt_metacast(char const*)
libkwin.so.6:KWin::QuickRootTile::tileForMode(QFlags<KWin::QuickTileFlag>)
libkwin.so.6:KWin::QuickRootTile::relayoutToFit(KWin::Tile*)
libkwin.so.6:KWin::QuickRootTile::tileForBorder(KWin::ElectricBorder)
libkwin.so.6:KWin::QuickRootTile::setVerticalSplit(double)
libkwin.so.6:KWin::QuickRootTile::setHorizontalSplit(double)
libkwin.so.6:KWin::QuickRootTile::tryReset()
libkwin.so.6:KWin::QuickRootTile::QuickRootTile(KWin::TileManager*, KWin::Tile*)
libkwin.so.6:KWin::QuickRootTile::QuickRootTile(KWin::TileManager*, KWin::Tile*)
libkwin.so.6:KWin::QuickRootTile::~QuickRootTile()
libkwin.so.6:KWin::QuickRootTile::~QuickRootTile()
libkwin.so.6:KWin::QuickRootTile::~QuickRootTile()
libkwin.so.6:KWin::RenderBackend::cursorLayer(KWin::Output*)
libkwin.so.6:KWin::RenderBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::RenderBackend::qt_metacast(char const*)
libkwin.so.6:KWin::RenderBackend::testImportBuffer(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::RenderBackend::checkGraphicsReset()
libkwin.so.6:KWin::RenderBackend::createSurfaceTextureX11(KWin::SurfacePixmapX11*)
libkwin.so.6:KWin::RenderBackend::createSurfaceTextureWayland(KWin::SurfacePixmap*)
libkwin.so.6:KWin::RenderBackend::RenderBackend(QObject*)
libkwin.so.6:KWin::RenderBackend::RenderBackend(QObject*)
libkwin.so.6:KWin::RenderJournal::add(std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::RenderJournal::RenderJournal()
libkwin.so.6:KWin::RenderJournal::RenderJournal()
libkwin.so.6:KWin::SceneDelegate::frame(KWin::OutputFrame*)
libkwin.so.6:KWin::SceneDelegate::paint(KWin::RenderTarget const&, QRegion const&)
libkwin.so.6:KWin::SceneDelegate::prePaint()
libkwin.so.6:KWin::SceneDelegate::postPaint()
libkwin.so.6:KWin::SceneDelegate::SceneDelegate(KWin::Scene*, KWin::Output*)
libkwin.so.6:KWin::SceneDelegate::SceneDelegate(KWin::Scene*, KWin::Output*)
libkwin.so.6:KWin::SceneDelegate::~SceneDelegate()
libkwin.so.6:KWin::SceneDelegate::~SceneDelegate()
libkwin.so.6:KWin::SceneDelegate::~SceneDelegate()
libkwin.so.6:KWin::SeatInterface::cancelDrag()
libkwin.so.6:KWin::SeatInterface::touchMoved(int, unsigned int, QPointF const&)
libkwin.so.6:KWin::SeatInterface::dragDropped()
libkwin.so.6:KWin::SeatInterface::dragStarted()
libkwin.so.6:KWin::SeatInterface::nameChanged(QString const&)
libkwin.so.6:KWin::SeatInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SeatInterface::qt_metacast(char const*)
libkwin.so.6:KWin::SeatInterface::setHasTouch(bool)
libkwin.so.6:KWin::SeatInterface::setSelection(KWin::AbstractDataSource*)
libkwin.so.6:KWin::SeatInterface::setTimestamp(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::SeatInterface::notifyTouchUp(int)
libkwin.so.6:KWin::SeatInterface::setDragTarget(KWin::AbstractDropHandler*, KWin::SurfaceInterface*, QMatrix4x4 const&)
libkwin.so.6:KWin::SeatInterface::setDragTarget(KWin::AbstractDropHandler*, KWin::SurfaceInterface*, QPointF const&, QMatrix4x4 const&)
libkwin.so.6:KWin::SeatInterface::setHasPointer(bool)
libkwin.so.6:KWin::SeatInterface::setHasKeyboard(bool)
libkwin.so.6:KWin::SeatInterface::hasTouchChanged(bool)
libkwin.so.6:KWin::SeatInterface::notifyTouchDown(int, QPointF const&)
libkwin.so.6:KWin::SeatInterface::notifyTouchFrame()
libkwin.so.6:KWin::SeatInterface::selectionChanged(KWin::AbstractDataSource*)
libkwin.so.6:KWin::SeatInterface::timestampChanged()
libkwin.so.6:KWin::SeatInterface::hasPointerChanged(bool)
libkwin.so.6:KWin::SeatInterface::notifyKeyboardKey(unsigned int, KWin::KeyboardKeyState)
libkwin.so.6:KWin::SeatInterface::notifyPointerAxis(Qt::Orientation, double, int, KWin::PointerAxisSource, KWin::PointerAxisRelativeDirection)
libkwin.so.6:KWin::SeatInterface::notifyTouchCancel()
libkwin.so.6:KWin::SeatInterface::notifyTouchMotion(int, QPointF const&)
libkwin.so.6:KWin::SeatInterface::pointerPosChanged(QPointF const&)
libkwin.so.6:KWin::SeatInterface::dragSurfaceChanged()
libkwin.so.6:KWin::SeatInterface::hasKeyboardChanged(bool)
libkwin.so.6:KWin::SeatInterface::notifyPointerEnter(KWin::SurfaceInterface*, QPointF const&, QMatrix4x4 const&)
libkwin.so.6:KWin::SeatInterface::notifyPointerEnter(KWin::SurfaceInterface*, QPointF const&, QPointF const&)
libkwin.so.6:KWin::SeatInterface::notifyPointerFrame()
libkwin.so.6:KWin::SeatInterface::notifyPointerLeave()
libkwin.so.6:KWin::SeatInterface::notifyPointerButton(Qt::MouseButton, KWin::PointerButtonState)
libkwin.so.6:KWin::SeatInterface::notifyPointerButton(unsigned int, KWin::PointerButtonState)
libkwin.so.6:KWin::SeatInterface::notifyPointerMotion(QPointF const&)
libkwin.so.6:KWin::SeatInterface::setPrimarySelection(KWin::AbstractDataSource*)
libkwin.so.6:KWin::SeatInterface::endPointerHoldGesture()
libkwin.so.6:KWin::SeatInterface::relativePointerMotion(QPointF const&, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::SeatInterface::endPointerPinchGesture()
libkwin.so.6:KWin::SeatInterface::endPointerSwipeGesture()
libkwin.so.6:KWin::SeatInterface::setFocusedTouchSurface(KWin::SurfaceInterface*, QPointF const&)
libkwin.so.6:KWin::SeatInterface::notifyKeyboardModifiers(unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::SeatInterface::primarySelectionChanged(KWin::AbstractDataSource*)
libkwin.so.6:KWin::SeatInterface::startPointerHoldGesture(unsigned int)
libkwin.so.6:KWin::SeatInterface::cancelPointerHoldGesture()
libkwin.so.6:KWin::SeatInterface::startPointerPinchGesture(unsigned int)
libkwin.so.6:KWin::SeatInterface::startPointerSwipeGesture(unsigned int)
libkwin.so.6:KWin::SeatInterface::cancelPointerPinchGesture()
libkwin.so.6:KWin::SeatInterface::cancelPointerSwipeGesture()
libkwin.so.6:KWin::SeatInterface::setFocusedKeyboardSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::SeatInterface::updatePointerPinchGesture(QPointF const&, double, double)
libkwin.so.6:KWin::SeatInterface::updatePointerSwipeGesture(QPointF const&)
libkwin.so.6:KWin::SeatInterface::setFocusedTextInputSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::SeatInterface::focusedTextInputSurfaceChanged()
libkwin.so.6:KWin::SeatInterface::setFocusedTouchSurfacePosition(QPointF const&)
libkwin.so.6:KWin::SeatInterface::setFocusedPointerSurfacePosition(QPointF const&)
libkwin.so.6:KWin::SeatInterface::focusedKeyboardSurfaceAboutToChange(KWin::SurfaceInterface*)
libkwin.so.6:KWin::SeatInterface::setFocusedPointerSurfaceTransformation(QMatrix4x4 const&)
libkwin.so.6:KWin::SeatInterface::get(wl_resource*)
libkwin.so.6:KWin::SeatInterface::setName(QString const&)
libkwin.so.6:KWin::SeatInterface::dragEnded()
libkwin.so.6:KWin::SeatInterface::startDrag(KWin::AbstractDataSource*, KWin::SurfaceInterface*, int, KWin::DragAndDropIcon*)
libkwin.so.6:KWin::SeatInterface::SeatInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::SeatInterface::SeatInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::SeatInterface::~SeatInterface()
libkwin.so.6:KWin::SeatInterface::~SeatInterface()
libkwin.so.6:KWin::SeatInterface::~SeatInterface()
libkwin.so.6:KWin::ShaderManager::pushShader(QFlags<KWin::ShaderTrait>)
libkwin.so.6:KWin::ShaderManager::pushShader(KWin::GLShader*)
libkwin.so.6:KWin::ShaderManager::generateShader(QFlags<KWin::ShaderTrait>)
libkwin.so.6:KWin::ShaderManager::loadShaderFromCode(QByteArray const&, QByteArray const&)
libkwin.so.6:KWin::ShaderManager::generateCustomShader(QFlags<KWin::ShaderTrait>, QByteArray const&, QByteArray const&)
libkwin.so.6:KWin::ShaderManager::bindFragDataLocations(KWin::GLShader*)
libkwin.so.6:KWin::ShaderManager::generateShaderFromFile(QFlags<KWin::ShaderTrait>, QString const&, QString const&)
libkwin.so.6:KWin::ShaderManager::shader(QFlags<KWin::ShaderTrait>)
libkwin.so.6:KWin::ShaderManager::instance()
libkwin.so.6:KWin::ShaderManager::popShader()
libkwin.so.6:KWin::ShaderManager::ShaderManager()
libkwin.so.6:KWin::ShaderManager::ShaderManager()
libkwin.so.6:KWin::ShaderManager::~ShaderManager()
libkwin.so.6:KWin::ShaderManager::~ShaderManager()
libkwin.so.6:KWin::SurfacePixmap::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfacePixmap::qt_metacast(char const*)
libkwin.so.6:KWin::SurfacePixmap::markAsDiscarded()
libkwin.so.6:KWin::SurfacePixmap::setBufferOrigin(KWin::GraphicsBufferOrigin)
libkwin.so.6:KWin::SurfacePixmap::update()
libkwin.so.6:KWin::SurfacePixmap::setBuffer(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::SurfacePixmap::SurfacePixmap(std::unique_ptr<KWin::SurfaceTexture, std::default_delete<KWin::SurfaceTexture> >&&, QObject*)
libkwin.so.6:KWin::SurfacePixmap::SurfacePixmap(std::unique_ptr<KWin::SurfaceTexture, std::default_delete<KWin::SurfaceTexture> >&&, QObject*)
libkwin.so.6:KWin::WaylandServer::initialized()
libkwin.so.6:KWin::WaylandServer::linuxDmabuf()
libkwin.so.6:KWin::WaylandServer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WaylandServer::qt_metacast(char const*)
libkwin.so.6:KWin::WaylandServer::windowAdded(KWin::Window*)
libkwin.so.6:KWin::WaylandServer::removeWindow(KWin::Window*)
libkwin.so.6:KWin::WaylandServer::initWorkspace()
libkwin.so.6:KWin::WaylandServer::windowRemoved(KWin::Window*)
libkwin.so.6:KWin::WaylandServer::registerWindow(KWin::Window*)
libkwin.so.6:KWin::WaylandServer::exportAsForeign(KWin::SurfaceInterface*)
libkwin.so.6:KWin::WaylandServer::createConnection()
libkwin.so.6:KWin::WaylandServer::initScreenLocker()
libkwin.so.6:KWin::WaylandServer::lockStateChanged()
libkwin.so.6:KWin::WaylandServer::setRenderBackend(KWin::RenderBackend*)
libkwin.so.6:KWin::WaylandServer::handleOutputAdded(KWin::Output*)
libkwin.so.6:KWin::WaylandServer::handleOutputEnabled(KWin::Output*)
libkwin.so.6:KWin::WaylandServer::handleOutputRemoved(KWin::Output*)
libkwin.so.6:KWin::WaylandServer::handleOutputDisabled(KWin::Output*)
libkwin.so.6:KWin::WaylandServer::foreignTransientChanged(KWin::SurfaceInterface*)
libkwin.so.6:KWin::WaylandServer::createXWaylandConnection()
libkwin.so.6:KWin::WaylandServer::registerXdgGenericWindow(KWin::Window*)
libkwin.so.6:KWin::WaylandServer::destroyXWaylandConnection()
libkwin.so.6:KWin::WaylandServer::registerXdgToplevelWindow(KWin::XdgToplevelWindow*)
libkwin.so.6:KWin::WaylandServer::createInputMethodConnection()
libkwin.so.6:KWin::WaylandServer::createScreenLockerConnection()
libkwin.so.6:KWin::WaylandServer::destroyInputMethodConnection()
libkwin.so.6:KWin::WaylandServer::LockScreenPresentationWatcher::LockScreenPresentationWatcher(KWin::WaylandServer*)
libkwin.so.6:KWin::WaylandServer::LockScreenPresentationWatcher::LockScreenPresentationWatcher(KWin::WaylandServer*)
libkwin.so.6:KWin::WaylandServer::findForeignTransientForSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::WaylandServer::drm()
libkwin.so.6:KWin::WaylandServer::init(QFlags<KWin::WaylandServer::InitializationFlag>)
libkwin.so.6:KWin::WaylandServer::init(QString const&, QFlags<KWin::WaylandServer::InitializationFlag>)
libkwin.so.6:KWin::WaylandServer::start()
libkwin.so.6:KWin::WaylandServer::create(QObject*)
libkwin.so.6:KWin::WaylandServer::WaylandServer(QObject*)
libkwin.so.6:KWin::WaylandServer::WaylandServer(QObject*)
libkwin.so.6:KWin::WaylandServer::~WaylandServer()
libkwin.so.6:KWin::WaylandServer::~WaylandServer()
libkwin.so.6:KWin::WaylandServer::~WaylandServer()
libkwin.so.6:KWin::WindowItemX11::initialize()
libkwin.so.6:KWin::WindowItemX11::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WindowItemX11::qt_metacast(char const*)
libkwin.so.6:KWin::WindowItemX11::WindowItemX11(KWin::X11Window*, KWin::Item*)
libkwin.so.6:KWin::WindowItemX11::WindowItemX11(KWin::X11Window*, KWin::Item*)
libkwin.so.6:KWin::X11Compositor::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::X11Compositor::qt_metacast(char const*)
libkwin.so.6:KWin::X11Compositor::reinitialize()
libkwin.so.6:KWin::X11Compositor::createOpenGLSafePoint(KWin::X11Compositor::OpenGLSafePoint)
libkwin.so.6:KWin::X11Compositor::attemptOpenGLCompositing()
libkwin.so.6:KWin::X11Compositor::destroyCompositorSelection()
libkwin.so.6:KWin::X11Compositor::releaseCompositorSelection()
libkwin.so.6:KWin::X11Compositor::self()
libkwin.so.6:KWin::X11Compositor::stop()
libkwin.so.6:KWin::X11Compositor::start()
libkwin.so.6:KWin::X11Compositor::create(QObject*)
libkwin.so.6:KWin::X11Compositor::resume(KWin::X11Compositor::SuspendReason)
libkwin.so.6:KWin::X11Compositor::toggle()
libkwin.so.6:KWin::X11Compositor::inhibit(KWin::Window*)
libkwin.so.6:KWin::X11Compositor::suspend(KWin::X11Compositor::SuspendReason)
libkwin.so.6:KWin::X11Compositor::composite(KWin::RenderLoop*)
libkwin.so.6:KWin::X11Compositor::uninhibit(KWin::Window*)
libkwin.so.6:KWin::X11Compositor::X11Compositor(QObject*)
libkwin.so.6:KWin::X11Compositor::X11Compositor(QObject*)
libkwin.so.6:KWin::X11Compositor::~X11Compositor()
libkwin.so.6:KWin::X11Compositor::~X11Compositor()
libkwin.so.6:KWin::X11Compositor::~X11Compositor()
libkwin.so.6:KWin::XdgPositioner::get(wl_resource*)
libkwin.so.6:KWin::XdgPositioner::XdgPositioner(QSharedDataPointer<KWin::XdgPositionerData> const&)
libkwin.so.6:KWin::XdgPositioner::XdgPositioner(KWin::XdgPositioner const&)
libkwin.so.6:KWin::XdgPositioner::XdgPositioner()
libkwin.so.6:KWin::XdgPositioner::XdgPositioner(QSharedDataPointer<KWin::XdgPositionerData> const&)
libkwin.so.6:KWin::XdgPositioner::XdgPositioner(KWin::XdgPositioner const&)
libkwin.so.6:KWin::XdgPositioner::XdgPositioner()
libkwin.so.6:KWin::XdgPositioner::~XdgPositioner()
libkwin.so.6:KWin::XdgPositioner::~XdgPositioner()
libkwin.so.6:KWin::XdgPositioner::operator=(KWin::XdgPositioner const&)
libkwin.so.6:KWin::grabXKeyboard(unsigned int)
libkwin.so.6:KWin::ungrabXServer()
libkwin.so.6:KWin::AbstractScript::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AbstractScript::qt_metacast(char const*)
libkwin.so.6:KWin::AbstractScript::runningChanged(bool)
libkwin.so.6:KWin::AbstractScript::stop()
libkwin.so.6:KWin::AbstractScript::AbstractScript(int, QString, QString, QObject*)
libkwin.so.6:KWin::AbstractScript::AbstractScript(int, QString, QString, QObject*)
libkwin.so.6:KWin::AbstractScript::~AbstractScript()
libkwin.so.6:KWin::AbstractScript::~AbstractScript()
libkwin.so.6:KWin::AbstractScript::~AbstractScript()
libkwin.so.6:KWin::DecorationItem::preprocess()
libkwin.so.6:KWin::DecorationItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DecorationItem::qt_metacast(char const*)
libkwin.so.6:KWin::DecorationItem::handleOutputChanged()
libkwin.so.6:KWin::DecorationItem::handleOutputScaleChanged()
libkwin.so.6:KWin::DecorationItem::handleDecorationGeometryChanged()
libkwin.so.6:KWin::DecorationItem::DecorationItem(KDecoration2::Decoration*, KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::DecorationItem::DecorationItem(KDecoration2::Decoration*, KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::EGLNativeFence::importFence(KWin::EglDisplay*, KWin::FileDescriptor&&)
libkwin.so.6:KWin::EGLNativeFence::takeFileDescriptor()
libkwin.so.6:KWin::EGLNativeFence::EGLNativeFence(KWin::EglDisplay*)
libkwin.so.6:KWin::EGLNativeFence::EGLNativeFence(KWin::EglDisplay*, void*)
libkwin.so.6:KWin::EGLNativeFence::EGLNativeFence(KWin::EglDisplay*)
libkwin.so.6:KWin::EGLNativeFence::EGLNativeFence(KWin::EglDisplay*, void*)
libkwin.so.6:KWin::EGLNativeFence::~EGLNativeFence()
libkwin.so.6:KWin::EGLNativeFence::~EGLNativeFence()
libkwin.so.6:KWin::EffectsHandler::addRepaint(QRect const&)
libkwin.so.6:KWin::EffectsHandler::addRepaint(QRectF const&)
libkwin.so.6:KWin::EffectsHandler::addRepaint(QRegion const&)
libkwin.so.6:KWin::EffectsHandler::addRepaint(int, int, int, int)
libkwin.so.6:KWin::EffectsHandler::drawWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::EffectsHandler::hideCursor()
libkwin.so.6:KWin::EffectsHandler::kwinOption(KWin::KWinOption)
libkwin.so.6:KWin::EffectsHandler::loadEffect(QString const&)
libkwin.so.6:KWin::EffectsHandler::moveWindow(KWin::EffectWindow*, QPoint const&, bool, double)
libkwin.so.6:KWin::EffectsHandler::showCursor()
libkwin.so.6:KWin::EffectsHandler::startPaint()
libkwin.so.6:KWin::EffectsHandler::closeTabBox()
libkwin.so.6:KWin::EffectsHandler::paintScreen(KWin::RenderTarget const&, KWin::RenderViewport const&, int, QRegion const&, KWin::Output*)
libkwin.so.6:KWin::EffectsHandler::paintWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::EffectsHandler::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::EffectsHandler::qt_metacast(char const*)
libkwin.so.6:KWin::EffectsHandler::reconfigure()
libkwin.so.6:KWin::EffectsHandler::screenAdded(KWin::Output*)
libkwin.so.6:KWin::EffectsHandler::tabBoxAdded(int)
libkwin.so.6:KWin::EffectsHandler::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::unrefTabBox()
libkwin.so.6:KWin::EffectsHandler::windowAdded(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::defineCursor(Qt::CursorShape)
libkwin.so.6:KWin::EffectsHandler::desktopAdded(KWin::VirtualDesktop*)
libkwin.so.6:KWin::EffectsHandler::grabKeyboard(KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::mouseChanged(QPointF const&, QPointF const&, QFlags<Qt::MouseButton>, QFlags<Qt::MouseButton>, QFlags<Qt::KeyboardModifier>, QFlags<Qt::KeyboardModifier>)
libkwin.so.6:KWin::EffectsHandler::reloadEffect(KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::renderWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::EffectsHandler::scenePainter()
libkwin.so.6:KWin::EffectsHandler::startupAdded(QString const&, QIcon const&)
libkwin.so.6:KWin::EffectsHandler::tabBoxClosed()
libkwin.so.6:KWin::EffectsHandler::toggleEffect(QString const&)
libkwin.so.6:KWin::EffectsHandler::unloadEffect(QString const&)
libkwin.so.6:KWin::EffectsHandler::windowClosed(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::activityAdded(QString const&)
libkwin.so.6:KWin::EffectsHandler::destroyEffect(KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::screenRemoved(KWin::Output*)
libkwin.so.6:KWin::EffectsHandler::tabBoxUpdated()
libkwin.so.6:KWin::EffectsHandler::windowDeleted(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::activateWindow(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::addRepaintFull()
libkwin.so.6:KWin::EffectsHandler::desktopChanged(KWin::VirtualDesktop*, KWin::VirtualDesktop*, KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::desktopRemoved(KWin::VirtualDesktop*)
libkwin.so.6:KWin::EffectsHandler::doGrabKeyboard()
libkwin.so.6:KWin::EffectsHandler::effectsChanged()
libkwin.so.6:KWin::EffectsHandler::prePaintScreen(KWin::ScreenPrePaintData&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::EffectsHandler::prePaintWindow(KWin::EffectWindow*, KWin::WindowPrePaintData&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::EffectsHandler::propertyNotify(KWin::EffectWindow*, long)
libkwin.so.6:KWin::EffectsHandler::startupChanged(QString const&, QIcon const&)
libkwin.so.6:KWin::EffectsHandler::startupRemoved(QString const&)
libkwin.so.6:KWin::EffectsHandler::tabBoxKeyEvent(QKeyEvent*)
libkwin.so.6:KWin::EffectsHandler::ungrabKeyboard()
libkwin.so.6:KWin::EffectsHandler::windowToScreen(KWin::EffectWindow*, KWin::Output*)
libkwin.so.6:KWin::EffectsHandler::activityRemoved(QString const&)
libkwin.so.6:KWin::EffectsHandler::desktopChanging(KWin::VirtualDesktop*, QPointF, KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::postPaintScreen()
libkwin.so.6:KWin::EffectsHandler::postPaintWindow(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::setTabBoxWindow(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::tabletToolEvent(KWin::TabletEvent*)
libkwin.so.6:KWin::EffectsHandler::windowActivated(KWin::EffectWindow*)
libkwin.so.6:KWin::EffectsHandler::doUngrabKeyboard()
libkwin.so.6:KWin::EffectsHandler::highlightWindows(QList<KWin::EffectWindow*> const&)
libkwin.so.6:KWin::EffectsHandler::unloadAllEffects()
libkwin.so.6:KWin::EffectsHandler::windowToDesktops(KWin::EffectWindow*, QList<KWin::VirtualDesktop*> const&)
libkwin.so.6:KWin::EffectsHandler::inputPanelChanged()
libkwin.so.6:KWin::EffectsHandler::isEffectSupported(QString const&)
libkwin.so.6:KWin::EffectsHandler::reconfigureEffect(QString const&)
libkwin.so.6:KWin::EffectsHandler::screenAboutToLock()
libkwin.so.6:KWin::EffectsHandler::setCurrentDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::EffectsHandler::setElevatedWindow(KWin::EffectWindow*, bool)
libkwin.so.6:KWin::EffectsHandler::setShowingDesktop(bool)
libkwin.so.6:KWin::EffectsHandler::windowDataChanged(KWin::EffectWindow*, int)
libkwin.so.6:KWin::EffectsHandler::cursorShapeChanged()
libkwin.so.6:KWin::EffectsHandler::reconfigureEffects()
libkwin.so.6:KWin::EffectsHandler::tabletPadRingEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::areEffectsSupported(QList<QString> const&)
libkwin.so.6:KWin::EffectsHandler::hideOnScreenMessage(QFlags<KWin::EffectsHandler::OnScreenMessageHideFlag>)
libkwin.so.6:KWin::EffectsHandler::registerTouchBorder(KWin::ElectricBorder, QAction*)
libkwin.so.6:KWin::EffectsHandler::sessionStateChanged()
libkwin.so.6:KWin::EffectsHandler::showOnScreenMessage(QString const&, QString const&)
libkwin.so.6:KWin::EffectsHandler::tabletPadStripEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::grabbedKeyboardEvent(QKeyEvent*)
libkwin.so.6:KWin::EffectsHandler::registerAxisShortcut(QFlags<Qt::KeyboardModifier>, KWin::PointerAxisDirection, QAction*)
libkwin.so.6:KWin::EffectsHandler::registerPropertyType(long, bool)
libkwin.so.6:KWin::EffectsHandler::screenLockingChanged(bool)
libkwin.so.6:KWin::EffectsHandler::stackingOrderChanged()
libkwin.so.6:KWin::EffectsHandler::tabletPadButtonEvent(unsigned int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::xcbConnectionChanged()
libkwin.so.6:KWin::EffectsHandler::checkInputWindowEvent(QMouseEvent*)
libkwin.so.6:KWin::EffectsHandler::checkInputWindowEvent(QWheelEvent*)
libkwin.so.6:KWin::EffectsHandler::removeSupportProperty(QByteArray const&, KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::reserveElectricBorder(KWin::ElectricBorder, KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::screenEdgeApproaching(KWin::ElectricBorder, double, QRect const&)
libkwin.so.6:KWin::EffectsHandler::showingDesktopChanged(bool)
libkwin.so.6:KWin::EffectsHandler::stopMouseInterception(KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::tabletToolButtonEvent(unsigned int, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::unregisterTouchBorder(KWin::ElectricBorder, QAction*)
libkwin.so.6:KWin::EffectsHandler::currentActivityChanged(QString const&)
libkwin.so.6:KWin::EffectsHandler::desktopGridSizeChanged(QSize const&)
libkwin.so.6:KWin::EffectsHandler::setupWindowConnections(KWin::Window*)
libkwin.so.6:KWin::EffectsHandler::startMouseInterception(KWin::Effect*, Qt::CursorShape)
libkwin.so.6:KWin::EffectsHandler::announceSupportProperty(QByteArray const&, KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::desktopGridWidthChanged(int)
libkwin.so.6:KWin::EffectsHandler::doStopMouseInterception()
libkwin.so.6:KWin::EffectsHandler::registerPointerShortcut(QFlags<Qt::KeyboardModifier>, Qt::MouseButton, QAction*)
libkwin.so.6:KWin::EffectsHandler::unreserveElectricBorder(KWin::ElectricBorder, KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::checkInputWindowStacking()
libkwin.so.6:KWin::EffectsHandler::colorPickerActiveChanged()
libkwin.so.6:KWin::EffectsHandler::desktopChangingCancelled()
libkwin.so.6:KWin::EffectsHandler::desktopGridHeightChanged(int)
libkwin.so.6:KWin::EffectsHandler::doStartMouseInterception(Qt::CursorShape)
libkwin.so.6:KWin::EffectsHandler::doneOpenGLContextCurrent()
libkwin.so.6:KWin::EffectsHandler::makeOpenGLContextCurrent()
libkwin.so.6:KWin::EffectsHandler::virtualScreenSizeChanged()
libkwin.so.6:KWin::EffectsHandler::setActiveFullScreenEffect(KWin::Effect*)
libkwin.so.6:KWin::EffectsHandler::doCheckInputWindowStacking()
libkwin.so.6:KWin::EffectsHandler::registerRealtimeTouchBorder(KWin::ElectricBorder, QAction*, std::function<void (KWin::ElectricBorder, QPointF const&, KWin::Output*)>)
libkwin.so.6:KWin::EffectsHandler::virtualScreenGeometryChanged()
libkwin.so.6:KWin::EffectsHandler::activeFullScreenEffectChanged()
libkwin.so.6:KWin::EffectsHandler::registerTouchpadPinchShortcut(KWin::PinchDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::EffectsHandler::registerTouchpadSwipeShortcut(KWin::SwipeDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::EffectsHandler::startInteractiveWindowSelection(std::function<void (KWin::EffectWindow*)>)
libkwin.so.6:KWin::EffectsHandler::hasActiveFullScreenEffectChanged()
libkwin.so.6:KWin::EffectsHandler::registerTouchscreenSwipeShortcut(KWin::SwipeDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::EffectsHandler::startInteractivePositionSelection(std::function<void (QPointF const&)>)
libkwin.so.6:KWin::EffectsHandler::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::provides(KWin::Effect::Feature)
libkwin.so.6:KWin::EffectsHandler::refTabBox()
libkwin.so.6:KWin::EffectsHandler::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::EffectsHandler::EffectsHandler(KWin::Compositor*, KWin::WorkspaceScene*)
libkwin.so.6:KWin::EffectsHandler::EffectsHandler(KWin::Compositor*, KWin::WorkspaceScene*)
libkwin.so.6:KWin::EffectsHandler::~EffectsHandler()
libkwin.so.6:KWin::EffectsHandler::~EffectsHandler()
libkwin.so.6:KWin::EffectsHandler::~EffectsHandler()
libkwin.so.6:KWin::FTraceDuration::~FTraceDuration()
libkwin.so.6:KWin::FTraceDuration::~FTraceDuration()
libkwin.so.6:KWin::FileDescriptor::isReadable(int)
libkwin.so.6:KWin::FileDescriptor::take()
libkwin.so.6:KWin::FileDescriptor::reset()
libkwin.so.6:KWin::FileDescriptor::isClosed(int)
libkwin.so.6:KWin::FileDescriptor::FileDescriptor(KWin::FileDescriptor&&)
libkwin.so.6:KWin::FileDescriptor::FileDescriptor(int)
libkwin.so.6:KWin::FileDescriptor::FileDescriptor(KWin::FileDescriptor&&)
libkwin.so.6:KWin::FileDescriptor::FileDescriptor(int)
libkwin.so.6:KWin::FileDescriptor::~FileDescriptor()
libkwin.so.6:KWin::FileDescriptor::~FileDescriptor()
libkwin.so.6:KWin::FileDescriptor::operator=(KWin::FileDescriptor&&)
libkwin.so.6:KWin::GLVertexBuffer::beginFrame()
libkwin.so.6:KWin::GLVertexBuffer::bindArrays()
libkwin.so.6:KWin::GLVertexBuffer::endOfFrame()
libkwin.so.6:KWin::GLVertexBuffer::unbindArrays()
libkwin.so.6:KWin::GLVertexBuffer::setPersistent()
libkwin.so.6:KWin::GLVertexBuffer::setVertexCount(int)
libkwin.so.6:KWin::GLVertexBuffer::setAttribLayout(std::span<KWin::GLVertexAttrib const, 18446744073709551615ul>, unsigned long)
libkwin.so.6:KWin::GLVertexBuffer::streamingBuffer()
libkwin.so.6:KWin::GLVertexBuffer::map(unsigned long)
libkwin.so.6:KWin::GLVertexBuffer::draw(QRegion const&, unsigned int, int, int, bool)
libkwin.so.6:KWin::GLVertexBuffer::draw(unsigned int, int, int)
libkwin.so.6:KWin::GLVertexBuffer::reset()
libkwin.so.6:KWin::GLVertexBuffer::unmap()
libkwin.so.6:KWin::GLVertexBuffer::render(QRegion const&, unsigned int, bool)
libkwin.so.6:KWin::GLVertexBuffer::render(unsigned int)
libkwin.so.6:KWin::GLVertexBuffer::setData(void const*, unsigned long)
libkwin.so.6:KWin::GLVertexBuffer::GLVertexBuffer(KWin::GLVertexBuffer::UsageHint)
libkwin.so.6:KWin::GLVertexBuffer::GLVertexBuffer(KWin::GLVertexBuffer::UsageHint)
libkwin.so.6:KWin::GLVertexBuffer::~GLVertexBuffer()
libkwin.so.6:KWin::GLVertexBuffer::~GLVertexBuffer()
libkwin.so.6:KWin::GraphicsBuffer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::GraphicsBuffer::qt_metacast(char const*)
libkwin.so.6:KWin::GraphicsBuffer::addReleasePoint(std::shared_ptr<KWin::SyncReleasePoint> const&)
libkwin.so.6:KWin::GraphicsBuffer::alphaChannelFromDrmFormat(unsigned int)
libkwin.so.6:KWin::GraphicsBuffer::map(QFlags<KWin::GraphicsBuffer::MapFlag>)
libkwin.so.6:KWin::GraphicsBuffer::ref()
libkwin.so.6:KWin::GraphicsBuffer::drop()
libkwin.so.6:KWin::GraphicsBuffer::unmap()
libkwin.so.6:KWin::GraphicsBuffer::unref()
libkwin.so.6:KWin::GraphicsBuffer::released()
libkwin.so.6:KWin::GraphicsBuffer::GraphicsBuffer(QObject*)
libkwin.so.6:KWin::GraphicsBuffer::GraphicsBuffer(QObject*)
libkwin.so.6:KWin::InternalWindow::createItem(KWin::Item*)
libkwin.so.6:KWin::InternalWindow::killWindow()
libkwin.so.6:KWin::InternalWindow::setCaption(QString const&)
libkwin.so.6:KWin::InternalWindow::closeWindow()
libkwin.so.6:KWin::InternalWindow::eventFilter(QObject*, QEvent*)
libkwin.so.6:KWin::InternalWindow::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InternalWindow::qt_metacast(char const*)
libkwin.so.6:KWin::InternalWindow::setNoBorder(bool)
libkwin.so.6:KWin::InternalWindow::markAsMapped()
libkwin.so.6:KWin::InternalWindow::destroyWindow()
libkwin.so.6:KWin::InternalWindow::updateCaption()
libkwin.so.6:KWin::InternalWindow::commitGeometry(QRectF const&)
libkwin.so.6:KWin::InternalWindow::requestGeometry(QRectF const&)
libkwin.so.6:KWin::InternalWindow::createDecoration(QRectF const&)
libkwin.so.6:KWin::InternalWindow::resizeWithChecks(QRectF const&, QSizeF const&)
libkwin.so.6:KWin::InternalWindow::updateDecoration(bool, bool)
libkwin.so.6:KWin::InternalWindow::destroyDecoration()
libkwin.so.6:KWin::InternalWindow::pointerEnterEvent(QPointF const&)
libkwin.so.6:KWin::InternalWindow::pointerLeaveEvent()
libkwin.so.6:KWin::InternalWindow::moveResizeInternal(QRectF const&, KWin::Window::MoveResizeMode)
libkwin.so.6:KWin::InternalWindow::invalidateDecoration()
libkwin.so.6:KWin::InternalWindow::doInteractiveResizeSync(QRectF const&)
libkwin.so.6:KWin::InternalWindow::syncGeometryToInternalWindow()
libkwin.so.6:KWin::InternalWindow::updateInternalWindowGeometry()
libkwin.so.6:KWin::InternalWindow::present(KWin::InternalWindowFrame const&)
libkwin.so.6:KWin::InternalWindow::popupDone()
libkwin.so.6:KWin::InternalWindow::takeFocus()
libkwin.so.6:KWin::InternalWindow::InternalWindow(QWindow*)
libkwin.so.6:KWin::InternalWindow::InternalWindow(QWindow*)
libkwin.so.6:KWin::InternalWindow::~InternalWindow()
libkwin.so.6:KWin::InternalWindow::~InternalWindow()
libkwin.so.6:KWin::InternalWindow::~InternalWindow()
libkwin.so.6:KWin::KXcursorSprite::KXcursorSprite(QImage const&, QPoint const&, std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
libkwin.so.6:KWin::KXcursorSprite::KXcursorSprite(KWin::KXcursorSprite const&)
libkwin.so.6:KWin::KXcursorSprite::KXcursorSprite()
libkwin.so.6:KWin::KXcursorSprite::KXcursorSprite(QImage const&, QPoint const&, std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
libkwin.so.6:KWin::KXcursorSprite::KXcursorSprite(KWin::KXcursorSprite const&)
libkwin.so.6:KWin::KXcursorSprite::KXcursorSprite()
libkwin.so.6:KWin::KXcursorSprite::~KXcursorSprite()
libkwin.so.6:KWin::KXcursorSprite::~KXcursorSprite()
libkwin.so.6:KWin::KXcursorSprite::operator=(KWin::KXcursorSprite const&)
libkwin.so.6:KWin::KeyboardLayout::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::KeyboardLayout::qt_metacast(char const*)
libkwin.so.6:KWin::KeyboardLayout::reconfigure()
libkwin.so.6:KWin::KeyboardLayout::resetLayout()
libkwin.so.6:KWin::KeyboardLayout::layoutChanged(unsigned int)
libkwin.so.6:KWin::KeyboardLayout::loadShortcuts()
libkwin.so.6:KWin::KeyboardLayout::switchToLayout(unsigned int)
libkwin.so.6:KWin::KeyboardLayout::checkLayoutChange(unsigned int)
libkwin.so.6:KWin::KeyboardLayout::notifyLayoutChange()
libkwin.so.6:KWin::KeyboardLayout::switchToNextLayout()
libkwin.so.6:KWin::KeyboardLayout::layoutsReconfigured()
libkwin.so.6:KWin::KeyboardLayout::switchToLastUsedLayout()
libkwin.so.6:KWin::KeyboardLayout::switchToPreviousLayout()
libkwin.so.6:KWin::KeyboardLayout::init()
libkwin.so.6:KWin::KeyboardLayout::KeyboardLayout(KWin::Xkb*, QExplicitlySharedDataPointer<KSharedConfig> const&)
libkwin.so.6:KWin::KeyboardLayout::KeyboardLayout(KWin::Xkb*, QExplicitlySharedDataPointer<KSharedConfig> const&)
libkwin.so.6:KWin::KeyboardLayout::~KeyboardLayout()
libkwin.so.6:KWin::KeyboardLayout::~KeyboardLayout()
libkwin.so.6:KWin::KeyboardLayout::~KeyboardLayout()
libkwin.so.6:KWin::QuickSceneView::resetDirty()
libkwin.so.6:KWin::QuickSceneView::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::QuickSceneView::qt_metacast(char const*)
libkwin.so.6:KWin::QuickSceneView::setRootItem(QQuickItem*)
libkwin.so.6:KWin::QuickSceneView::scheduleRepaint()
libkwin.so.6:KWin::QuickSceneView::qmlAttachedProperties(QObject*)
libkwin.so.6:KWin::QuickSceneView::findView(QQuickItem*)
libkwin.so.6:KWin::QuickSceneView::markDirty()
libkwin.so.6:KWin::QuickSceneView::QuickSceneView(KWin::QuickSceneEffect*, KWin::Output*)
libkwin.so.6:KWin::QuickSceneView::QuickSceneView(KWin::QuickSceneEffect*, KWin::Output*)
libkwin.so.6:KWin::QuickSceneView::~QuickSceneView()
libkwin.so.6:KWin::QuickSceneView::~QuickSceneView()
libkwin.so.6:KWin::QuickSceneView::~QuickSceneView()
libkwin.so.6:KWin::RenderGeometry::appendSubQuad(KWin::WindowQuad const&, QRectF const&, double)
libkwin.so.6:KWin::RenderGeometry::appendWindowQuad(KWin::WindowQuad const&, double)
libkwin.so.6:KWin::RenderGeometry::appendWindowVertex(KWin::WindowVertex const&, double)
libkwin.so.6:KWin::RenderGeometry::postProcessTextureCoordinates(QMatrix4x4 const&)
libkwin.so.6:KWin::RenderGeometry::copy(std::span<KWin::GLVertex2D, 18446744073709551615ul>)
libkwin.so.6:KWin::RenderViewport::RenderViewport(QRectF const&, double, KWin::RenderTarget const&)
libkwin.so.6:KWin::RenderViewport::RenderViewport(QRectF const&, double, KWin::RenderTarget const&)
libkwin.so.6:KWin::ScriptedEffect::readConfig(QString const&, QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::setUniform(unsigned int, QString const&, QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScriptedEffect::qt_metacast(char const*)
libkwin.so.6:KWin::ScriptedEffect::reconfigure(QFlags<KWin::Effect::ReconfigureFlag>)
libkwin.so.6:KWin::ScriptedEffect::freezeInTime(QList<unsigned long long> const&, long long)
libkwin.so.6:KWin::ScriptedEffect::freezeInTime(unsigned long long, long long)
libkwin.so.6:KWin::ScriptedEffect::configChanged()
libkwin.so.6:KWin::ScriptedEffect::animate_helper(QJSValue const&, KWin::ScriptedEffect::AnimationType)
libkwin.so.6:KWin::ScriptedEffect::animationEnded(KWin::EffectWindow*, KWin::AnimationEffect::Attribute, unsigned int)
libkwin.so.6:KWin::ScriptedEffect::animationEnded(KWin::EffectWindow*, unsigned long long)
libkwin.so.6:KWin::ScriptedEffect::borderActivated(KWin::ElectricBorder)
libkwin.so.6:KWin::ScriptedEffect::registerShortcut(QString const&, QString const&, QString const&, QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::addFragmentShader(KWin::ScriptedEffect::ShaderTrait, QString const&)
libkwin.so.6:KWin::ScriptedEffect::registerScreenEdge(int, QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::unregisterScreenEdge(int)
libkwin.so.6:KWin::ScriptedEffect::registerTouchScreenEdge(int, QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::unregisterTouchScreenEdge(int)
libkwin.so.6:KWin::ScriptedEffect::registerRealtimeScreenEdge(int, QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::isActiveFullScreenEffectChanged()
libkwin.so.6:KWin::ScriptedEffect::set(KWin::EffectWindow*, KWin::AnimationEffect::Attribute, int, QJSValue const&, QJSValue const&, unsigned int, int, int, bool, bool, unsigned int)
libkwin.so.6:KWin::ScriptedEffect::set(QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::grab(KWin::EffectWindow*, KWin::ScriptedEffect::DataRole, bool)
libkwin.so.6:KWin::ScriptedEffect::init(QString const&, QString const&)
libkwin.so.6:KWin::ScriptedEffect::cancel(QList<unsigned long long> const&)
libkwin.so.6:KWin::ScriptedEffect::cancel(unsigned long long)
libkwin.so.6:KWin::ScriptedEffect::create(KPluginMetaData const&)
libkwin.so.6:KWin::ScriptedEffect::create(QString const&, QString const&, int, QString const&, bool)
libkwin.so.6:KWin::ScriptedEffect::ungrab(KWin::EffectWindow*, KWin::ScriptedEffect::DataRole)
libkwin.so.6:KWin::ScriptedEffect::animate(KWin::EffectWindow*, KWin::AnimationEffect::Attribute, int, QJSValue const&, QJSValue const&, unsigned int, int, int, bool, bool, unsigned int)
libkwin.so.6:KWin::ScriptedEffect::animate(QJSValue const&)
libkwin.so.6:KWin::ScriptedEffect::complete(QList<unsigned long long> const&)
libkwin.so.6:KWin::ScriptedEffect::complete(unsigned long long)
libkwin.so.6:KWin::ScriptedEffect::redirect(QList<unsigned long long> const&, KWin::AnimationEffect::Direction, QFlags<KWin::AnimationEffect::TerminationFlag>)
libkwin.so.6:KWin::ScriptedEffect::redirect(unsigned long long, KWin::AnimationEffect::Direction, QFlags<KWin::AnimationEffect::TerminationFlag>)
libkwin.so.6:KWin::ScriptedEffect::retarget(QList<unsigned long long> const&, QJSValue const&, int)
libkwin.so.6:KWin::ScriptedEffect::retarget(unsigned long long, QJSValue const&, int)
libkwin.so.6:KWin::ScriptedEffect::isGrabbed(KWin::EffectWindow*, KWin::ScriptedEffect::DataRole)
libkwin.so.6:KWin::ScriptedEffect::supported()
libkwin.so.6:KWin::ScriptedEffect::ScriptedEffect()
libkwin.so.6:KWin::ScriptedEffect::ScriptedEffect()
libkwin.so.6:KWin::ScriptedEffect::~ScriptedEffect()
libkwin.so.6:KWin::ScriptedEffect::~ScriptedEffect()
libkwin.so.6:KWin::ScriptedEffect::~ScriptedEffect()
libkwin.so.6:KWin::SlideInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SlideInterface::qt_metacast(char const*)
libkwin.so.6:KWin::SlideInterface::SlideInterface(wl_resource*)
libkwin.so.6:KWin::SlideInterface::SlideInterface(wl_resource*)
libkwin.so.6:KWin::SlideInterface::~SlideInterface()
libkwin.so.6:KWin::SlideInterface::~SlideInterface()
libkwin.so.6:KWin::SlideInterface::~SlideInterface()
libkwin.so.6:KWin::SurfaceItemX11::preprocess()
libkwin.so.6:KWin::SurfaceItemX11::fetchDamage()
libkwin.so.6:KWin::SurfaceItemX11::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceItemX11::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceItemX11::createPixmap()
libkwin.so.6:KWin::SurfaceItemX11::forgetDamage()
libkwin.so.6:KWin::SurfaceItemX11::destroyDamage()
libkwin.so.6:KWin::SurfaceItemX11::processDamage()
libkwin.so.6:KWin::SurfaceItemX11::waitForDamage()
libkwin.so.6:KWin::SurfaceItemX11::handleShapeChanged()
libkwin.so.6:KWin::SurfaceItemX11::handleBufferGeometryChanged()
libkwin.so.6:KWin::SurfaceItemX11::SurfaceItemX11(KWin::X11Window*, KWin::Item*)
libkwin.so.6:KWin::SurfaceItemX11::SurfaceItemX11(KWin::X11Window*, KWin::Item*)
libkwin.so.6:KWin::SurfaceItemX11::~SurfaceItemX11()
libkwin.so.6:KWin::SurfaceItemX11::~SurfaceItemX11()
libkwin.so.6:KWin::SurfaceItemX11::~SurfaceItemX11()
libkwin.so.6:KWin::SurfaceTexture::~SurfaceTexture()
libkwin.so.6:KWin::SurfaceTexture::~SurfaceTexture()
libkwin.so.6:KWin::SurfaceTexture::~SurfaceTexture()
libkwin.so.6:KWin::TouchInterface::sendCancel()
libkwin.so.6:KWin::TouchInterface::sendMotion(int, QPointF const&)
libkwin.so.6:KWin::TouchInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TouchInterface::qt_metacast(char const*)
libkwin.so.6:KWin::TouchInterface::sendUp(int, unsigned int)
libkwin.so.6:KWin::TouchInterface::sendDown(int, unsigned int, QPointF const&, KWin::SurfaceInterface*)
libkwin.so.6:KWin::TouchInterface::sendFrame()
libkwin.so.6:KWin::TouchInterface::TouchInterface(KWin::SeatInterface*)
libkwin.so.6:KWin::TouchInterface::TouchInterface(KWin::SeatInterface*)
libkwin.so.6:KWin::TouchInterface::~TouchInterface()
libkwin.so.6:KWin::TouchInterface::~TouchInterface()
libkwin.so.6:KWin::TouchInterface::~TouchInterface()
libkwin.so.6:KWin::VirtualBackend::initialize()
libkwin.so.6:KWin::VirtualBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::VirtualBackend::qt_metacast(char const*)
libkwin.so.6:KWin::VirtualBackend::createOutput(KWin::VirtualBackend::OutputInfo const&)
libkwin.so.6:KWin::VirtualBackend::setEglDisplay(std::unique_ptr<KWin::EglDisplay, std::default_delete<KWin::EglDisplay> >&&)
libkwin.so.6:KWin::VirtualBackend::setVirtualOutputs(QList<KWin::VirtualBackend::OutputInfo> const&)
libkwin.so.6:KWin::VirtualBackend::virtualOutputsSet(bool)
libkwin.so.6:KWin::VirtualBackend::createOpenGLBackend()
libkwin.so.6:KWin::VirtualBackend::createQPainterBackend()
libkwin.so.6:KWin::VirtualBackend::addOutput(KWin::VirtualBackend::OutputInfo const&)
libkwin.so.6:KWin::VirtualBackend::VirtualBackend(QObject*)
libkwin.so.6:KWin::VirtualBackend::VirtualBackend(QObject*)
libkwin.so.6:KWin::VirtualBackend::~VirtualBackend()
libkwin.so.6:KWin::VirtualBackend::~VirtualBackend()
libkwin.so.6:KWin::VirtualBackend::~VirtualBackend()
libkwin.so.6:KWin::VirtualDesktop::nameChanged()
libkwin.so.6:KWin::VirtualDesktop::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::VirtualDesktop::qt_metacast(char const*)
libkwin.so.6:KWin::VirtualDesktop::aboutToBeDestroyed()
libkwin.so.6:KWin::VirtualDesktop::setX11DesktopNumber(unsigned int)
libkwin.so.6:KWin::VirtualDesktop::x11DesktopNumberChanged()
libkwin.so.6:KWin::VirtualDesktop::setId(QString const&)
libkwin.so.6:KWin::VirtualDesktop::setName(QString const&)
libkwin.so.6:KWin::VirtualDesktop::VirtualDesktop(QObject*)
libkwin.so.6:KWin::VirtualDesktop::VirtualDesktop(QObject*)
libkwin.so.6:KWin::VirtualDesktop::~VirtualDesktop()
libkwin.so.6:KWin::VirtualDesktop::~VirtualDesktop()
libkwin.so.6:KWin::VirtualDesktop::~VirtualDesktop()
libkwin.so.6:KWin::WorkspaceScene::paintWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::WindowItem*, int, QRegion const&)
libkwin.so.6:KWin::WorkspaceScene::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WorkspaceScene::qt_metacast(char const*)
libkwin.so.6:KWin::WorkspaceScene::frameRendered()
libkwin.so.6:KWin::WorkspaceScene::preFrameRender()
libkwin.so.6:KWin::WorkspaceScene::finalDrawWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::WorkspaceScene::finalPaintScreen(KWin::RenderTarget const&, KWin::RenderViewport const&, int, QRegion const&, KWin::Output*)
libkwin.so.6:KWin::WorkspaceScene::finalPaintWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::WorkspaceScene::createDndIconItem()
libkwin.so.6:KWin::WorkspaceScene::paintSimpleScreen(KWin::RenderTarget const&, KWin::RenderViewport const&, int, QRegion const&)
libkwin.so.6:KWin::WorkspaceScene::clearStackingOrder()
libkwin.so.6:KWin::WorkspaceScene::destroyDndIconItem()
libkwin.so.6:KWin::WorkspaceScene::paintGenericScreen(KWin::RenderTarget const&, KWin::RenderViewport const&, int, KWin::Output*)
libkwin.so.6:KWin::WorkspaceScene::createStackingOrder()
libkwin.so.6:KWin::WorkspaceScene::doneOpenGLContextCurrent()
libkwin.so.6:KWin::WorkspaceScene::makeOpenGLContextCurrent()
libkwin.so.6:KWin::WorkspaceScene::preparePaintSimpleScreen()
libkwin.so.6:KWin::WorkspaceScene::preparePaintGenericScreen()
libkwin.so.6:KWin::WorkspaceScene::frame(KWin::SceneDelegate*, KWin::OutputFrame*)
libkwin.so.6:KWin::WorkspaceScene::paint(KWin::RenderTarget const&, QRegion const&)
libkwin.so.6:KWin::WorkspaceScene::prePaint(KWin::SceneDelegate*)
libkwin.so.6:KWin::WorkspaceScene::postPaint()
libkwin.so.6:KWin::WorkspaceScene::WorkspaceScene(std::unique_ptr<KWin::ItemRenderer, std::default_delete<KWin::ItemRenderer> >)
libkwin.so.6:KWin::WorkspaceScene::WorkspaceScene(std::unique_ptr<KWin::ItemRenderer, std::default_delete<KWin::ItemRenderer> >)
libkwin.so.6:KWin::WorkspaceScene::~WorkspaceScene()
libkwin.so.6:KWin::WorkspaceScene::~WorkspaceScene()
libkwin.so.6:KWin::WorkspaceScene::~WorkspaceScene()
libkwin.so.6:KWin::X11EventFilter::X11EventFilter(QList<int> const&)
libkwin.so.6:KWin::X11EventFilter::X11EventFilter(int, int, QList<int> const&)
libkwin.so.6:KWin::X11EventFilter::X11EventFilter(int, int, int)
libkwin.so.6:KWin::X11EventFilter::X11EventFilter(QList<int> const&)
libkwin.so.6:KWin::X11EventFilter::X11EventFilter(int, int, QList<int> const&)
libkwin.so.6:KWin::X11EventFilter::X11EventFilter(int, int, int)
libkwin.so.6:KWin::X11EventFilter::~X11EventFilter()
libkwin.so.6:KWin::X11EventFilter::~X11EventFilter()
libkwin.so.6:KWin::X11EventFilter::~X11EventFilter()
libkwin.so.6:KWin::XRenderPicture::fromImage(QImage const&)
libkwin.so.6:KWin::XRenderPicture::XRenderPicture(QImage const&)
libkwin.so.6:KWin::XRenderPicture::XRenderPicture(unsigned int, int)
libkwin.so.6:KWin::XRenderPicture::XRenderPicture(QImage const&)
libkwin.so.6:KWin::XRenderPicture::XRenderPicture(unsigned int, int)
libkwin.so.6:KWin::AnimationEffect::paintWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion, KWin::WindowPaintData&)
libkwin.so.6:KWin::AnimationEffect::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AnimationEffect::qt_metacast(char const*)
libkwin.so.6:KWin::AnimationEffect::setMetaData(KWin::AnimationEffect::MetaType, unsigned int, unsigned int&)
libkwin.so.6:KWin::AnimationEffect::freezeInTime(unsigned long long, long long)
libkwin.so.6:KWin::AnimationEffect::_windowClosed(KWin::EffectWindow*)
libkwin.so.6:KWin::AnimationEffect::_windowDeleted(KWin::EffectWindow*)
libkwin.so.6:KWin::AnimationEffect::animationEnded(KWin::EffectWindow*, KWin::AnimationEffect::Attribute, unsigned int)
libkwin.so.6:KWin::AnimationEffect::prePaintWindow(KWin::EffectWindow*, KWin::WindowPrePaintData&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::AnimationEffect::triggerRepaint()
libkwin.so.6:KWin::AnimationEffect::postPaintScreen()
libkwin.so.6:KWin::AnimationEffect::genericAnimation(KWin::EffectWindow*, KWin::WindowPaintData&, float, unsigned int)
libkwin.so.6:KWin::AnimationEffect::updateLayerRepaints()
libkwin.so.6:KWin::AnimationEffect::_windowExpandedGeometryChanged(KWin::EffectWindow*)
libkwin.so.6:KWin::AnimationEffect::init()
libkwin.so.6:KWin::AnimationEffect::cancel(unsigned long long)
libkwin.so.6:KWin::AnimationEffect::complete(unsigned long long)
libkwin.so.6:KWin::AnimationEffect::metaData(KWin::AnimationEffect::MetaType, unsigned int)
libkwin.so.6:KWin::AnimationEffect::redirect(unsigned long long, KWin::AnimationEffect::Direction, QFlags<KWin::AnimationEffect::TerminationFlag>)
libkwin.so.6:KWin::AnimationEffect::retarget(unsigned long long, KWin::FPx2, int)
libkwin.so.6:KWin::AnimationEffect::p_animate(KWin::EffectWindow*, KWin::AnimationEffect::Attribute, unsigned int, int, KWin::FPx2, QEasingCurve const&, int, KWin::FPx2, bool, bool, bool, KWin::GLShader*)
libkwin.so.6:KWin::AnimationEffect::AnimationEffect()
libkwin.so.6:KWin::AnimationEffect::AnimationEffect()
libkwin.so.6:KWin::AnimationEffect::~AnimationEffect()
libkwin.so.6:KWin::AnimationEffect::~AnimationEffect()
libkwin.so.6:KWin::AnimationEffect::~AnimationEffect()
libkwin.so.6:KWin::CrossFadeEffect::drawWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::CrossFadeEffect::unredirect(KWin::EffectWindow*)
libkwin.so.6:KWin::CrossFadeEffect::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CrossFadeEffect::qt_metacast(char const*)
libkwin.so.6:KWin::CrossFadeEffect::handleWindowDeleted(KWin::EffectWindow*)
libkwin.so.6:KWin::CrossFadeEffect::redirect(KWin::EffectWindow*)
libkwin.so.6:KWin::CrossFadeEffect::setShader(KWin::EffectWindow*, KWin::GLShader*)
libkwin.so.6:KWin::CrossFadeEffect::CrossFadeEffect(QObject*)
libkwin.so.6:KWin::CrossFadeEffect::CrossFadeEffect(QObject*)
libkwin.so.6:KWin::CrossFadeEffect::~CrossFadeEffect()
libkwin.so.6:KWin::CrossFadeEffect::~CrossFadeEffect()
libkwin.so.6:KWin::CrossFadeEffect::~CrossFadeEffect()
libkwin.so.6:KWin::DragAndDropIcon::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DragAndDropIcon::qt_metacast(char const*)
libkwin.so.6:KWin::DragAndDropIcon::role()
libkwin.so.6:KWin::DragAndDropIcon::commit()
libkwin.so.6:KWin::DragAndDropIcon::changed()
libkwin.so.6:KWin::DragAndDropIcon::DragAndDropIcon(KWin::SurfaceInterface*)
libkwin.so.6:KWin::DragAndDropIcon::DragAndDropIcon(KWin::SurfaceInterface*)
libkwin.so.6:KWin::DragAndDropIcon::~DragAndDropIcon()
libkwin.so.6:KWin::DragAndDropIcon::~DragAndDropIcon()
libkwin.so.6:KWin::DragAndDropIcon::~DragAndDropIcon()
libkwin.so.6:KWin::EGLImageTexture::create(KWin::EglDisplay*, void*, int, QSize const&, bool)
libkwin.so.6:KWin::EGLImageTexture::EGLImageTexture(KWin::EglDisplay*, void*, unsigned int, int, QSize const&, unsigned int)
libkwin.so.6:KWin::EGLImageTexture::EGLImageTexture(KWin::EglDisplay*, void*, unsigned int, int, QSize const&, unsigned int)
libkwin.so.6:KWin::EGLImageTexture::~EGLImageTexture()
libkwin.so.6:KWin::EGLImageTexture::~EGLImageTexture()
libkwin.so.6:KWin::EGLImageTexture::~EGLImageTexture()
libkwin.so.6:KWin::FakeInputDevice::setEnabled(bool)
libkwin.so.6:KWin::FakeInputDevice::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::FakeInputDevice::qt_metacast(char const*)
libkwin.so.6:KWin::FakeInputDevice::setAuthenticated(bool)
libkwin.so.6:KWin::FakeInputDevice::setLeds(QFlags<KWin::LED>)
libkwin.so.6:KWin::FakeInputDevice::FakeInputDevice(QObject*)
libkwin.so.6:KWin::FakeInputDevice::FakeInputDevice(QObject*)
libkwin.so.6:KWin::FilteredDisplay::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::FilteredDisplay::qt_metacast(char const*)
libkwin.so.6:KWin::FilteredDisplay::FilteredDisplay(QObject*)
libkwin.so.6:KWin::FilteredDisplay::FilteredDisplay(QObject*)
libkwin.so.6:KWin::FilteredDisplay::~FilteredDisplay()
libkwin.so.6:KWin::FilteredDisplay::~FilteredDisplay()
libkwin.so.6:KWin::FilteredDisplay::~FilteredDisplay()
libkwin.so.6:KWin::GlLookUpTable3D::bind()
libkwin.so.6:KWin::GlLookUpTable3D::create(std::function<QVector3D (unsigned long, unsigned long, unsigned long)> const&, unsigned long, unsigned long, unsigned long)
libkwin.so.6:KWin::GlLookUpTable3D::GlLookUpTable3D(unsigned int, unsigned long, unsigned long, unsigned long)
libkwin.so.6:KWin::GlLookUpTable3D::GlLookUpTable3D(unsigned int, unsigned long, unsigned long, unsigned long)
libkwin.so.6:KWin::GlLookUpTable3D::~GlLookUpTable3D()
libkwin.so.6:KWin::GlLookUpTable3D::~GlLookUpTable3D()
libkwin.so.6:KWin::LibinputBackend::initialize()
libkwin.so.6:KWin::LibinputBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LibinputBackend::qt_metacast(char const*)
libkwin.so.6:KWin::LibinputBackend::updateScreens()
libkwin.so.6:KWin::LibinputBackend::LibinputBackend(KWin::Session*, QObject*)
libkwin.so.6:KWin::LibinputBackend::LibinputBackend(KWin::Session*, QObject*)
libkwin.so.6:KWin::LibinputBackend::~LibinputBackend()
libkwin.so.6:KWin::LibinputBackend::~LibinputBackend()
libkwin.so.6:KWin::LibinputBackend::~LibinputBackend()
libkwin.so.6:KWin::OffscreenEffect::drawWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::OffscreenEffect::unredirect(KWin::EffectWindow*)
libkwin.so.6:KWin::OffscreenEffect::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OffscreenEffect::qt_metacast(char const*)
libkwin.so.6:KWin::OffscreenEffect::setupConnections()
libkwin.so.6:KWin::OffscreenEffect::destroyConnections()
libkwin.so.6:KWin::OffscreenEffect::handleWindowDamaged(KWin::EffectWindow*)
libkwin.so.6:KWin::OffscreenEffect::handleWindowDeleted(KWin::EffectWindow*)
libkwin.so.6:KWin::OffscreenEffect::setVertexSnappingMode(KWin::RenderGeometry::VertexSnappingMode)
libkwin.so.6:KWin::OffscreenEffect::apply(KWin::EffectWindow*, int, KWin::WindowPaintData&, KWin::WindowQuadList&)
libkwin.so.6:KWin::OffscreenEffect::redirect(KWin::EffectWindow*)
libkwin.so.6:KWin::OffscreenEffect::setShader(KWin::EffectWindow*, KWin::GLShader*)
libkwin.so.6:KWin::OffscreenEffect::supported()
libkwin.so.6:KWin::OffscreenEffect::OffscreenEffect(QObject*)
libkwin.so.6:KWin::OffscreenEffect::OffscreenEffect(QObject*)
libkwin.so.6:KWin::OffscreenEffect::~OffscreenEffect()
libkwin.so.6:KWin::OffscreenEffect::~OffscreenEffect()
libkwin.so.6:KWin::OffscreenEffect::~OffscreenEffect()
libkwin.so.6:KWin::OutputInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OutputInterface::qt_metacast(char const*)
libkwin.so.6:KWin::OutputInterface::scheduleDone()
libkwin.so.6:KWin::OutputInterface::get(wl_resource*)
libkwin.so.6:KWin::OutputInterface::done(wl_client*)
libkwin.so.6:KWin::OutputInterface::bound(KWin::ClientConnection*, wl_resource*)
libkwin.so.6:KWin::OutputInterface::remove()
libkwin.so.6:KWin::OutputInterface::removed()
libkwin.so.6:KWin::OutputInterface::OutputInterface(KWin::Display*, KWin::Output*, QObject*)
libkwin.so.6:KWin::OutputInterface::OutputInterface(KWin::Display*, KWin::Output*, QObject*)
libkwin.so.6:KWin::OutputInterface::~OutputInterface()
libkwin.so.6:KWin::OutputInterface::~OutputInterface()
libkwin.so.6:KWin::OutputInterface::~OutputInterface()
libkwin.so.6:KWin::QPainterBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::QPainterBackend::qt_metacast(char const*)
libkwin.so.6:KWin::QPainterBackend::createSurfaceTextureWayland(KWin::SurfacePixmap*)
libkwin.so.6:KWin::QPainterBackend::setFailed(QString const&)
libkwin.so.6:KWin::QPainterBackend::QPainterBackend()
libkwin.so.6:KWin::QPainterBackend::QPainterBackend()
libkwin.so.6:KWin::QPainterBackend::~QPainterBackend()
libkwin.so.6:KWin::QPainterBackend::~QPainterBackend()
libkwin.so.6:KWin::QPainterBackend::~QPainterBackend()
libkwin.so.6:KWin::ShadowInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ShadowInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ShadowInterface::ShadowInterface(KWin::ShadowManagerInterface*, wl_resource*)
libkwin.so.6:KWin::ShadowInterface::ShadowInterface(KWin::ShadowManagerInterface*, wl_resource*)
libkwin.so.6:KWin::ShadowInterface::~ShadowInterface()
libkwin.so.6:KWin::ShadowInterface::~ShadowInterface()
libkwin.so.6:KWin::ShadowInterface::~ShadowInterface()
libkwin.so.6:KWin::ShmClientBuffer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ShmClientBuffer::qt_metacast(char const*)
libkwin.so.6:KWin::ShmClientBuffer::buffer_destroy(wl_client*, wl_resource*)
libkwin.so.6:KWin::ShmClientBuffer::buffer_destroy_resource(wl_resource*)
libkwin.so.6:KWin::ShmClientBuffer::get(wl_resource*)
libkwin.so.6:KWin::ShmClientBuffer::map(QFlags<KWin::GraphicsBuffer::MapFlag>)
libkwin.so.6:KWin::ShmClientBuffer::unmap()
libkwin.so.6:KWin::ShmClientBuffer::ShmClientBuffer(KWin::ShmPool*, KWin::ShmAttributes, wl_client*, unsigned int)
libkwin.so.6:KWin::ShmClientBuffer::ShmClientBuffer(KWin::ShmPool*, KWin::ShmAttributes, wl_client*, unsigned int)
libkwin.so.6:KWin::ShmClientBuffer::~ShmClientBuffer()
libkwin.so.6:KWin::ShmClientBuffer::~ShmClientBuffer()
libkwin.so.6:KWin::ShmClientBuffer::~ShmClientBuffer()
libkwin.so.6:KWin::UserActionsMenu::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::UserActionsMenu::qt_metacast(char const*)
libkwin.so.6:KWin::UserActionsMenu::helperDialog(QString const&)
libkwin.so.6:KWin::UserActionsMenu::initScreenPopup()
libkwin.so.6:KWin::UserActionsMenu::menuAboutToHide()
libkwin.so.6:KWin::UserActionsMenu::menuAboutToShow()
libkwin.so.6:KWin::UserActionsMenu::initDesktopPopup()
libkwin.so.6:KWin::UserActionsMenu::initActivityPopup()
libkwin.so.6:KWin::UserActionsMenu::slotWindowOperation(QAction*)
libkwin.so.6:KWin::UserActionsMenu::showHideActivityMenu()
libkwin.so.6:KWin::UserActionsMenu::screenPopupAboutToShow()
libkwin.so.6:KWin::UserActionsMenu::desktopPopupAboutToShow()
libkwin.so.6:KWin::UserActionsMenu::activityPopupAboutToShow()
libkwin.so.6:KWin::UserActionsMenu::multipleDesktopsPopupAboutToShow()
libkwin.so.6:KWin::UserActionsMenu::init()
libkwin.so.6:KWin::UserActionsMenu::show(QRect const&, KWin::Window*)
libkwin.so.6:KWin::UserActionsMenu::close()
libkwin.so.6:KWin::UserActionsMenu::discard()
libkwin.so.6:KWin::UserActionsMenu::grabInput()
libkwin.so.6:KWin::UserActionsMenu::UserActionsMenu(QObject*)
libkwin.so.6:KWin::UserActionsMenu::UserActionsMenu(QObject*)
libkwin.so.6:KWin::UserActionsMenu::~UserActionsMenu()
libkwin.so.6:KWin::UserActionsMenu::~UserActionsMenu()
libkwin.so.6:KWin::UserActionsMenu::~UserActionsMenu()
libkwin.so.6:KWin::WindowPaintData::setOpacity(double)
libkwin.so.6:KWin::WindowPaintData::setBrightness(double)
libkwin.so.6:KWin::WindowPaintData::multiplyOpacity(double)
libkwin.so.6:KWin::WindowPaintData::multiplyBrightness(double)
libkwin.so.6:KWin::WindowPaintData::multiplySaturation(double)
libkwin.so.6:KWin::WindowPaintData::setCrossFadeProgress(double)
libkwin.so.6:KWin::WindowPaintData::WindowPaintData(KWin::WindowPaintData const&)
libkwin.so.6:KWin::WindowPaintData::WindowPaintData()
libkwin.so.6:KWin::WindowPaintData::WindowPaintData(KWin::WindowPaintData const&)
libkwin.so.6:KWin::WindowPaintData::WindowPaintData()
libkwin.so.6:KWin::WindowPaintData::~WindowPaintData()
libkwin.so.6:KWin::WindowPaintData::~WindowPaintData()
libkwin.so.6:KWin::WindowPaintData::~WindowPaintData()
libkwin.so.6:KWin::WindowPaintData::operator*=(QVector2D const&)
libkwin.so.6:KWin::WindowPaintData::operator*=(QVector3D const&)
libkwin.so.6:KWin::WindowPaintData::operator*=(double)
libkwin.so.6:KWin::WindowPaintData::operator+=(QPoint const&)
libkwin.so.6:KWin::WindowPaintData::operator+=(QPointF const&)
libkwin.so.6:KWin::WindowPaintData::operator+=(QVector2D const&)
libkwin.so.6:KWin::WindowPaintData::operator+=(QVector3D const&)
libkwin.so.6:KWin::ungrabXKeyboard()
libkwin.so.6:KWin::AppMenuInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AppMenuInterface::qt_metacast(char const*)
libkwin.so.6:KWin::AppMenuInterface::addressChanged(KWin::AppMenuInterface::InterfaceAddress)
libkwin.so.6:KWin::AppMenuInterface::AppMenuInterface(KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::AppMenuInterface::AppMenuInterface(KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::AppMenuInterface::~AppMenuInterface()
libkwin.so.6:KWin::AppMenuInterface::~AppMenuInterface()
libkwin.so.6:KWin::AppMenuInterface::~AppMenuInterface()
libkwin.so.6:KWin::ClientConnection::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ClientConnection::qt_metacast(char const*)
libkwin.so.6:KWin::ClientConnection::disconnected(KWin::ClientConnection*)
libkwin.so.6:KWin::ClientConnection::setScaleOverride(double)
libkwin.so.6:KWin::ClientConnection::aboutToBeDestroyed()
libkwin.so.6:KWin::ClientConnection::scaleOverrideChanged()
libkwin.so.6:KWin::ClientConnection::setSecurityContextAppId(QString const&)
libkwin.so.6:KWin::ClientConnection::flush()
libkwin.so.6:KWin::ClientConnection::destroy()
libkwin.so.6:KWin::ClientConnection::ClientConnection(wl_client*, KWin::Display*)
libkwin.so.6:KWin::ClientConnection::ClientConnection(wl_client*, KWin::Display*)
libkwin.so.6:KWin::ClientConnection::~ClientConnection()
libkwin.so.6:KWin::ClientConnection::~ClientConnection()
libkwin.so.6:KWin::ClientConnection::~ClientConnection()
libkwin.so.6:KWin::ClientConnection::operator wl_client*()
libkwin.so.6:KWin::ColorDescription::encodedToNits(QVector3D const&, KWin::NamedTransferFunction, double)
libkwin.so.6:KWin::ColorDescription::nitsToEncoded(QVector3D const&, KWin::NamedTransferFunction, double)
libkwin.so.6:KWin::ColorDescription::ColorDescription(KWin::NamedColorimetry, KWin::NamedTransferFunction, double, double, double, double, KWin::Colorimetry const&)
libkwin.so.6:KWin::ColorDescription::ColorDescription(KWin::Colorimetry const&, KWin::NamedTransferFunction, double, double, double, double, KWin::Colorimetry const&)
libkwin.so.6:KWin::ColorDescription::ColorDescription(KWin::NamedColorimetry, KWin::NamedTransferFunction, double, double, double, double, KWin::Colorimetry const&)
libkwin.so.6:KWin::ColorDescription::ColorDescription(KWin::Colorimetry const&, KWin::NamedTransferFunction, double, double, double, double, KWin::Colorimetry const&)
libkwin.so.6:KWin::EglSwapchainSlot::create(KWin::EglContext*, KWin::GraphicsBuffer*)
libkwin.so.6:KWin::EglSwapchainSlot::EglSwapchainSlot(KWin::GraphicsBuffer*, std::unique_ptr<KWin::GLFramebuffer, std::default_delete<KWin::GLFramebuffer> >&&, std::shared_ptr<KWin::GLTexture> const&)
libkwin.so.6:KWin::EglSwapchainSlot::EglSwapchainSlot(KWin::GraphicsBuffer*, std::unique_ptr<KWin::GLFramebuffer, std::default_delete<KWin::GLFramebuffer> >&&, std::shared_ptr<KWin::GLTexture> const&)
libkwin.so.6:KWin::EglSwapchainSlot::~EglSwapchainSlot()
libkwin.so.6:KWin::EglSwapchainSlot::~EglSwapchainSlot()
libkwin.so.6:KWin::GLTexturePrivate::updateMatrix()
libkwin.so.6:KWin::GLTexturePrivate::GLTexturePrivate()
libkwin.so.6:KWin::GLTexturePrivate::GLTexturePrivate()
libkwin.so.6:KWin::GLTexturePrivate::~GLTexturePrivate()
libkwin.so.6:KWin::GLTexturePrivate::~GLTexturePrivate()
libkwin.so.6:KWin::GLTexturePrivate::~GLTexturePrivate()
libkwin.so.6:KWin::InputEventFilter::touchFrame()
libkwin.so.6:KWin::InputEventFilter::wheelEvent(KWin::WheelEvent*)
libkwin.so.6:KWin::InputEventFilter::switchEvent(KWin::SwitchEvent*)
libkwin.so.6:KWin::InputEventFilter::touchCancel()
libkwin.so.6:KWin::InputEventFilter::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::pointerEvent(KWin::MouseEvent*, unsigned int)
libkwin.so.6:KWin::InputEventFilter::pointerFrame()
libkwin.so.6:KWin::InputEventFilter::holdGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::pinchGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::swipeGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::tabletToolEvent(KWin::TabletEvent*)
libkwin.so.6:KWin::InputEventFilter::holdGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::passToInputMethod(QKeyEvent*)
libkwin.so.6:KWin::InputEventFilter::pinchGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::swipeGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::pinchGestureUpdate(double, double, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::swipeGestureUpdate(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::tabletPadRingEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::passToWaylandServer(QKeyEvent*)
libkwin.so.6:KWin::InputEventFilter::tabletPadStripEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::holdGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::tabletPadButtonEvent(unsigned int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::pinchGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::swipeGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::tabletToolButtonEvent(unsigned int, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::keyEvent(KWin::KeyEvent*)
libkwin.so.6:KWin::InputEventFilter::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::InputEventFilter::InputEventFilter()
libkwin.so.6:KWin::InputEventFilter::InputEventFilter()
libkwin.so.6:KWin::InputEventFilter::~InputEventFilter()
libkwin.so.6:KWin::InputEventFilter::~InputEventFilter()
libkwin.so.6:KWin::InputEventFilter::~InputEventFilter()
libkwin.so.6:KWin::InputRedirection::updateLeds(QFlags<KWin::LED>)
libkwin.so.6:KWin::InputRedirection::deviceAdded(KWin::InputDevice*)
libkwin.so.6:KWin::InputRedirection::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputRedirection::qt_metacast(char const*)
libkwin.so.6:KWin::InputRedirection::warpPointer(QPointF const&)
libkwin.so.6:KWin::InputRedirection::findToplevel(QPointF const&)
libkwin.so.6:KWin::InputRedirection::deviceRemoved(KWin::InputDevice*)
libkwin.so.6:KWin::InputRedirection::updateScreens()
libkwin.so.6:KWin::InputRedirection::addInputDevice(KWin::InputDevice*)
libkwin.so.6:KWin::InputRedirection::setupWorkspace()
libkwin.so.6:KWin::InputRedirection::addIdleDetector(KWin::IdleDetector*)
libkwin.so.6:KWin::InputRedirection::addInputBackend(std::unique_ptr<KWin::InputBackend, std::default_delete<KWin::InputBackend> >&&)
libkwin.so.6:KWin::InputRedirection::enableTouchpads()
libkwin.so.6:KWin::InputRedirection::hasTouchChanged(bool)
libkwin.so.6:KWin::InputRedirection::keyStateChanged(unsigned int, KWin::InputRedirection::KeyboardKeyState)
libkwin.so.6:KWin::InputRedirection::toggleTouchpads()
libkwin.so.6:KWin::InputRedirection::addIdleInhibitor(KWin::Window*)
libkwin.so.6:KWin::InputRedirection::disableTouchpads()
libkwin.so.6:KWin::InputRedirection::hasPointerChanged(bool)
libkwin.so.6:KWin::InputRedirection::removeInputDevice(KWin::InputDevice*)
libkwin.so.6:KWin::InputRedirection::setupInputFilters()
libkwin.so.6:KWin::InputRedirection::hasKeyboardChanged(bool)
libkwin.so.6:KWin::InputRedirection::pointerAxisChanged(KWin::InputRedirection::PointerAxis, double)
libkwin.so.6:KWin::InputRedirection::removeIdleDetector(KWin::IdleDetector*)
libkwin.so.6:KWin::InputRedirection::setupInputBackends()
libkwin.so.6:KWin::InputRedirection::hasTabletModeSwitch()
libkwin.so.6:KWin::InputRedirection::registerGlobalAccel(KGlobalAccelInterface*)
libkwin.so.6:KWin::InputRedirection::removeIdleInhibitor(KWin::Window*)
libkwin.so.6:KWin::InputRedirection::setLastInputHandler(QObject*)
libkwin.so.6:KWin::InputRedirection::globalPointerChanged(QPointF const&)
libkwin.so.6:KWin::InputRedirection::installInputEventSpy(KWin::InputEventSpy*)
libkwin.so.6:KWin::InputRedirection::registerAxisShortcut(QFlags<Qt::KeyboardModifier>, KWin::PointerAxisDirection, QAction*)
libkwin.so.6:KWin::InputRedirection::simulateUserActivity()
libkwin.so.6:KWin::InputRedirection::setupTouchpadShortcuts()
libkwin.so.6:KWin::InputRedirection::uninstallInputEventSpy(KWin::InputEventSpy*)
libkwin.so.6:KWin::InputRedirection::installInputEventFilter(KWin::InputEventFilter*)
libkwin.so.6:KWin::InputRedirection::prependInputEventFilter(KWin::InputEventFilter*)
libkwin.so.6:KWin::InputRedirection::registerPointerShortcut(QFlags<Qt::KeyboardModifier>, Qt::MouseButton, QAction*)
libkwin.so.6:KWin::InputRedirection::handleInputConfigChanged(KConfigGroup const&)
libkwin.so.6:KWin::InputRedirection::keyboardModifiersChanged(QFlags<Qt::KeyboardModifier>, QFlags<Qt::KeyboardModifier>)
libkwin.so.6:KWin::InputRedirection::pointerButtonStateChanged(unsigned int, KWin::InputRedirection::PointerButtonState)
libkwin.so.6:KWin::InputRedirection::uninstallInputEventFilter(KWin::InputEventFilter*)
libkwin.so.6:KWin::InputRedirection::hasTabletModeSwitchChanged(bool)
libkwin.so.6:KWin::InputRedirection::updateAvailableInputDevices()
libkwin.so.6:KWin::InputRedirection::registerTouchpadPinchShortcut(KWin::PinchDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::InputRedirection::registerTouchpadSwipeShortcut(KWin::SwipeDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::InputRedirection::hasAlphaNumericKeyboardChanged(bool)
libkwin.so.6:KWin::InputRedirection::startInteractiveWindowSelection(std::function<void (KWin::Window*)>, QByteArray const&)
libkwin.so.6:KWin::InputRedirection::registerTouchscreenSwipeShortcut(KWin::SwipeDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::InputRedirection::startInteractivePositionSelection(std::function<void (QPoint const&)>)
libkwin.so.6:KWin::InputRedirection::forceRegisterTouchscreenSwipeShortcut(KWin::SwipeDirection, unsigned int, QAction*, std::function<void (double)>)
libkwin.so.6:KWin::InputRedirection::init()
libkwin.so.6:KWin::InputRedirection::create(QObject*)
libkwin.so.6:KWin::InputRedirection::InputRedirection(QObject*)
libkwin.so.6:KWin::InputRedirection::InputRedirection(QObject*)
libkwin.so.6:KWin::InputRedirection::~InputRedirection()
libkwin.so.6:KWin::InputRedirection::~InputRedirection()
libkwin.so.6:KWin::InputRedirection::~InputRedirection()
libkwin.so.6:KWin::PointerInterface::sendButton(unsigned int, KWin::PointerButtonState, KWin::ClientConnection*)
libkwin.so.6:KWin::PointerInterface::sendButton(unsigned int, KWin::PointerButtonState, unsigned int)
libkwin.so.6:KWin::PointerInterface::sendMotion(QPointF const&)
libkwin.so.6:KWin::PointerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PointerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PointerInterface::cursorChanged(std::variant<KWin::PointerSurfaceCursor*, QByteArray> const&)
libkwin.so.6:KWin::PointerInterface::focusedSurfaceChanged()
libkwin.so.6:KWin::PointerInterface::get(wl_resource*)
libkwin.so.6:KWin::PointerInterface::sendAxis(Qt::Orientation, double, int, KWin::PointerAxisSource, KWin::PointerAxisRelativeDirection)
libkwin.so.6:KWin::PointerInterface::sendEnter(KWin::SurfaceInterface*, QPointF const&, unsigned int)
libkwin.so.6:KWin::PointerInterface::sendFrame()
libkwin.so.6:KWin::PointerInterface::sendLeave(unsigned int)
libkwin.so.6:KWin::PointerInterface::PointerInterface(KWin::SeatInterface*)
libkwin.so.6:KWin::PointerInterface::PointerInterface(KWin::SeatInterface*)
libkwin.so.6:KWin::PointerInterface::~PointerInterface()
libkwin.so.6:KWin::PointerInterface::~PointerInterface()
libkwin.so.6:KWin::PointerInterface::~PointerInterface()
libkwin.so.6:KWin::QuickSceneEffect::setRunning(bool)
libkwin.so.6:KWin::QuickSceneEffect::eventFilter(QObject*, QEvent*)
libkwin.so.6:KWin::QuickSceneEffect::paintScreen(KWin::RenderTarget const&, KWin::RenderViewport const&, int, QRegion const&, KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::QuickSceneEffect::qt_metacast(char const*)
libkwin.so.6:KWin::QuickSceneEffect::setDelegate(QQmlComponent*)
libkwin.so.6:KWin::QuickSceneEffect::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::QuickSceneEffect::activateView(KWin::QuickSceneView*)
libkwin.so.6:KWin::QuickSceneEffect::removeScreen(KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::stopInternal()
libkwin.so.6:KWin::QuickSceneEffect::startInternal()
libkwin.so.6:KWin::QuickSceneEffect::prePaintScreen(KWin::ScreenPrePaintData&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::QuickSceneEffect::delegateChanged()
libkwin.so.6:KWin::QuickSceneEffect::activeViewChanged(KWin::QuickSceneView*)
libkwin.so.6:KWin::QuickSceneEffect::handleScreenAdded(KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::initialProperties(KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::handleScreenRemoved(KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::grabbedKeyboardEvent(QKeyEvent*)
libkwin.so.6:KWin::QuickSceneEffect::windowInputMouseEvent(QEvent*)
libkwin.so.6:KWin::QuickSceneEffect::itemDraggedOutOfScreen(QQuickItem*, QList<KWin::Output*>)
libkwin.so.6:KWin::QuickSceneEffect::itemDroppedOutOfScreen(QPointF const&, QQuickItem*, KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::checkItemDraggedOutOfScreen(QQuickItem*)
libkwin.so.6:KWin::QuickSceneEffect::checkItemDroppedOutOfScreen(QPointF const&, QQuickItem*)
libkwin.so.6:KWin::QuickSceneEffect::getView(Qt::Edge)
libkwin.so.6:KWin::QuickSceneEffect::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::QuickSceneEffect::addScreen(KWin::Output*)
libkwin.so.6:KWin::QuickSceneEffect::setSource(QUrl const&)
libkwin.so.6:KWin::QuickSceneEffect::supported()
libkwin.so.6:KWin::QuickSceneEffect::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::QuickSceneEffect::QuickSceneEffect(QObject*)
libkwin.so.6:KWin::QuickSceneEffect::QuickSceneEffect(QObject*)
libkwin.so.6:KWin::QuickSceneEffect::~QuickSceneEffect()
libkwin.so.6:KWin::QuickSceneEffect::~QuickSceneEffect()
libkwin.so.6:KWin::QuickSceneEffect::~QuickSceneEffect()
libkwin.so.6:KWin::SurfaceInterface::setOutputs(QList<KWin::OutputInterface*> const&, KWin::OutputInterface*)
libkwin.so.6:KWin::SurfaceInterface::blurChanged()
libkwin.so.6:KWin::SurfaceInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceInterface::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceInterface::sizeChanged()
libkwin.so.6:KWin::SurfaceInterface::inputChanged(QRegion const&)
libkwin.so.6:KWin::SurfaceInterface::stateApplied(unsigned int)
libkwin.so.6:KWin::SurfaceInterface::stateStashed(unsigned int)
libkwin.so.6:KWin::SurfaceInterface::traverseTree(std::function<void (KWin::SurfaceInterface*)>)
libkwin.so.6:KWin::SurfaceInterface::frameRendered(unsigned int)
libkwin.so.6:KWin::SurfaceInterface::opaqueChanged(QRegion const&)
libkwin.so.6:KWin::SurfaceInterface::shadowChanged()
libkwin.so.6:KWin::SurfaceInterface::inputSurfaceAt(QPointF const&)
libkwin.so.6:KWin::SurfaceInterface::contrastChanged()
libkwin.so.6:KWin::SurfaceInterface::bufferSizeChanged()
libkwin.so.6:KWin::SurfaceInterface::aboutToBeDestroyed()
libkwin.so.6:KWin::SurfaceInterface::setLastTransaction(KWin::Transaction*)
libkwin.so.6:KWin::SurfaceInterface::inhibitsIdleChanged()
libkwin.so.6:KWin::SurfaceInterface::setFirstTransaction(KWin::Transaction*)
libkwin.so.6:KWin::SurfaceInterface::childSubSurfaceAdded(KWin::SubSurfaceInterface*)
libkwin.so.6:KWin::SurfaceInterface::bufferSourceBoxChanged()
libkwin.so.6:KWin::SurfaceInterface::bufferTransformChanged(KWin::OutputTransform)
libkwin.so.6:KWin::SurfaceInterface::childSubSurfaceRemoved(KWin::SubSurfaceInterface*)
libkwin.so.6:KWin::SurfaceInterface::slideOnShowHideChanged()
libkwin.so.6:KWin::SurfaceInterface::childSubSurfacesChanged()
libkwin.so.6:KWin::SurfaceInterface::colorDescriptionChanged()
libkwin.so.6:KWin::SurfaceInterface::setPreferredBufferScale(double)
libkwin.so.6:KWin::SurfaceInterface::takePresentationFeedback(KWin::Output*)
libkwin.so.6:KWin::SurfaceInterface::bufferReleasePointChanged()
libkwin.so.6:KWin::SurfaceInterface::pointerConstraintsChanged()
libkwin.so.6:KWin::SurfaceInterface::presentationModeHintChanged()
libkwin.so.6:KWin::SurfaceInterface::setPreferredBufferTransform(KWin::OutputTransform)
libkwin.so.6:KWin::SurfaceInterface::setPreferredColorDescription(KWin::ColorDescription const&)
libkwin.so.6:KWin::SurfaceInterface::get(wl_resource*)
libkwin.so.6:KWin::SurfaceInterface::get(unsigned int, KWin::ClientConnection const*)
libkwin.so.6:KWin::SurfaceInterface::mapped()
libkwin.so.6:KWin::SurfaceInterface::damaged(QRegion const&)
libkwin.so.6:KWin::SurfaceInterface::setRole(KWin::SurfaceRole*)
libkwin.so.6:KWin::SurfaceInterface::unmapped()
libkwin.so.6:KWin::SurfaceInterface::committed()
libkwin.so.6:KWin::SurfaceInterface::surfaceAt(QPointF const&)
libkwin.so.6:KWin::SurfaceInterface::SurfaceInterface(KWin::CompositorInterface*, wl_resource*)
libkwin.so.6:KWin::SurfaceInterface::SurfaceInterface(KWin::CompositorInterface*, wl_resource*)
libkwin.so.6:KWin::SurfaceInterface::~SurfaceInterface()
libkwin.so.6:KWin::SurfaceInterface::~SurfaceInterface()
libkwin.so.6:KWin::SurfaceInterface::~SurfaceInterface()
libkwin.so.6:KWin::SurfacePixmapX11::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfacePixmapX11::qt_metacast(char const*)
libkwin.so.6:KWin::SurfacePixmapX11::create()
libkwin.so.6:KWin::SurfacePixmapX11::SurfacePixmapX11(KWin::SurfaceItemX11*, QObject*)
libkwin.so.6:KWin::SurfacePixmapX11::SurfacePixmapX11(KWin::SurfaceItemX11*, QObject*)
libkwin.so.6:KWin::SurfacePixmapX11::~SurfacePixmapX11()
libkwin.so.6:KWin::SurfacePixmapX11::~SurfacePixmapX11()
libkwin.so.6:KWin::SurfacePixmapX11::~SurfacePixmapX11()
libkwin.so.6:KWin::SyncReleasePoint::addReleaseFence(KWin::FileDescriptor const&)
libkwin.so.6:KWin::SyncReleasePoint::SyncReleasePoint(std::shared_ptr<KWin::SyncTimeline> const&, unsigned long)
libkwin.so.6:KWin::SyncReleasePoint::SyncReleasePoint(std::shared_ptr<KWin::SyncTimeline> const&, unsigned long)
libkwin.so.6:KWin::SyncReleasePoint::~SyncReleasePoint()
libkwin.so.6:KWin::SyncReleasePoint::~SyncReleasePoint()
libkwin.so.6:KWin::ContrastInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ContrastInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ContrastInterface::ContrastInterface(wl_resource*)
libkwin.so.6:KWin::ContrastInterface::ContrastInterface(wl_resource*)
libkwin.so.6:KWin::ContrastInterface::~ContrastInterface()
libkwin.so.6:KWin::ContrastInterface::~ContrastInterface()
libkwin.so.6:KWin::ContrastInterface::~ContrastInterface()
libkwin.so.6:KWin::DebugConsoleModel::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DebugConsoleModel::qt_metacast(char const*)
libkwin.so.6:KWin::DebugConsoleModel::handleWindowAdded(KWin::Window*)
libkwin.so.6:KWin::DebugConsoleModel::handleWindowRemoved(KWin::Window*)
libkwin.so.6:KWin::DebugConsoleModel::DebugConsoleModel(QObject*)
libkwin.so.6:KWin::DebugConsoleModel::DebugConsoleModel(QObject*)
libkwin.so.6:KWin::DebugConsoleModel::~DebugConsoleModel()
libkwin.so.6:KWin::DebugConsoleModel::~DebugConsoleModel()
libkwin.so.6:KWin::DebugConsoleModel::~DebugConsoleModel()
libkwin.so.6:KWin::EffectWindowGroup::EffectWindowGroup(KWin::Group*)
libkwin.so.6:KWin::EffectWindowGroup::EffectWindowGroup(KWin::Group*)
libkwin.so.6:KWin::EffectWindowGroup::~EffectWindowGroup()
libkwin.so.6:KWin::EffectWindowGroup::~EffectWindowGroup()
libkwin.so.6:KWin::EffectWindowGroup::~EffectWindowGroup()
libkwin.so.6:KWin::GLRenderTimeQuery::end()
libkwin.so.6:KWin::GLRenderTimeQuery::begin()
libkwin.so.6:KWin::GLRenderTimeQuery::query()
libkwin.so.6:KWin::GLRenderTimeQuery::GLRenderTimeQuery(std::shared_ptr<KWin::OpenGlContext> const&)
libkwin.so.6:KWin::GLRenderTimeQuery::GLRenderTimeQuery(std::shared_ptr<KWin::OpenGlContext> const&)
libkwin.so.6:KWin::GLRenderTimeQuery::~GLRenderTimeQuery()
libkwin.so.6:KWin::GLRenderTimeQuery::~GLRenderTimeQuery()
libkwin.so.6:KWin::GLRenderTimeQuery::~GLRenderTimeQuery()
libkwin.so.6:KWin::GestureRecognizer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::GestureRecognizer::qt_metacast(char const*)
libkwin.so.6:KWin::GestureRecognizer::endPinchGesture()
libkwin.so.6:KWin::GestureRecognizer::endSwipeGesture()
libkwin.so.6:KWin::GestureRecognizer::startPinchGesture(unsigned int)
libkwin.so.6:KWin::GestureRecognizer::startSwipeGesture(QPointF const&)
libkwin.so.6:KWin::GestureRecognizer::startSwipeGesture(unsigned int)
libkwin.so.6:KWin::GestureRecognizer::startSwipeGesture(unsigned int, QPointF const&, KWin::GestureRecognizer::StartPositionBehavior)
libkwin.so.6:KWin::GestureRecognizer::cancelPinchGesture()
libkwin.so.6:KWin::GestureRecognizer::cancelSwipeGesture()
libkwin.so.6:KWin::GestureRecognizer::updatePinchGesture(double, double, QPointF const&)
libkwin.so.6:KWin::GestureRecognizer::updateSwipeGesture(QPointF const&)
libkwin.so.6:KWin::GestureRecognizer::cancelActiveGestures()
libkwin.so.6:KWin::GestureRecognizer::registerPinchGesture(KWin::PinchGesture*)
libkwin.so.6:KWin::GestureRecognizer::registerSwipeGesture(KWin::SwipeGesture*)
libkwin.so.6:KWin::GestureRecognizer::unregisterPinchGesture(KWin::PinchGesture*)
libkwin.so.6:KWin::GestureRecognizer::unregisterSwipeGesture(KWin::SwipeGesture*)
libkwin.so.6:KWin::GestureRecognizer::GestureRecognizer(QObject*)
libkwin.so.6:KWin::GestureRecognizer::GestureRecognizer(QObject*)
libkwin.so.6:KWin::GestureRecognizer::~GestureRecognizer()
libkwin.so.6:KWin::GestureRecognizer::~GestureRecognizer()
libkwin.so.6:KWin::GestureRecognizer::~GestureRecognizer()
libkwin.so.6:KWin::InputMethodGrabV1::sendKeymap(QByteArray const&)
libkwin.so.6:KWin::InputMethodGrabV1::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputMethodGrabV1::qt_metacast(char const*)
libkwin.so.6:KWin::InputMethodGrabV1::sendModifiers(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethodGrabV1::sendKey(unsigned int, unsigned int, unsigned int, KWin::KeyboardKeyState)
libkwin.so.6:KWin::InputMethodGrabV1::InputMethodGrabV1(QObject*)
libkwin.so.6:KWin::InputMethodGrabV1::InputMethodGrabV1(QObject*)
libkwin.so.6:KWin::InputMethodGrabV1::~InputMethodGrabV1()
libkwin.so.6:KWin::InputMethodGrabV1::~InputMethodGrabV1()
libkwin.so.6:KWin::InputMethodGrabV1::~InputMethodGrabV1()
libkwin.so.6:KWin::KeyStateInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::KeyStateInterface::qt_metacast(char const*)
libkwin.so.6:KWin::KeyStateInterface::KeyStateInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::KeyStateInterface::KeyStateInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::KeyStateInterface::~KeyStateInterface()
libkwin.so.6:KWin::KeyStateInterface::~KeyStateInterface()
libkwin.so.6:KWin::KeyStateInterface::~KeyStateInterface()
libkwin.so.6:KWin::KeyboardInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::KeyboardInterface::qt_metacast(char const*)
libkwin.so.6:KWin::KeyboardInterface::sendModifiers(unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::KeyboardInterface::setRepeatInfo(int, int)
libkwin.so.6:KWin::KeyboardInterface::setFocusedSurface(KWin::SurfaceInterface*, unsigned int)
libkwin.so.6:KWin::KeyboardInterface::setModifierFocusSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::KeyboardInterface::sendKey(unsigned int, KWin::KeyboardKeyState)
libkwin.so.6:KWin::KeyboardInterface::sendKey(unsigned int, KWin::KeyboardKeyState, KWin::ClientConnection*)
libkwin.so.6:KWin::KeyboardInterface::setKeymap(QByteArray const&)
libkwin.so.6:KWin::KeyboardInterface::KeyboardInterface(KWin::SeatInterface*)
libkwin.so.6:KWin::KeyboardInterface::KeyboardInterface(KWin::SeatInterface*)
libkwin.so.6:KWin::KeyboardInterface::~KeyboardInterface()
libkwin.so.6:KWin::KeyboardInterface::~KeyboardInterface()
libkwin.so.6:KWin::KeyboardInterface::~KeyboardInterface()
libkwin.so.6:KWin::QPainterSwapchain::acquire()
libkwin.so.6:KWin::QPainterSwapchain::release(std::shared_ptr<KWin::QPainterSwapchainSlot>)
libkwin.so.6:KWin::QPainterSwapchain::QPainterSwapchain(KWin::GraphicsBufferAllocator*, QSize const&, unsigned int)
libkwin.so.6:KWin::QPainterSwapchain::QPainterSwapchain(KWin::GraphicsBufferAllocator*, QSize const&, unsigned int)
libkwin.so.6:KWin::QPainterSwapchain::~QPainterSwapchain()
libkwin.so.6:KWin::QPainterSwapchain::~QPainterSwapchain()
libkwin.so.6:KWin::RenderLoopPrivate::notifyVblank(std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::RenderLoopPrivate::scheduleRepaint(std::chrono::duration<long, std::ratio<1l, 1000000000l> >)
libkwin.so.6:KWin::RenderLoopPrivate::notifyFrameDropped()
libkwin.so.6:KWin::RenderLoopPrivate::scheduleNextRepaint()
libkwin.so.6:KWin::RenderLoopPrivate::delayScheduleRepaint()
libkwin.so.6:KWin::RenderLoopPrivate::notifyFrameCompleted(std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::optional<KWin::RenderTimeSpan>, KWin::PresentationMode, KWin::OutputFrame*)
libkwin.so.6:KWin::RenderLoopPrivate::get(KWin::RenderLoop*)
libkwin.so.6:KWin::RenderLoopPrivate::dispatch()
libkwin.so.6:KWin::RenderLoopPrivate::RenderLoopPrivate(KWin::RenderLoop*, KWin::Output*)
libkwin.so.6:KWin::RenderLoopPrivate::RenderLoopPrivate(KWin::RenderLoop*, KWin::Output*)
libkwin.so.6:KWin::ShapeCursorSource::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ShapeCursorSource::qt_metacast(char const*)
libkwin.so.6:KWin::ShapeCursorSource::selectSprite(int)
libkwin.so.6:KWin::ShapeCursorSource::selectNextSprite()
libkwin.so.6:KWin::ShapeCursorSource::refresh()
libkwin.so.6:KWin::ShapeCursorSource::setShape(Qt::CursorShape)
libkwin.so.6:KWin::ShapeCursorSource::setShape(QByteArray const&)
libkwin.so.6:KWin::ShapeCursorSource::setTheme(KWin::KXcursorTheme const&)
libkwin.so.6:KWin::ShapeCursorSource::ShapeCursorSource(QObject*)
libkwin.so.6:KWin::ShapeCursorSource::ShapeCursorSource(QObject*)
libkwin.so.6:KWin::TabletModeManager::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletModeManager::qt_metacast(char const*)
libkwin.so.6:KWin::TabletModeManager::setIsTablet(bool)
libkwin.so.6:KWin::TabletModeManager::refreshSettings()
libkwin.so.6:KWin::TabletModeManager::tabletModeChanged(bool)
libkwin.so.6:KWin::TabletModeManager::setTabletModeAvailable(bool)
libkwin.so.6:KWin::TabletModeManager::hasTabletModeInputChanged(bool)
libkwin.so.6:KWin::TabletModeManager::tabletModeAvailableChanged(bool)
libkwin.so.6:KWin::TabletModeManager::TabletModeManager()
libkwin.so.6:KWin::TabletModeManager::TabletModeManager()
libkwin.so.6:KWin::TabletV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletV2Interface::TabletV2Interface(unsigned int, unsigned int, QString const&, QList<QString> const&, QObject*)
libkwin.so.6:KWin::TabletV2Interface::TabletV2Interface(unsigned int, unsigned int, QString const&, QList<QString> const&, QObject*)
libkwin.so.6:KWin::TabletV2Interface::~TabletV2Interface()
libkwin.so.6:KWin::TabletV2Interface::~TabletV2Interface()
libkwin.so.6:KWin::TabletV2Interface::~TabletV2Interface()
libkwin.so.6:KWin::WaylandCompositor::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WaylandCompositor::qt_metacast(char const*)
libkwin.so.6:KWin::WaylandCompositor::removeOutput(KWin::Output*)
libkwin.so.6:KWin::WaylandCompositor::attemptOpenGLCompositing()
libkwin.so.6:KWin::WaylandCompositor::attemptQPainterCompositing()
libkwin.so.6:KWin::WaylandCompositor::stop()
libkwin.so.6:KWin::WaylandCompositor::start()
libkwin.so.6:KWin::WaylandCompositor::create(QObject*)
libkwin.so.6:KWin::WaylandCompositor::addOutput(KWin::Output*)
libkwin.so.6:KWin::WaylandCompositor::composite(KWin::RenderLoop*)
libkwin.so.6:KWin::WaylandCompositor::WaylandCompositor(QObject*)
libkwin.so.6:KWin::WaylandCompositor::WaylandCompositor(QObject*)
libkwin.so.6:KWin::WaylandCompositor::~WaylandCompositor()
libkwin.so.6:KWin::WaylandCompositor::~WaylandCompositor()
libkwin.so.6:KWin::WaylandCompositor::~WaylandCompositor()
libkwin.so.6:KWin::WindowItemWayland::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WindowItemWayland::qt_metacast(char const*)
libkwin.so.6:KWin::WindowItemWayland::WindowItemWayland(KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::WindowItemWayland::WindowItemWayland(KWin::Window*, KWin::Item*)
libkwin.so.6:KWin::X11WindowedOutput::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::X11WindowedOutput::qt_metacast(char const*)
libkwin.so.6:KWin::X11WindowedOutput::framePending(std::shared_ptr<KWin::OutputFrame> const&)
libkwin.so.6:KWin::X11WindowedOutput::importBuffer(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::X11WindowedOutput::updateEnabled(bool)
libkwin.so.6:KWin::X11WindowedOutput::addExposedArea(QRect const&)
libkwin.so.6:KWin::X11WindowedOutput::setWindowTitle(QString const&)
libkwin.so.6:KWin::X11WindowedOutput::importShmBuffer(KWin::ShmAttributes const*)
libkwin.so.6:KWin::X11WindowedOutput::setHostPosition(QPoint const&)
libkwin.so.6:KWin::X11WindowedOutput::clearExposedArea()
libkwin.so.6:KWin::X11WindowedOutput::updateCursorLayer()
libkwin.so.6:KWin::X11WindowedOutput::importDmaBufBuffer(KWin::DmaBufAttributes const*)
libkwin.so.6:KWin::X11WindowedOutput::initXInputForWindow()
libkwin.so.6:KWin::X11WindowedOutput::handlePresentIdleNotify(xcb_present_idle_notify_event_t*)
libkwin.so.6:KWin::X11WindowedOutput::handlePresentCompleteNotify(xcb_present_complete_notify_event_t*)
libkwin.so.6:KWin::X11WindowedOutput::init(QSize const&, double)
libkwin.so.6:KWin::X11WindowedOutput::resize(QSize const&)
libkwin.so.6:KWin::X11WindowedOutput::X11WindowedOutput(KWin::X11WindowedBackend*)
libkwin.so.6:KWin::X11WindowedOutput::X11WindowedOutput(KWin::X11WindowedBackend*)
libkwin.so.6:KWin::X11WindowedOutput::~X11WindowedOutput()
libkwin.so.6:KWin::X11WindowedOutput::~X11WindowedOutput()
libkwin.so.6:KWin::X11WindowedOutput::~X11WindowedOutput()
libkwin.so.6:KWin::XdgPopupInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgPopupInterface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgPopupInterface::grabRequested(KWin::SeatInterface*, unsigned int)
libkwin.so.6:KWin::XdgPopupInterface::sendConfigure(QRect const&)
libkwin.so.6:KWin::XdgPopupInterface::sendPopupDone()
libkwin.so.6:KWin::XdgPopupInterface::sendRepositioned(unsigned int)
libkwin.so.6:KWin::XdgPopupInterface::aboutToBeDestroyed()
libkwin.so.6:KWin::XdgPopupInterface::initializeRequested()
libkwin.so.6:KWin::XdgPopupInterface::repositionRequested(unsigned int)
libkwin.so.6:KWin::XdgPopupInterface::get(wl_resource*)
libkwin.so.6:KWin::XdgPopupInterface::role()
libkwin.so.6:KWin::XdgPopupInterface::XdgPopupInterface(KWin::XdgSurfaceInterface*, KWin::SurfaceInterface*, KWin::XdgPositioner const&, wl_resource*)
libkwin.so.6:KWin::XdgPopupInterface::XdgPopupInterface(KWin::XdgSurfaceInterface*, KWin::SurfaceInterface*, KWin::XdgPositioner const&, wl_resource*)
libkwin.so.6:KWin::XdgPopupInterface::~XdgPopupInterface()
libkwin.so.6:KWin::XdgPopupInterface::~XdgPopupInterface()
libkwin.so.6:KWin::XdgPopupInterface::~XdgPopupInterface()
libkwin.so.6:KWin::XdgShellInterface::pingDelayed(unsigned int)
libkwin.so.6:KWin::XdgShellInterface::pingTimeout(unsigned int)
libkwin.so.6:KWin::XdgShellInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgShellInterface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgShellInterface::pongReceived(unsigned int)
libkwin.so.6:KWin::XdgShellInterface::popupCreated(KWin::XdgPopupInterface*)
libkwin.so.6:KWin::XdgShellInterface::toplevelCreated(KWin::XdgToplevelInterface*)
libkwin.so.6:KWin::XdgShellInterface::setPingTimeoutInterval(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::XdgShellInterface::ping(KWin::XdgSurfaceInterface*)
libkwin.so.6:KWin::XdgShellInterface::XdgShellInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgShellInterface::XdgShellInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgShellInterface::~XdgShellInterface()
libkwin.so.6:KWin::XdgShellInterface::~XdgShellInterface()
libkwin.so.6:KWin::XdgShellInterface::~XdgShellInterface()
libkwin.so.6:KWin::gravitateGeometry(QRectF const&, QRectF const&, KWin::Gravity)
libkwin.so.6:KWin::AbstractDataSource::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AbstractDataSource::qt_metacast(char const*)
libkwin.so.6:KWin::AbstractDataSource::mimeTypeOffered(QString const&)
libkwin.so.6:KWin::AbstractDataSource::aboutToBeDestroyed()
libkwin.so.6:KWin::AbstractDataSource::supportedDragAndDropActionsChanged()
libkwin.so.6:KWin::AbstractDataSource::AbstractDataSource(QObject*)
libkwin.so.6:KWin::AbstractDataSource::AbstractDataSource(QObject*)
libkwin.so.6:KWin::AbstractEglBackend::doneCurrent()
libkwin.so.6:KWin::AbstractEglBackend::initWayland()
libkwin.so.6:KWin::AbstractEglBackend::makeCurrent()
libkwin.so.6:KWin::AbstractEglBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AbstractEglBackend::qt_metacast(char const*)
libkwin.so.6:KWin::AbstractEglBackend::createContext(void*)
libkwin.so.6:KWin::AbstractEglBackend::setEglDisplay(KWin::EglDisplay*)
libkwin.so.6:KWin::AbstractEglBackend::cleanupSurfaces()
libkwin.so.6:KWin::AbstractEglBackend::testImportBuffer(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::AbstractEglBackend::importBufferAsImage(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::AbstractEglBackend::importBufferAsImage(KWin::GraphicsBuffer*, int, int, QSize const&)
libkwin.so.6:KWin::AbstractEglBackend::initClientExtensions()
libkwin.so.6:KWin::AbstractEglBackend::ensureGlobalShareContext(void*)
libkwin.so.6:KWin::AbstractEglBackend::destroyGlobalShareContext()
libkwin.so.6:KWin::AbstractEglBackend::cleanup()
libkwin.so.6:KWin::AbstractEglBackend::teardown()
libkwin.so.6:KWin::AbstractEglBackend::AbstractEglBackend()
libkwin.so.6:KWin::AbstractEglBackend::AbstractEglBackend()
libkwin.so.6:KWin::AbstractEglBackend::~AbstractEglBackend()
libkwin.so.6:KWin::AbstractEglBackend::~AbstractEglBackend()
libkwin.so.6:KWin::AbstractEglBackend::~AbstractEglBackend()
libkwin.so.6:KWin::ColorPipelineStage::ColorPipelineStage(_cmsStage_struct*)
libkwin.so.6:KWin::ColorPipelineStage::ColorPipelineStage(_cmsStage_struct*)
libkwin.so.6:KWin::ColorPipelineStage::~ColorPipelineStage()
libkwin.so.6:KWin::ColorPipelineStage::~ColorPipelineStage()
libkwin.so.6:KWin::CpuRenderTimeQuery::end()
libkwin.so.6:KWin::CpuRenderTimeQuery::query()
libkwin.so.6:KWin::CpuRenderTimeQuery::CpuRenderTimeQuery()
libkwin.so.6:KWin::CpuRenderTimeQuery::CpuRenderTimeQuery()
libkwin.so.6:KWin::DataOfferInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataOfferInterface::qt_metacast(char const*)
libkwin.so.6:KWin::DataOfferInterface::sendAllOffers()
libkwin.so.6:KWin::DataOfferInterface::sendSourceActions()
libkwin.so.6:KWin::DataOfferInterface::dragAndDropActionsChanged()
libkwin.so.6:KWin::DataOfferInterface::dndAction(KWin::DataDeviceManagerInterface::DnDAction)
libkwin.so.6:KWin::DataOfferInterface::DataOfferInterface(KWin::AbstractDataSource*, wl_resource*)
libkwin.so.6:KWin::DataOfferInterface::DataOfferInterface(KWin::AbstractDataSource*, wl_resource*)
libkwin.so.6:KWin::DataOfferInterface::~DataOfferInterface()
libkwin.so.6:KWin::DataOfferInterface::~DataOfferInterface()
libkwin.so.6:KWin::DataOfferInterface::~DataOfferInterface()
libkwin.so.6:KWin::DecorationRenderer::invalidate()
libkwin.so.6:KWin::DecorationRenderer::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DecorationRenderer::qt_metacast(char const*)
libkwin.so.6:KWin::DecorationRenderer::resetDamage()
libkwin.so.6:KWin::DecorationRenderer::renderToPainter(QPainter*, QRect const&)
libkwin.so.6:KWin::DecorationRenderer::setDevicePixelRatio(double)
libkwin.so.6:KWin::DecorationRenderer::damaged(QRegion const&)
libkwin.so.6:KWin::DecorationRenderer::addDamage(QRegion const&)
libkwin.so.6:KWin::DecorationRenderer::DecorationRenderer(KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::DecorationRenderer::DecorationRenderer(KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::GraphicsBufferView::image()
libkwin.so.6:KWin::GraphicsBufferView::GraphicsBufferView(KWin::GraphicsBuffer*, QFlags<KWin::GraphicsBuffer::MapFlag>)
libkwin.so.6:KWin::GraphicsBufferView::GraphicsBufferView(KWin::GraphicsBuffer*, QFlags<KWin::GraphicsBuffer::MapFlag>)
libkwin.so.6:KWin::GraphicsBufferView::~GraphicsBufferView()
libkwin.so.6:KWin::GraphicsBufferView::~GraphicsBufferView()
libkwin.so.6:KWin::InputDeviceHandler::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputDeviceHandler::qt_metacast(char const*)
libkwin.so.6:KWin::InputDeviceHandler::updateFocus()
libkwin.so.6:KWin::InputDeviceHandler::setDecoration(KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::InputDeviceHandler::updateDecoration()
libkwin.so.6:KWin::InputDeviceHandler::decorationChanged()
libkwin.so.6:KWin::InputDeviceHandler::init()
libkwin.so.6:KWin::InputDeviceHandler::update()
libkwin.so.6:KWin::InputDeviceHandler::setFocus(KWin::Window*)
libkwin.so.6:KWin::InputDeviceHandler::setHover(KWin::Window*)
libkwin.so.6:KWin::InputDeviceHandler::InputDeviceHandler(KWin::InputRedirection*)
libkwin.so.6:KWin::InputDeviceHandler::InputDeviceHandler(KWin::InputRedirection*)
libkwin.so.6:KWin::InputDeviceHandler::~InputDeviceHandler()
libkwin.so.6:KWin::InputDeviceHandler::~InputDeviceHandler()
libkwin.so.6:KWin::InputDeviceHandler::~InputDeviceHandler()
libkwin.so.6:KWin::ItemRendererOpenGL::beginFrame(KWin::RenderTarget const&, KWin::RenderViewport const&)
libkwin.so.6:KWin::ItemRendererOpenGL::renderItem(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::Item*, int, QRegion const&, KWin::WindowPaintData const&)
libkwin.so.6:KWin::ItemRendererOpenGL::createImageItem(KWin::Item*)
libkwin.so.6:KWin::ItemRendererOpenGL::setBlendEnabled(bool)
libkwin.so.6:KWin::ItemRendererOpenGL::createRenderNode(KWin::Item*, KWin::ItemRendererOpenGL::RenderContext*)
libkwin.so.6:KWin::ItemRendererOpenGL::renderBackground(KWin::RenderTarget const&, KWin::RenderViewport const&, QRegion const&)
libkwin.so.6:KWin::ItemRendererOpenGL::visualizeFractional(KWin::RenderViewport const&, QRegion const&, KWin::ItemRendererOpenGL::RenderContext const&)
libkwin.so.6:KWin::ItemRendererOpenGL::endFrame()
libkwin.so.6:KWin::ItemRendererOpenGL::ItemRendererOpenGL(KWin::EglDisplay*)
libkwin.so.6:KWin::ItemRendererOpenGL::ItemRendererOpenGL(KWin::EglDisplay*)
libkwin.so.6:KWin::OffscreenQuickView::setOpacity(double)
libkwin.so.6:KWin::OffscreenQuickView::setVisible(bool)
libkwin.so.6:KWin::OffscreenQuickView::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OffscreenQuickView::qt_metacast(char const*)
libkwin.so.6:KWin::OffscreenQuickView::setGeometry(QRect const&)
libkwin.so.6:KWin::OffscreenQuickView::sceneChanged()
libkwin.so.6:KWin::OffscreenQuickView::repaintNeeded()
libkwin.so.6:KWin::OffscreenQuickView::forwardTouchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::OffscreenQuickView::bufferAsTexture()
libkwin.so.6:KWin::OffscreenQuickView::forwardKeyEvent(QKeyEvent*)
libkwin.so.6:KWin::OffscreenQuickView::geometryChanged(QRect const&, QRect const&)
libkwin.so.6:KWin::OffscreenQuickView::renderRequested()
libkwin.so.6:KWin::OffscreenQuickView::forwardTouchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::OffscreenQuickView::forwardMouseEvent(QEvent*)
libkwin.so.6:KWin::OffscreenQuickView::forwardTouchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::OffscreenQuickView::handleSceneChanged()
libkwin.so.6:KWin::OffscreenQuickView::setAutomaticRepaint(bool)
libkwin.so.6:KWin::OffscreenQuickView::handleRenderRequested()
libkwin.so.6:KWin::OffscreenQuickView::hide()
libkwin.so.6:KWin::OffscreenQuickView::show()
libkwin.so.6:KWin::OffscreenQuickView::update()
libkwin.so.6:KWin::OffscreenQuickView::OffscreenQuickView(KWin::OffscreenQuickView::ExportMode, bool)
libkwin.so.6:KWin::OffscreenQuickView::OffscreenQuickView(KWin::OffscreenQuickView::ExportMode, bool)
libkwin.so.6:KWin::OffscreenQuickView::~OffscreenQuickView()
libkwin.so.6:KWin::OffscreenQuickView::~OffscreenQuickView()
libkwin.so.6:KWin::OffscreenQuickView::~OffscreenQuickView()
libkwin.so.6:KWin::SurfaceItemWayland::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceItemWayland::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceItemWayland::createPixmap()
libkwin.so.6:KWin::SurfaceItemWayland::setScanoutHint(KWin::DrmDevice*, QHash<unsigned int, QList<unsigned long> > const&)
libkwin.so.6:KWin::SurfaceItemWayland::handleSurfaceCommitted()
libkwin.so.6:KWin::SurfaceItemWayland::handleBufferSizeChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleSurfaceSizeChanged()
libkwin.so.6:KWin::SurfaceItemWayland::getOrCreateSubSurfaceItem(KWin::SubSurfaceInterface*)
libkwin.so.6:KWin::SurfaceItemWayland::handleReleasePointChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleBufferSourceBoxChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleBufferTransformChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleChildSubSurfaceRemoved(KWin::SubSurfaceInterface*)
libkwin.so.6:KWin::SurfaceItemWayland::handleChildSubSurfacesChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleColorDescriptionChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleSubSurfaceMappedChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handleSubSurfacePositionChanged()
libkwin.so.6:KWin::SurfaceItemWayland::handlePresentationModeHintChanged()
libkwin.so.6:KWin::SurfaceItemWayland::freeze()
libkwin.so.6:KWin::SurfaceItemWayland::SurfaceItemWayland(KWin::SurfaceInterface*, KWin::Item*)
libkwin.so.6:KWin::SurfaceItemWayland::SurfaceItemWayland(KWin::SurfaceInterface*, KWin::Item*)
libkwin.so.6:KWin::WindowItemInternal::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WindowItemInternal::qt_metacast(char const*)
libkwin.so.6:KWin::WindowItemInternal::WindowItemInternal(KWin::InternalWindow*, KWin::Item*)
libkwin.so.6:KWin::WindowItemInternal::WindowItemInternal(KWin::InternalWindow*, KWin::Item*)
libkwin.so.6:KWin::WindowPrePaintData::setTransformed()
libkwin.so.6:KWin::WindowPrePaintData::setTranslucent()
libkwin.so.6:KWin::X11WindowedBackend::initXInput()
libkwin.so.6:KWin::X11WindowedBackend::initialize()
libkwin.so.6:KWin::X11WindowedBackend::updateSize(xcb_configure_notify_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::handleEvent(xcb_generic_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::X11WindowedBackend::qt_metacast(char const*)
libkwin.so.6:KWin::X11WindowedBackend::grabKeyboard(unsigned int)
libkwin.so.6:KWin::X11WindowedBackend::handleExpose(xcb_expose_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::createOutputs()
libkwin.so.6:KWin::X11WindowedBackend::setEglDisplay(std::unique_ptr<KWin::EglDisplay, std::default_delete<KWin::EglDisplay> >&&)
libkwin.so.6:KWin::X11WindowedBackend::destroyOutputs()
libkwin.so.6:KWin::X11WindowedBackend::handleButtonPress(xcb_button_press_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::handleXinputEvent(xcb_ge_generic_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::updateWindowTitle()
libkwin.so.6:KWin::X11WindowedBackend::createInputBackend()
libkwin.so.6:KWin::X11WindowedBackend::handlePresentEvent(xcb_ge_generic_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::createOpenGLBackend()
libkwin.so.6:KWin::X11WindowedBackend::handleClientMessage(xcb_client_message_event_t*)
libkwin.so.6:KWin::X11WindowedBackend::createQPainterBackend()
libkwin.so.6:KWin::X11WindowedBackend::initDri3()
libkwin.so.6:KWin::X11WindowedBackend::X11WindowedBackend(KWin::X11WindowedBackendOptions const&)
libkwin.so.6:KWin::X11WindowedBackend::X11WindowedBackend(KWin::X11WindowedBackendOptions const&)
libkwin.so.6:KWin::X11WindowedBackend::~X11WindowedBackend()
libkwin.so.6:KWin::X11WindowedBackend::~X11WindowedBackend()
libkwin.so.6:KWin::X11WindowedBackend::~X11WindowedBackend()
libkwin.so.6:KWin::XRenderPictureData::~XRenderPictureData()
libkwin.so.6:KWin::XRenderPictureData::~XRenderPictureData()
libkwin.so.6:KWin::XdgExportedSurface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgExportedSurface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgExportedSurface::handleSurfaceDestroyed()
libkwin.so.6:KWin::XdgExportedSurface::XdgExportedSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::XdgExportedSurface::XdgExportedSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::x11ToQtMouseButton(int)
libkwin.so.6:KWin::AbstractDropHandler::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AbstractDropHandler::qt_metacast(char const*)
libkwin.so.6:KWin::AbstractDropHandler::AbstractDropHandler(QObject*)
libkwin.so.6:KWin::AbstractDropHandler::AbstractDropHandler(QObject*)
libkwin.so.6:KWin::ColorTransformation::createScalingTransform(QVector3D const&)
libkwin.so.6:KWin::ColorTransformation::append(KWin::ColorTransformation*)
libkwin.so.6:KWin::ColorTransformation::ColorTransformation(std::vector<std::unique_ptr<KWin::ColorPipelineStage, std::default_delete<KWin::ColorPipelineStage> >, std::allocator<std::unique_ptr<KWin::ColorPipelineStage, std::default_delete<KWin::ColorPipelineStage> > > >&&)
libkwin.so.6:KWin::ColorTransformation::ColorTransformation(std::vector<std::unique_ptr<KWin::ColorPipelineStage, std::default_delete<KWin::ColorPipelineStage> >, std::allocator<std::unique_ptr<KWin::ColorPipelineStage, std::default_delete<KWin::ColorPipelineStage> > > >&&)
libkwin.so.6:KWin::ColorTransformation::~ColorTransformation()
libkwin.so.6:KWin::ColorTransformation::~ColorTransformation()
libkwin.so.6:KWin::CompositorInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CompositorInterface::qt_metacast(char const*)
libkwin.so.6:KWin::CompositorInterface::surfaceCreated(KWin::SurfaceInterface*)
libkwin.so.6:KWin::CompositorInterface::CompositorInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::CompositorInterface::CompositorInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::CompositorInterface::~CompositorInterface()
libkwin.so.6:KWin::CompositorInterface::~CompositorInterface()
libkwin.so.6:KWin::CompositorInterface::~CompositorInterface()
libkwin.so.6:KWin::DataDeviceInterface::dragStarted(KWin::AbstractDataSource*, KWin::SurfaceInterface*, unsigned int, KWin::DragAndDropIcon*)
libkwin.so.6:KWin::DataDeviceInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataDeviceInterface::qt_metacast(char const*)
libkwin.so.6:KWin::DataDeviceInterface::sendSelection(KWin::AbstractDataSource*)
libkwin.so.6:KWin::DataDeviceInterface::selectionChanged(KWin::DataSourceInterface*)
libkwin.so.6:KWin::DataDeviceInterface::updateDragTarget(KWin::SurfaceInterface*, unsigned int)
libkwin.so.6:KWin::DataDeviceInterface::aboutToBeDestroyed()
libkwin.so.6:KWin::DataDeviceInterface::drop()
libkwin.so.6:KWin::DataDeviceInterface::client()
libkwin.so.6:KWin::DataDeviceInterface::DataDeviceInterface(KWin::SeatInterface*, wl_resource*)
libkwin.so.6:KWin::DataDeviceInterface::DataDeviceInterface(KWin::SeatInterface*, wl_resource*)
libkwin.so.6:KWin::DataDeviceInterface::~DataDeviceInterface()
libkwin.so.6:KWin::DataDeviceInterface::~DataDeviceInterface()
libkwin.so.6:KWin::DataDeviceInterface::~DataDeviceInterface()
libkwin.so.6:KWin::DataSourceInterface::dndFinished()
libkwin.so.6:KWin::DataSourceInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataSourceInterface::qt_metacast(char const*)
libkwin.so.6:KWin::DataSourceInterface::requestData(QString const&, int)
libkwin.so.6:KWin::DataSourceInterface::setAccepted(bool)
libkwin.so.6:KWin::DataSourceInterface::dndCancelled()
libkwin.so.6:KWin::DataSourceInterface::dropPerformed()
libkwin.so.6:KWin::DataSourceInterface::get(wl_resource*)
libkwin.so.6:KWin::DataSourceInterface::accept(QString const&)
libkwin.so.6:KWin::DataSourceInterface::cancel()
libkwin.so.6:KWin::DataSourceInterface::dndAction(KWin::DataDeviceManagerInterface::DnDAction)
libkwin.so.6:KWin::DataSourceInterface::DataSourceInterface(wl_resource*)
libkwin.so.6:KWin::DataSourceInterface::DataSourceInterface(wl_resource*)
libkwin.so.6:KWin::DataSourceInterface::~DataSourceInterface()
libkwin.so.6:KWin::DataSourceInterface::~DataSourceInterface()
libkwin.so.6:KWin::DataSourceInterface::~DataSourceInterface()
libkwin.so.6:KWin::EffectPluginFactory::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::EffectPluginFactory::qt_metacast(char const*)
libkwin.so.6:KWin::EffectPluginFactory::EffectPluginFactory()
libkwin.so.6:KWin::EffectPluginFactory::EffectPluginFactory()
libkwin.so.6:KWin::EffectPluginFactory::~EffectPluginFactory()
libkwin.so.6:KWin::EffectPluginFactory::~EffectPluginFactory()
libkwin.so.6:KWin::EffectPluginFactory::~EffectPluginFactory()
libkwin.so.6:KWin::OffscreenQuickScene::setSource(QUrl const&)
libkwin.so.6:KWin::OffscreenQuickScene::setSource(QUrl const&, QMap<QString, QVariant> const&)
libkwin.so.6:KWin::OffscreenQuickScene::OffscreenQuickScene(KWin::OffscreenQuickView::ExportMode, bool)
libkwin.so.6:KWin::OffscreenQuickScene::OffscreenQuickScene(KWin::OffscreenQuickView::ExportMode, bool)
libkwin.so.6:KWin::OffscreenQuickScene::~OffscreenQuickScene()
libkwin.so.6:KWin::OffscreenQuickScene::~OffscreenQuickScene()
libkwin.so.6:KWin::OffscreenQuickScene::~OffscreenQuickScene()
libkwin.so.6:KWin::OutputConfiguration::changeSet(KWin::Output*)
libkwin.so.6:KWin::RenderLayerDelegate::frame(KWin::OutputFrame*)
libkwin.so.6:KWin::RenderLayerDelegate::prePaint()
libkwin.so.6:KWin::RenderLayerDelegate::setLayer(KWin::RenderLayer*)
libkwin.so.6:KWin::RenderLayerDelegate::postPaint()
libkwin.so.6:KWin::ScreenLockerWatcher::initialize()
libkwin.so.6:KWin::ScreenLockerWatcher::aboutToLock()
libkwin.so.6:KWin::ScreenLockerWatcher::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScreenLockerWatcher::qt_metacast(char const*)
libkwin.so.6:KWin::ScreenLockerWatcher::queryActive()
libkwin.so.6:KWin::ScreenLockerWatcher::activeQueried(QDBusPendingCallWatcher*)
libkwin.so.6:KWin::ScreenLockerWatcher::serviceOwnerChanged(QString const&, QString const&, QString const&)
libkwin.so.6:KWin::ScreenLockerWatcher::locked(bool)
libkwin.so.6:KWin::ScreenLockerWatcher::setLocked(bool)
libkwin.so.6:KWin::ScreenLockerWatcher::ScreenLockerWatcher()
libkwin.so.6:KWin::ScreenLockerWatcher::ScreenLockerWatcher()
libkwin.so.6:KWin::SubSurfaceInterface::modeChanged(KWin::SubSurfaceInterface::Mode)
libkwin.so.6:KWin::SubSurfaceInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SubSurfaceInterface::qt_metacast(char const*)
libkwin.so.6:KWin::SubSurfaceInterface::positionChanged(QPoint const&)
libkwin.so.6:KWin::SubSurfaceInterface::parentApplyState(unsigned int)
libkwin.so.6:KWin::SubSurfaceInterface::parentDesynchronized()
libkwin.so.6:KWin::SubSurfaceInterface::role()
libkwin.so.6:KWin::SubSurfaceInterface::SubSurfaceInterface(KWin::SurfaceInterface*, KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::SubSurfaceInterface::SubSurfaceInterface(KWin::SurfaceInterface*, KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::SubSurfaceInterface::~SubSurfaceInterface()
libkwin.so.6:KWin::SubSurfaceInterface::~SubSurfaceInterface()
libkwin.so.6:KWin::SubSurfaceInterface::~SubSurfaceInterface()
libkwin.so.6:KWin::SurfaceCursorSource::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceCursorSource::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceCursorSource::reset()
libkwin.so.6:KWin::SurfaceCursorSource::update(KWin::SurfaceInterface*, QPointF const&)
libkwin.so.6:KWin::SurfaceCursorSource::refresh()
libkwin.so.6:KWin::SurfaceCursorSource::SurfaceCursorSource(QObject*)
libkwin.so.6:KWin::SurfaceCursorSource::SurfaceCursorSource(QObject*)
libkwin.so.6:KWin::SurfaceItemInternal::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceItemInternal::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceItemInternal::createPixmap()
libkwin.so.6:KWin::SurfaceItemInternal::handleBufferGeometryChanged()
libkwin.so.6:KWin::SurfaceItemInternal::SurfaceItemInternal(KWin::InternalWindow*, KWin::Item*)
libkwin.so.6:KWin::SurfaceItemInternal::SurfaceItemInternal(KWin::InternalWindow*, KWin::Item*)
libkwin.so.6:KWin::SurfaceItemXwayland::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfaceItemXwayland::qt_metacast(char const*)
libkwin.so.6:KWin::SurfaceItemXwayland::SurfaceItemXwayland(KWin::X11Window*, KWin::Item*)
libkwin.so.6:KWin::SurfaceItemXwayland::SurfaceItemXwayland(KWin::X11Window*, KWin::Item*)
libkwin.so.6:KWin::ViewporterInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ViewporterInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ViewporterInterface::ViewporterInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ViewporterInterface::ViewporterInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ViewporterInterface::~ViewporterInterface()
libkwin.so.6:KWin::ViewporterInterface::~ViewporterInterface()
libkwin.so.6:KWin::ViewporterInterface::~ViewporterInterface()
libkwin.so.6:KWin::VirtualKeyboardDBus::setEnabled(bool)
libkwin.so.6:KWin::VirtualKeyboardDBus::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::VirtualKeyboardDBus::qt_metacast(char const*)
libkwin.so.6:KWin::VirtualKeyboardDBus::activeChanged()
libkwin.so.6:KWin::VirtualKeyboardDBus::forceActivate()
libkwin.so.6:KWin::VirtualKeyboardDBus::enabledChanged()
libkwin.so.6:KWin::VirtualKeyboardDBus::visibleChanged()
libkwin.so.6:KWin::VirtualKeyboardDBus::availableChanged()
libkwin.so.6:KWin::VirtualKeyboardDBus::activeClientSupportsTextInputChanged()
libkwin.so.6:KWin::VirtualKeyboardDBus::setActive(bool)
libkwin.so.6:KWin::VirtualKeyboardDBus::VirtualKeyboardDBus(KWin::InputMethod*)
libkwin.so.6:KWin::VirtualKeyboardDBus::VirtualKeyboardDBus(KWin::InputMethod*)
libkwin.so.6:KWin::VirtualKeyboardDBus::~VirtualKeyboardDBus()
libkwin.so.6:KWin::VirtualKeyboardDBus::~VirtualKeyboardDBus()
libkwin.so.6:KWin::VirtualKeyboardDBus::~VirtualKeyboardDBus()
libkwin.so.6:KWin::XdgSurfaceInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgSurfaceInterface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgSurfaceInterface::resetOccurred()
libkwin.so.6:KWin::XdgSurfaceInterface::aboutToBeDestroyed()
libkwin.so.6:KWin::XdgSurfaceInterface::configureAcknowledged(unsigned int)
libkwin.so.6:KWin::XdgSurfaceInterface::windowGeometryChanged(QRect const&)
libkwin.so.6:KWin::XdgSurfaceInterface::get(wl_resource*)
libkwin.so.6:KWin::XdgSurfaceInterface::XdgSurfaceInterface(KWin::XdgShellInterface*, KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::XdgSurfaceInterface::XdgSurfaceInterface(KWin::XdgShellInterface*, KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::XdgSurfaceInterface::~XdgSurfaceInterface()
libkwin.so.6:KWin::XdgSurfaceInterface::~XdgSurfaceInterface()
libkwin.so.6:KWin::XdgSurfaceInterface::~XdgSurfaceInterface()
libkwin.so.6:KWin::x11ToQtMouseButtons(int)
libkwin.so.6:KWin::AbstractEffectLoader::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AbstractEffectLoader::qt_metacast(char const*)
libkwin.so.6:KWin::AbstractEffectLoader::effectLoaded(KWin::Effect*, QString const&)
libkwin.so.6:KWin::AbstractEffectLoader::setConfig(QExplicitlySharedDataPointer<KSharedConfig>)
libkwin.so.6:KWin::AbstractEffectLoader::AbstractEffectLoader(QObject*)
libkwin.so.6:KWin::AbstractEffectLoader::AbstractEffectLoader(QObject*)
libkwin.so.6:KWin::AbstractEffectLoader::~AbstractEffectLoader()
libkwin.so.6:KWin::AbstractEffectLoader::~AbstractEffectLoader()
libkwin.so.6:KWin::AbstractEffectLoader::~AbstractEffectLoader()
libkwin.so.6:KWin::BlurManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::BlurManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::BlurManagerInterface::remove()
libkwin.so.6:KWin::BlurManagerInterface::BlurManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::BlurManagerInterface::BlurManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::BlurManagerInterface::~BlurManagerInterface()
libkwin.so.6:KWin::BlurManagerInterface::~BlurManagerInterface()
libkwin.so.6:KWin::BlurManagerInterface::~BlurManagerInterface()
libkwin.so.6:KWin::DpmsInputEventFilter::wheelEvent(KWin::WheelEvent*)
libkwin.so.6:KWin::DpmsInputEventFilter::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DpmsInputEventFilter::qt_metacast(char const*)
libkwin.so.6:KWin::DpmsInputEventFilter::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::pointerEvent(KWin::MouseEvent*, unsigned int)
libkwin.so.6:KWin::DpmsInputEventFilter::tabletToolEvent(KWin::TabletEvent*)
libkwin.so.6:KWin::DpmsInputEventFilter::tabletPadRingEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::tabletPadStripEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::tabletPadButtonEvent(unsigned int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::tabletToolButtonEvent(unsigned int, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::notify()
libkwin.so.6:KWin::DpmsInputEventFilter::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::keyEvent(KWin::KeyEvent*)
libkwin.so.6:KWin::DpmsInputEventFilter::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::DpmsInputEventFilter::DpmsInputEventFilter()
libkwin.so.6:KWin::DpmsInputEventFilter::DpmsInputEventFilter()
libkwin.so.6:KWin::DpmsInputEventFilter::~DpmsInputEventFilter()
libkwin.so.6:KWin::DpmsInputEventFilter::~DpmsInputEventFilter()
libkwin.so.6:KWin::DpmsInputEventFilter::~DpmsInputEventFilter()
libkwin.so.6:KWin::DpmsManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DpmsManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::DpmsManagerInterface::DpmsManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::DpmsManagerInterface::DpmsManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::DpmsManagerInterface::~DpmsManagerInterface()
libkwin.so.6:KWin::DpmsManagerInterface::~DpmsManagerInterface()
libkwin.so.6:KWin::DpmsManagerInterface::~DpmsManagerInterface()
libkwin.so.6:KWin::EffectTogglableState::deactivate()
libkwin.so.6:KWin::EffectTogglableState::setRegress(double)
libkwin.so.6:KWin::EffectTogglableState::deactivated()
libkwin.so.6:KWin::EffectTogglableState::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::EffectTogglableState::qt_metacast(char const*)
libkwin.so.6:KWin::EffectTogglableState::setProgress(double)
libkwin.so.6:KWin::EffectTogglableState::setInProgress(bool)
libkwin.so.6:KWin::EffectTogglableState::statusChanged(KWin::EffectTogglableState::Status)
libkwin.so.6:KWin::EffectTogglableState::partialActivate(double)
libkwin.so.6:KWin::EffectTogglableState::regressCallback()
libkwin.so.6:KWin::EffectTogglableState::progressCallback()
libkwin.so.6:KWin::EffectTogglableState::inProgressChanged()
libkwin.so.6:KWin::EffectTogglableState::partialDeactivate(double)
libkwin.so.6:KWin::EffectTogglableState::setPartialActivationFactor(double)
libkwin.so.6:KWin::EffectTogglableState::partialActivationFactorChanged()
libkwin.so.6:KWin::EffectTogglableState::stop()
libkwin.so.6:KWin::EffectTogglableState::toggle()
libkwin.so.6:KWin::EffectTogglableState::activate()
libkwin.so.6:KWin::EffectTogglableState::activated()
libkwin.so.6:KWin::EffectTogglableState::setStatus(KWin::EffectTogglableState::Status)
libkwin.so.6:KWin::EffectTogglableState::EffectTogglableState(KWin::Effect*)
libkwin.so.6:KWin::EffectTogglableState::EffectTogglableState(KWin::Effect*)
libkwin.so.6:KWin::ItemRendererQPainter::beginFrame(KWin::RenderTarget const&, KWin::RenderViewport const&)
libkwin.so.6:KWin::ItemRendererQPainter::renderItem(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::Item*, int, QRegion const&, KWin::WindowPaintData const&)
libkwin.so.6:KWin::ItemRendererQPainter::createImageItem(KWin::Item*)
libkwin.so.6:KWin::ItemRendererQPainter::renderBackground(KWin::RenderTarget const&, KWin::RenderViewport const&, QRegion const&)
libkwin.so.6:KWin::ItemRendererQPainter::endFrame()
libkwin.so.6:KWin::ItemRendererQPainter::ItemRendererQPainter()
libkwin.so.6:KWin::ItemRendererQPainter::ItemRendererQPainter()
libkwin.so.6:KWin::ItemRendererQPainter::~ItemRendererQPainter()
libkwin.so.6:KWin::ItemRendererQPainter::~ItemRendererQPainter()
libkwin.so.6:KWin::ItemRendererQPainter::~ItemRendererQPainter()
libkwin.so.6:KWin::OpenGLSurfaceTexture::OpenGLSurfaceTexture(KWin::OpenGLBackend*)
libkwin.so.6:KWin::OpenGLSurfaceTexture::OpenGLSurfaceTexture(KWin::OpenGLBackend*)
libkwin.so.6:KWin::OpenGLSurfaceTexture::~OpenGLSurfaceTexture()
libkwin.so.6:KWin::OpenGLSurfaceTexture::~OpenGLSurfaceTexture()
libkwin.so.6:KWin::OpenGLSurfaceTexture::~OpenGLSurfaceTexture()
libkwin.so.6:KWin::PlasmaShellInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaShellInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaShellInterface::surfaceCreated(KWin::PlasmaShellSurfaceInterface*)
libkwin.so.6:KWin::PlasmaShellInterface::PlasmaShellInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaShellInterface::PlasmaShellInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaShellInterface::~PlasmaShellInterface()
libkwin.so.6:KWin::PlasmaShellInterface::~PlasmaShellInterface()
libkwin.so.6:KWin::PlasmaShellInterface::~PlasmaShellInterface()
libkwin.so.6:KWin::PointerSurfaceCursor::PointerSurfaceCursor()
libkwin.so.6:KWin::PointerSurfaceCursor::PointerSurfaceCursor()
libkwin.so.6:KWin::PointerSurfaceCursor::~PointerSurfaceCursor()
libkwin.so.6:KWin::PointerSurfaceCursor::~PointerSurfaceCursor()
libkwin.so.6:KWin::ScriptedEffectLoader::loadEffect(KPluginMetaData const&, QFlags<KWin::LoadEffectFlag>)
libkwin.so.6:KWin::ScriptedEffectLoader::loadEffect(QString const&)
libkwin.so.6:KWin::ScriptedEffectLoader::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScriptedEffectLoader::qt_metacast(char const*)
libkwin.so.6:KWin::ScriptedEffectLoader::queryAndLoadAll()
libkwin.so.6:KWin::ScriptedEffectLoader::loadJavascriptEffect(KPluginMetaData const&)
libkwin.so.6:KWin::ScriptedEffectLoader::loadDeclarativeEffect(KPluginMetaData const&)
libkwin.so.6:KWin::ScriptedEffectLoader::clear()
libkwin.so.6:KWin::ScriptedEffectLoader::ScriptedEffectLoader(QObject*)
libkwin.so.6:KWin::ScriptedEffectLoader::ScriptedEffectLoader(QObject*)
libkwin.so.6:KWin::ScriptedEffectLoader::~ScriptedEffectLoader()
libkwin.so.6:KWin::ScriptedEffectLoader::~ScriptedEffectLoader()
libkwin.so.6:KWin::ScriptedEffectLoader::~ScriptedEffectLoader()
libkwin.so.6:KWin::SeatInterfacePrivate::get(KWin::SeatInterface*)
libkwin.so.6:KWin::SoftwareVsyncMonitor::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SoftwareVsyncMonitor::qt_metacast(char const*)
libkwin.so.6:KWin::SoftwareVsyncMonitor::setRefreshRate(int)
libkwin.so.6:KWin::SoftwareVsyncMonitor::handleSyntheticVsync()
libkwin.so.6:KWin::SoftwareVsyncMonitor::arm()
libkwin.so.6:KWin::SoftwareVsyncMonitor::create()
libkwin.so.6:KWin::SoftwareVsyncMonitor::SoftwareVsyncMonitor()
libkwin.so.6:KWin::SoftwareVsyncMonitor::SoftwareVsyncMonitor()
libkwin.so.6:KWin::SurfacePixmapWayland::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfacePixmapWayland::qt_metacast(char const*)
libkwin.so.6:KWin::SurfacePixmapWayland::create()
libkwin.so.6:KWin::SurfacePixmapWayland::update()
libkwin.so.6:KWin::SurfacePixmapWayland::SurfacePixmapWayland(KWin::SurfaceItemWayland*, QObject*)
libkwin.so.6:KWin::SurfacePixmapWayland::SurfacePixmapWayland(KWin::SurfaceItemWayland*, QObject*)
libkwin.so.6:KWin::TabletPadV2Interface::sendButton(std::chrono::duration<long, std::ratio<1l, 1000000l> >, unsigned int, bool)
libkwin.so.6:KWin::TabletPadV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletPadV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletPadV2Interface::setCurrentSurface(KWin::SurfaceInterface*, KWin::TabletV2Interface*)
libkwin.so.6:KWin::TabletPadV2Interface::feedback(KWin::ClientConnection*, unsigned int, QString const&, unsigned int)
libkwin.so.6:KWin::TabletPadV2Interface::TabletPadV2Interface(QString const&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, KWin::Display*, KWin::TabletSeatV2Interface*)
libkwin.so.6:KWin::TabletPadV2Interface::TabletPadV2Interface(QString const&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, KWin::Display*, KWin::TabletSeatV2Interface*)
libkwin.so.6:KWin::TabletPadV2Interface::~TabletPadV2Interface()
libkwin.so.6:KWin::TabletPadV2Interface::~TabletPadV2Interface()
libkwin.so.6:KWin::TabletPadV2Interface::~TabletPadV2Interface()
libkwin.so.6:KWin::TextInputV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TextInputV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TextInputV1Interface::setLanguage(QString const&)
libkwin.so.6:KWin::TextInputV1Interface::commitString(QString const&)
libkwin.so.6:KWin::TextInputV1Interface::invokeAction(unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV1Interface::stateUpdated(unsigned int)
libkwin.so.6:KWin::TextInputV1Interface::keysymPressed(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV1Interface::enabledChanged()
libkwin.so.6:KWin::TextInputV1Interface::keysymReleased(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV1Interface::preEditStyling(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV1Interface::setModifiersMap(QByteArray const&)
libkwin.so.6:KWin::TextInputV1Interface::setPreEditCursor(int)
libkwin.so.6:KWin::TextInputV1Interface::setTextDirection(Qt::LayoutDirection)
libkwin.so.6:KWin::TextInputV1Interface::setCursorPosition(int, int)
libkwin.so.6:KWin::TextInputV1Interface::contentTypeChanged()
libkwin.so.6:KWin::TextInputV1Interface::setInputPanelState(bool)
libkwin.so.6:KWin::TextInputV1Interface::deleteSurroundingText(unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV1Interface::requestHideInputPanel()
libkwin.so.6:KWin::TextInputV1Interface::requestShowInputPanel()
libkwin.so.6:KWin::TextInputV1Interface::cursorRectangleChanged(QRect const&)
libkwin.so.6:KWin::TextInputV1Interface::surroundingTextChanged()
libkwin.so.6:KWin::TextInputV1Interface::preferredLanguageChanged(QString const&)
libkwin.so.6:KWin::TextInputV1Interface::reset()
libkwin.so.6:KWin::TextInputV1Interface::preEdit(QString const&, QString const&)
libkwin.so.6:KWin::TextInputV1Interface::TextInputV1Interface(KWin::SeatInterface*)
libkwin.so.6:KWin::TextInputV1Interface::TextInputV1Interface(KWin::SeatInterface*)
libkwin.so.6:KWin::TextInputV1Interface::~TextInputV1Interface()
libkwin.so.6:KWin::TextInputV1Interface::~TextInputV1Interface()
libkwin.so.6:KWin::TextInputV1Interface::~TextInputV1Interface()
libkwin.so.6:KWin::TextInputV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TextInputV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TextInputV2Interface::setLanguage(QString const&)
libkwin.so.6:KWin::TextInputV2Interface::commitString(QString const&)
libkwin.so.6:KWin::TextInputV2Interface::stateUpdated(unsigned int, KWin::TextInputV2Interface::UpdateReason)
libkwin.so.6:KWin::TextInputV2Interface::keysymPressed(unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV2Interface::enabledChanged()
libkwin.so.6:KWin::TextInputV2Interface::keysymReleased(unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV2Interface::preEditStyling(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV2Interface::setModifiersMap(QByteArray const&)
libkwin.so.6:KWin::TextInputV2Interface::setPreEditCursor(int)
libkwin.so.6:KWin::TextInputV2Interface::setTextDirection(Qt::LayoutDirection)
libkwin.so.6:KWin::TextInputV2Interface::setCursorPosition(int, int)
libkwin.so.6:KWin::TextInputV2Interface::contentTypeChanged()
libkwin.so.6:KWin::TextInputV2Interface::setInputPanelState(bool, QRect const&)
libkwin.so.6:KWin::TextInputV2Interface::deleteSurroundingText(unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV2Interface::requestHideInputPanel()
libkwin.so.6:KWin::TextInputV2Interface::requestShowInputPanel()
libkwin.so.6:KWin::TextInputV2Interface::cursorRectangleChanged(QRect const&)
libkwin.so.6:KWin::TextInputV2Interface::surroundingTextChanged()
libkwin.so.6:KWin::TextInputV2Interface::preferredLanguageChanged(QString const&)
libkwin.so.6:KWin::TextInputV2Interface::preEdit(QString const&, QString const&)
libkwin.so.6:KWin::TextInputV2Interface::TextInputV2Interface(KWin::SeatInterface*)
libkwin.so.6:KWin::TextInputV2Interface::TextInputV2Interface(KWin::SeatInterface*)
libkwin.so.6:KWin::TextInputV2Interface::~TextInputV2Interface()
libkwin.so.6:KWin::TextInputV2Interface::~TextInputV2Interface()
libkwin.so.6:KWin::TextInputV2Interface::~TextInputV2Interface()
libkwin.so.6:KWin::TextInputV3Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TextInputV3Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TextInputV3Interface::commitString(QString const&)
libkwin.so.6:KWin::TextInputV3Interface::enabledChanged()
libkwin.so.6:KWin::TextInputV3Interface::stateCommitted(unsigned int)
libkwin.so.6:KWin::TextInputV3Interface::enableRequested()
libkwin.so.6:KWin::TextInputV3Interface::sendPreEditString(QString const&, unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV3Interface::contentTypeChanged()
libkwin.so.6:KWin::TextInputV3Interface::deleteSurroundingText(unsigned int, unsigned int)
libkwin.so.6:KWin::TextInputV3Interface::cursorRectangleChanged(QRect const&)
libkwin.so.6:KWin::TextInputV3Interface::surroundingTextChanged()
libkwin.so.6:KWin::TextInputV3Interface::done()
libkwin.so.6:KWin::TextInputV3Interface::TextInputV3Interface(KWin::SeatInterface*)
libkwin.so.6:KWin::TextInputV3Interface::TextInputV3Interface(KWin::SeatInterface*)
libkwin.so.6:KWin::TextInputV3Interface::~TextInputV3Interface()
libkwin.so.6:KWin::TextInputV3Interface::~TextInputV3Interface()
libkwin.so.6:KWin::TextInputV3Interface::~TextInputV3Interface()
libkwin.so.6:KWin::WorkspaceSceneOpenGL::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WorkspaceSceneOpenGL::qt_metacast(char const*)
libkwin.so.6:KWin::WorkspaceSceneOpenGL::createDecorationRenderer(KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::WorkspaceSceneOpenGL::doneOpenGLContextCurrent()
libkwin.so.6:KWin::WorkspaceSceneOpenGL::makeOpenGLContextCurrent()
libkwin.so.6:KWin::WorkspaceSceneOpenGL::createShadowTextureProvider(KWin::Shadow*)
libkwin.so.6:KWin::WorkspaceSceneOpenGL::WorkspaceSceneOpenGL(KWin::OpenGLBackend*)
libkwin.so.6:KWin::WorkspaceSceneOpenGL::WorkspaceSceneOpenGL(KWin::OpenGLBackend*)
libkwin.so.6:KWin::WorkspaceSceneOpenGL::~WorkspaceSceneOpenGL()
libkwin.so.6:KWin::WorkspaceSceneOpenGL::~WorkspaceSceneOpenGL()
libkwin.so.6:KWin::WorkspaceSceneOpenGL::~WorkspaceSceneOpenGL()
libkwin.so.6:KWin::XdgToplevelInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgToplevelInterface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgToplevelInterface::moveRequested(KWin::SeatInterface*, unsigned int)
libkwin.so.6:KWin::XdgToplevelInterface::resetOccurred()
libkwin.so.6:KWin::XdgToplevelInterface::sendConfigure(QSize const&, QFlags<KWin::XdgToplevelInterface::State> const&)
libkwin.so.6:KWin::XdgToplevelInterface::resizeRequested(KWin::SeatInterface*, KWin::XdgToplevelInterface::ResizeAnchor, unsigned int)
libkwin.so.6:KWin::XdgToplevelInterface::maximizeRequested()
libkwin.so.6:KWin::XdgToplevelInterface::minimizeRequested()
libkwin.so.6:KWin::XdgToplevelInterface::aboutToBeDestroyed()
libkwin.so.6:KWin::XdgToplevelInterface::maximumSizeChanged(QSize const&)
libkwin.so.6:KWin::XdgToplevelInterface::minimumSizeChanged(QSize const&)
libkwin.so.6:KWin::XdgToplevelInterface::sendWmCapabilities(QFlags<KWin::XdgToplevelInterface::Capability>)
libkwin.so.6:KWin::XdgToplevelInterface::windowClassChanged(QString const&)
libkwin.so.6:KWin::XdgToplevelInterface::windowTitleChanged(QString const&)
libkwin.so.6:KWin::XdgToplevelInterface::fullscreenRequested(KWin::OutputInterface*)
libkwin.so.6:KWin::XdgToplevelInterface::initializeRequested()
libkwin.so.6:KWin::XdgToplevelInterface::sendConfigureBounds(QSize const&)
libkwin.so.6:KWin::XdgToplevelInterface::unmaximizeRequested()
libkwin.so.6:KWin::XdgToplevelInterface::windowMenuRequested(KWin::SeatInterface*, QPoint const&, unsigned int)
libkwin.so.6:KWin::XdgToplevelInterface::unfullscreenRequested()
libkwin.so.6:KWin::XdgToplevelInterface::parentXdgToplevelChanged()
libkwin.so.6:KWin::XdgToplevelInterface::get(wl_resource*)
libkwin.so.6:KWin::XdgToplevelInterface::role()
libkwin.so.6:KWin::XdgToplevelInterface::sendClose()
libkwin.so.6:KWin::XdgToplevelInterface::XdgToplevelInterface(KWin::XdgSurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::XdgToplevelInterface::XdgToplevelInterface(KWin::XdgSurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::XdgToplevelInterface::~XdgToplevelInterface()
libkwin.so.6:KWin::XdgToplevelInterface::~XdgToplevelInterface()
libkwin.so.6:KWin::XdgToplevelInterface::~XdgToplevelInterface()
libkwin.so.6:KWin::IdleNotifyV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::IdleNotifyV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::IdleNotifyV1Interface::IdleNotifyV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::IdleNotifyV1Interface::IdleNotifyV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::IdleNotifyV1Interface::~IdleNotifyV1Interface()
libkwin.so.6:KWin::IdleNotifyV1Interface::~IdleNotifyV1Interface()
libkwin.so.6:KWin::IdleNotifyV1Interface::~IdleNotifyV1Interface()
libkwin.so.6:KWin::InputPanelV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputPanelV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::InputPanelV1Interface::inputPanelSurfaceAdded(KWin::InputPanelSurfaceV1Interface*)
libkwin.so.6:KWin::InputPanelV1Interface::InputPanelV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::InputPanelV1Interface::InputPanelV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::InputPanelV1Interface::~InputPanelV1Interface()
libkwin.so.6:KWin::InputPanelV1Interface::~InputPanelV1Interface()
libkwin.so.6:KWin::InputPanelV1Interface::~InputPanelV1Interface()
libkwin.so.6:KWin::LayerShellV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LayerShellV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::LayerShellV1Interface::surfaceCreated(KWin::LayerSurfaceV1Interface*)
libkwin.so.6:KWin::LayerShellV1Interface::LayerShellV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::LayerShellV1Interface::LayerShellV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::LayerShellV1Interface::~LayerShellV1Interface()
libkwin.so.6:KWin::LayerShellV1Interface::~LayerShellV1Interface()
libkwin.so.6:KWin::LayerShellV1Interface::~LayerShellV1Interface()
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::qt_metacast(char const*)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::setTranches(QList<KWin::LinuxDmaBufV1Feedback::Tranche> const&)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::setScanoutTranches(KWin::DrmDevice*, QHash<unsigned int, QList<unsigned long> > const&)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::createScanoutTranches(QList<KWin::LinuxDmaBufV1Feedback::Tranche> const&, KWin::DrmDevice*, QHash<unsigned int, QList<unsigned long> > const&)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::LinuxDmaBufV1Feedback(KWin::LinuxDmaBufV1ClientBufferIntegrationPrivate*)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::LinuxDmaBufV1Feedback(KWin::LinuxDmaBufV1ClientBufferIntegrationPrivate*)
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::~LinuxDmaBufV1Feedback()
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::~LinuxDmaBufV1Feedback()
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::~LinuxDmaBufV1Feedback()
libkwin.so.6:KWin::OpenGLSurfaceContents::setDirty()
libkwin.so.6:KWin::PlasmaWindowInterface::setMovable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaWindowInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaWindowInterface::setGeometry(QRect const&)
libkwin.so.6:KWin::PlasmaWindowInterface::sendToOutput(KWin::OutputInterface*)
libkwin.so.6:KWin::PlasmaWindowInterface::setCloseable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setKeepAbove(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setKeepBelow(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setMaximized(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setMinimized(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setResizable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setShadeable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::moveRequested()
libkwin.so.6:KWin::PlasmaWindowInterface::setFullscreen(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::closeRequested()
libkwin.so.6:KWin::PlasmaWindowInterface::setSkipTaskbar(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::activeRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::resizeRequested()
libkwin.so.6:KWin::PlasmaWindowInterface::setMaximizeable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setMinimizeable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setParentWindow(KWin::PlasmaWindowInterface*)
libkwin.so.6:KWin::PlasmaWindowInterface::setResourceName(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::setSkipSwitcher(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::shadedRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::movableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setOnAllDesktops(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::addPlasmaActivity(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::setFullscreenable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::closeableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::keepAboveRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::keepBelowRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::maximizedRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::minimizedRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::resizableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::shadeableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::fullscreenRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setDemandsAttention(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::removePlasmaActivity(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::skipTaskbarRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::maximizeableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::minimizeableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::skipSwitcherRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::addPlasmaVirtualDesktop(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::fullscreenableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setApplicationMenuPaths(QString const&, QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::demandsAttentionRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::minimizedGeometriesChanged()
libkwin.so.6:KWin::PlasmaWindowInterface::removePlasmaVirtualDesktop(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::setVirtualDesktopChangeable(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::enterPlasmaActivityRequested(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::leavePlasmaActivityRequested(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::virtualDesktopChangeableRequested(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::enterPlasmaVirtualDesktopRequested(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::leavePlasmaVirtualDesktopRequested(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::enterNewPlasmaVirtualDesktopRequested()
libkwin.so.6:KWin::PlasmaWindowInterface::unmap()
libkwin.so.6:KWin::PlasmaWindowInterface::setPid(unsigned int)
libkwin.so.6:KWin::PlasmaWindowInterface::setIcon(QIcon const&)
libkwin.so.6:KWin::PlasmaWindowInterface::setAppId(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::setTitle(QString const&)
libkwin.so.6:KWin::PlasmaWindowInterface::setActive(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::setShaded(bool)
libkwin.so.6:KWin::PlasmaWindowInterface::PlasmaWindowInterface(KWin::PlasmaWindowManagementInterface*, QObject*)
libkwin.so.6:KWin::PlasmaWindowInterface::PlasmaWindowInterface(KWin::PlasmaWindowManagementInterface*, QObject*)
libkwin.so.6:KWin::PlasmaWindowInterface::~PlasmaWindowInterface()
libkwin.so.6:KWin::PlasmaWindowInterface::~PlasmaWindowInterface()
libkwin.so.6:KWin::PlasmaWindowInterface::~PlasmaWindowInterface()
libkwin.so.6:KWin::QPainterSwapchainSlot::QPainterSwapchainSlot(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::QPainterSwapchainSlot::QPainterSwapchainSlot(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::QPainterSwapchainSlot::~QPainterSwapchainSlot()
libkwin.so.6:KWin::QPainterSwapchainSlot::~QPainterSwapchainSlot()
libkwin.so.6:KWin::ScreencastV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScreencastV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::ScreencastV1Interface::outputScreencastRequested(KWin::ScreencastStreamV1Interface*, KWin::OutputInterface*, KWin::ScreencastV1Interface::CursorMode)
libkwin.so.6:KWin::ScreencastV1Interface::regionScreencastRequested(KWin::ScreencastStreamV1Interface*, QRect const&, double, KWin::ScreencastV1Interface::CursorMode)
libkwin.so.6:KWin::ScreencastV1Interface::windowScreencastRequested(KWin::ScreencastStreamV1Interface*, QString const&, KWin::ScreencastV1Interface::CursorMode)
libkwin.so.6:KWin::ScreencastV1Interface::virtualOutputScreencastRequested(KWin::ScreencastStreamV1Interface*, QString const&, QSize const&, double, KWin::ScreencastV1Interface::CursorMode)
libkwin.so.6:KWin::ScreencastV1Interface::ScreencastV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ScreencastV1Interface::ScreencastV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ScreencastV1Interface::~ScreencastV1Interface()
libkwin.so.6:KWin::ScreencastV1Interface::~ScreencastV1Interface()
libkwin.so.6:KWin::ScreencastV1Interface::~ScreencastV1Interface()
libkwin.so.6:KWin::ShadowTextureProvider::ShadowTextureProvider(KWin::Shadow*)
libkwin.so.6:KWin::ShadowTextureProvider::ShadowTextureProvider(KWin::Shadow*)
libkwin.so.6:KWin::ShadowTextureProvider::~ShadowTextureProvider()
libkwin.so.6:KWin::ShadowTextureProvider::~ShadowTextureProvider()
libkwin.so.6:KWin::ShadowTextureProvider::~ShadowTextureProvider()
libkwin.so.6:KWin::SlideManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SlideManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::SlideManagerInterface::remove()
libkwin.so.6:KWin::SlideManagerInterface::SlideManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::SlideManagerInterface::SlideManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::SlideManagerInterface::~SlideManagerInterface()
libkwin.so.6:KWin::SlideManagerInterface::~SlideManagerInterface()
libkwin.so.6:KWin::SlideManagerInterface::~SlideManagerInterface()
libkwin.so.6:KWin::SurfacePixmapInternal::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SurfacePixmapInternal::qt_metacast(char const*)
libkwin.so.6:KWin::SurfacePixmapInternal::create()
libkwin.so.6:KWin::SurfacePixmapInternal::update()
libkwin.so.6:KWin::SurfacePixmapInternal::SurfacePixmapInternal(KWin::SurfaceItemInternal*, QObject*)
libkwin.so.6:KWin::SurfacePixmapInternal::SurfacePixmapInternal(KWin::SurfaceItemInternal*, QObject*)
libkwin.so.6:KWin::TabletSeatV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletSeatV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletSeatV2Interface::addTabletPad(QString const&, QString const&, QList<QString> const&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, KWin::TabletV2Interface*)
libkwin.so.6:KWin::TabletSeatV2Interface::removeDevice(QString const&)
libkwin.so.6:KWin::TabletSeatV2Interface::addTool(KWin::TabletToolV2Interface::Type, unsigned long long, unsigned long long, QList<KWin::TabletToolV2Interface::Capability> const&, QString const&)
libkwin.so.6:KWin::TabletSeatV2Interface::addTablet(unsigned int, unsigned int, QString const&, QString const&, QList<QString> const&)
libkwin.so.6:KWin::TabletSeatV2Interface::TabletSeatV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TabletSeatV2Interface::TabletSeatV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TabletSeatV2Interface::~TabletSeatV2Interface()
libkwin.so.6:KWin::TabletSeatV2Interface::~TabletSeatV2Interface()
libkwin.so.6:KWin::TabletSeatV2Interface::~TabletSeatV2Interface()
libkwin.so.6:KWin::TabletSurfaceCursorV2::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletSurfaceCursorV2::qt_metacast(char const*)
libkwin.so.6:KWin::TabletSurfaceCursorV2::changed()
libkwin.so.6:KWin::TabletSurfaceCursorV2::TabletSurfaceCursorV2()
libkwin.so.6:KWin::TabletSurfaceCursorV2::TabletSurfaceCursorV2()
libkwin.so.6:KWin::TabletSurfaceCursorV2::~TabletSurfaceCursorV2()
libkwin.so.6:KWin::TabletSurfaceCursorV2::~TabletSurfaceCursorV2()
libkwin.so.6:KWin::TabletSurfaceCursorV2::~TabletSurfaceCursorV2()
libkwin.so.6:KWin::TabletToolV2Interface::sendButton(unsigned int, bool)
libkwin.so.6:KWin::TabletToolV2Interface::sendMotion(QPointF const&)
libkwin.so.6:KWin::TabletToolV2Interface::sendSlider(int)
libkwin.so.6:KWin::TabletToolV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletToolV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletToolV2Interface::sendDistance(unsigned int)
libkwin.so.6:KWin::TabletToolV2Interface::sendPressure(unsigned int)
libkwin.so.6:KWin::TabletToolV2Interface::sendRotation(double)
libkwin.so.6:KWin::TabletToolV2Interface::cursorChanged(std::variant<KWin::TabletSurfaceCursorV2*, QByteArray> const&)
libkwin.so.6:KWin::TabletToolV2Interface::sendProximityIn(KWin::TabletV2Interface*)
libkwin.so.6:KWin::TabletToolV2Interface::sendProximityOut()
libkwin.so.6:KWin::TabletToolV2Interface::setCurrentSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::TabletToolV2Interface::get(wl_resource*)
libkwin.so.6:KWin::TabletToolV2Interface::sendUp()
libkwin.so.6:KWin::TabletToolV2Interface::sendDown()
libkwin.so.6:KWin::TabletToolV2Interface::sendTilt(double, double)
libkwin.so.6:KWin::TabletToolV2Interface::sendFrame(unsigned int)
libkwin.so.6:KWin::TabletToolV2Interface::sendWheel(int, int)
libkwin.so.6:KWin::TabletToolV2Interface::TabletToolV2Interface(KWin::Display*, KWin::TabletToolV2Interface::Type, unsigned int, unsigned int, unsigned int, unsigned int, QList<KWin::TabletToolV2Interface::Capability> const&)
libkwin.so.6:KWin::TabletToolV2Interface::TabletToolV2Interface(KWin::Display*, KWin::TabletToolV2Interface::Type, unsigned int, unsigned int, unsigned int, unsigned int, QList<KWin::TabletToolV2Interface::Capability> const&)
libkwin.so.6:KWin::TabletToolV2Interface::~TabletToolV2Interface()
libkwin.so.6:KWin::TabletToolV2Interface::~TabletToolV2Interface()
libkwin.so.6:KWin::TabletToolV2Interface::~TabletToolV2Interface()
libkwin.so.6:KWin::TouchInputRedirection::focusUpdate(KWin::Window*, KWin::Window*)
libkwin.so.6:KWin::TouchInputRedirection::processDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::TouchInputRedirection::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TouchInputRedirection::qt_metacast(char const*)
libkwin.so.6:KWin::TouchInputRedirection::processMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::TouchInputRedirection::cleanupDecoration(KWin::Decoration::DecoratedClientImpl*, KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::TouchInputRedirection::focusUpdatesBlocked()
libkwin.so.6:KWin::TouchInputRedirection::init()
libkwin.so.6:KWin::TouchInputRedirection::frame()
libkwin.so.6:KWin::TouchInputRedirection::cancel()
libkwin.so.6:KWin::TouchInputRedirection::processUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::TouchInputRedirection::TouchInputRedirection(KWin::InputRedirection*)
libkwin.so.6:KWin::TouchInputRedirection::TouchInputRedirection(KWin::InputRedirection*)
libkwin.so.6:KWin::TouchInputRedirection::~TouchInputRedirection()
libkwin.so.6:KWin::TouchInputRedirection::~TouchInputRedirection()
libkwin.so.6:KWin::TouchInputRedirection::~TouchInputRedirection()
libkwin.so.6:KWin::VirtualDesktopManager::setCurrent(KWin::VirtualDesktop*)
libkwin.so.6:KWin::VirtualDesktopManager::setCurrent(unsigned int)
libkwin.so.6:KWin::VirtualDesktopManager::inDirection(KWin::VirtualDesktop*, KWin::VirtualDesktopManager::Direction, bool)
libkwin.so.6:KWin::VirtualDesktopManager::inDirection(unsigned int, KWin::VirtualDesktopManager::Direction, bool)
libkwin.so.6:KWin::VirtualDesktopManager::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::VirtualDesktopManager::qt_metacast(char const*)
libkwin.so.6:KWin::VirtualDesktopManager::rowsChanged(unsigned int)
libkwin.so.6:KWin::VirtualDesktopManager::setRootInfo(NETRootInfo*)
libkwin.so.6:KWin::VirtualDesktopManager::countChanged(unsigned int, unsigned int)
libkwin.so.6:KWin::VirtualDesktopManager::desktopAdded(KWin::VirtualDesktop*)
libkwin.so.6:KWin::VirtualDesktopManager::slotPrevious()
libkwin.so.6:KWin::VirtualDesktopManager::slotSwitchTo()
libkwin.so.6:KWin::VirtualDesktopManager::updateLayout()
libkwin.so.6:KWin::VirtualDesktopManager::initShortcuts()
libkwin.so.6:KWin::VirtualDesktopManager::layoutChanged(int, int)
libkwin.so.6:KWin::VirtualDesktopManager::currentChanged(KWin::VirtualDesktop*, KWin::VirtualDesktop*)
libkwin.so.6:KWin::VirtualDesktopManager::desktopRemoved(KWin::VirtualDesktop*)
libkwin.so.6:KWin::VirtualDesktopManager::updateRootInfo()
libkwin.so.6:KWin::VirtualDesktopManager::currentChanging(KWin::VirtualDesktop*, QPointF)
libkwin.so.6:KWin::VirtualDesktopManager::gestureReleasedX()
libkwin.so.6:KWin::VirtualDesktopManager::gestureReleasedY()
libkwin.so.6:KWin::VirtualDesktopManager::createVirtualDesktop(unsigned int, QString const&)
libkwin.so.6:KWin::VirtualDesktopManager::removeVirtualDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::VirtualDesktopManager::removeVirtualDesktop(QString const&)
libkwin.so.6:KWin::VirtualDesktopManager::initSwitchToShortcuts()
libkwin.so.6:KWin::VirtualDesktopManager::currentChangingCancelled()
libkwin.so.6:KWin::VirtualDesktopManager::setNavigationWrappingAround(bool)
libkwin.so.6:KWin::VirtualDesktopManager::setVirtualDesktopManagement(KWin::PlasmaVirtualDesktopManagementInterface*)
libkwin.so.6:KWin::VirtualDesktopManager::navigationWrappingAroundChanged()
libkwin.so.6:KWin::VirtualDesktopManager::load()
libkwin.so.6:KWin::VirtualDesktopManager::save()
libkwin.so.6:KWin::VirtualDesktopManager::create(QObject*)
libkwin.so.6:KWin::VirtualDesktopManager::moveTo(KWin::VirtualDesktopManager::Direction, bool)
libkwin.so.6:KWin::VirtualDesktopManager::slotUp()
libkwin.so.6:KWin::VirtualDesktopManager::setRows(unsigned int)
libkwin.so.6:KWin::VirtualDesktopManager::setCount(unsigned int)
libkwin.so.6:KWin::VirtualDesktopManager::slotDown()
libkwin.so.6:KWin::VirtualDesktopManager::slotLeft()
libkwin.so.6:KWin::VirtualDesktopManager::slotNext()
libkwin.so.6:KWin::VirtualDesktopManager::addAction(QString const&, KLocalizedString const&, unsigned int, QKeySequence const&, void (KWin::VirtualDesktopManager::*)())
libkwin.so.6:KWin::VirtualDesktopManager::addAction(QString const&, QString const&, QKeySequence const&, void (KWin::VirtualDesktopManager::*)())
libkwin.so.6:KWin::VirtualDesktopManager::slotRight()
libkwin.so.6:KWin::VirtualDesktopManager::VirtualDesktopManager(QObject*)
libkwin.so.6:KWin::VirtualDesktopManager::VirtualDesktopManager(QObject*)
libkwin.so.6:KWin::VirtualDesktopManager::~VirtualDesktopManager()
libkwin.so.6:KWin::VirtualDesktopManager::~VirtualDesktopManager()
libkwin.so.6:KWin::VirtualDesktopManager::~VirtualDesktopManager()
libkwin.so.6:KWin::XdgForeignV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgForeignV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgForeignV2Interface::transientFor(KWin::SurfaceInterface*)
libkwin.so.6:KWin::XdgForeignV2Interface::exportSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::XdgForeignV2Interface::transientChanged(KWin::SurfaceInterface*, KWin::SurfaceInterface*)
libkwin.so.6:KWin::XdgForeignV2Interface::XdgForeignV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgForeignV2Interface::XdgForeignV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgForeignV2Interface::~XdgForeignV2Interface()
libkwin.so.6:KWin::XdgForeignV2Interface::~XdgForeignV2Interface()
libkwin.so.6:KWin::XdgForeignV2Interface::~XdgForeignV2Interface()
libkwin.so.6:KWin::EffectTogglableGesture::addTouchpadPinchGesture(KWin::PinchDirection, unsigned int)
libkwin.so.6:KWin::EffectTogglableGesture::addTouchpadSwipeGesture(KWin::SwipeDirection, unsigned int)
libkwin.so.6:KWin::EffectTogglableGesture::addTouchscreenSwipeGesture(KWin::SwipeDirection, unsigned int)
libkwin.so.6:KWin::EffectTogglableGesture::EffectTogglableGesture(KWin::EffectTogglableState*)
libkwin.so.6:KWin::EffectTogglableGesture::EffectTogglableGesture(KWin::EffectTogglableState*)
libkwin.so.6:KWin::InputMethodV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputMethodV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::InputMethodV1Interface::sendActivate()
libkwin.so.6:KWin::InputMethodV1Interface::sendDeactivate()
libkwin.so.6:KWin::InputMethodV1Interface::InputMethodV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::InputMethodV1Interface::InputMethodV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::InputMethodV1Interface::~InputMethodV1Interface()
libkwin.so.6:KWin::InputMethodV1Interface::~InputMethodV1Interface()
libkwin.so.6:KWin::InputMethodV1Interface::~InputMethodV1Interface()
libkwin.so.6:KWin::QPainterSurfaceTexture::QPainterSurfaceTexture(KWin::QPainterBackend*)
libkwin.so.6:KWin::QPainterSurfaceTexture::QPainterSurfaceTexture(KWin::QPainterBackend*)
libkwin.so.6:KWin::ShadowManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ShadowManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ShadowManagerInterface::ShadowManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ShadowManagerInterface::ShadowManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ShadowManagerInterface::~ShadowManagerInterface()
libkwin.so.6:KWin::ShadowManagerInterface::~ShadowManagerInterface()
libkwin.so.6:KWin::ShadowManagerInterface::~ShadowManagerInterface()
libkwin.so.6:KWin::SubCompositorInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::SubCompositorInterface::qt_metacast(char const*)
libkwin.so.6:KWin::SubCompositorInterface::subSurfaceCreated(KWin::SubSurfaceInterface*)
libkwin.so.6:KWin::SubCompositorInterface::SubCompositorInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::SubCompositorInterface::SubCompositorInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::SubCompositorInterface::~SubCompositorInterface()
libkwin.so.6:KWin::SubCompositorInterface::~SubCompositorInterface()
libkwin.so.6:KWin::SubCompositorInterface::~SubCompositorInterface()
libkwin.so.6:KWin::WorkspaceSceneQPainter::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::WorkspaceSceneQPainter::qt_metacast(char const*)
libkwin.so.6:KWin::WorkspaceSceneQPainter::createDecorationRenderer(KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::WorkspaceSceneQPainter::createShadowTextureProvider(KWin::Shadow*)
libkwin.so.6:KWin::WorkspaceSceneQPainter::WorkspaceSceneQPainter(KWin::QPainterBackend*)
libkwin.so.6:KWin::WorkspaceSceneQPainter::WorkspaceSceneQPainter(KWin::QPainterBackend*)
libkwin.so.6:KWin::WorkspaceSceneQPainter::~WorkspaceSceneQPainter()
libkwin.so.6:KWin::WorkspaceSceneQPainter::~WorkspaceSceneQPainter()
libkwin.so.6:KWin::WorkspaceSceneQPainter::~WorkspaceSceneQPainter()
libkwin.so.6:KWin::AppMenuManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AppMenuManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::AppMenuManagerInterface::appMenuCreated(KWin::AppMenuInterface*)
libkwin.so.6:KWin::AppMenuManagerInterface::appMenuForSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::AppMenuManagerInterface::AppMenuManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::AppMenuManagerInterface::AppMenuManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::AppMenuManagerInterface::~AppMenuManagerInterface()
libkwin.so.6:KWin::AppMenuManagerInterface::~AppMenuManagerInterface()
libkwin.so.6:KWin::AppMenuManagerInterface::~AppMenuManagerInterface()
libkwin.so.6:KWin::GraphicsBufferAllocator::GraphicsBufferAllocator()
libkwin.so.6:KWin::GraphicsBufferAllocator::GraphicsBufferAllocator()
libkwin.so.6:KWin::GraphicsBufferAllocator::~GraphicsBufferAllocator()
libkwin.so.6:KWin::GraphicsBufferAllocator::~GraphicsBufferAllocator()
libkwin.so.6:KWin::GraphicsBufferAllocator::~GraphicsBufferAllocator()
libkwin.so.6:KWin::LayerSurfaceV1Interface::sendClosed()
libkwin.so.6:KWin::LayerSurfaceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LayerSurfaceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::LayerSurfaceV1Interface::layerChanged()
libkwin.so.6:KWin::LayerSurfaceV1Interface::anchorChanged()
libkwin.so.6:KWin::LayerSurfaceV1Interface::sendConfigure(QSize const&)
libkwin.so.6:KWin::LayerSurfaceV1Interface::marginsChanged()
libkwin.so.6:KWin::LayerSurfaceV1Interface::aboutToBeDestroyed()
libkwin.so.6:KWin::LayerSurfaceV1Interface::desiredSizeChanged()
libkwin.so.6:KWin::LayerSurfaceV1Interface::acceptsFocusChanged()
libkwin.so.6:KWin::LayerSurfaceV1Interface::exclusiveZoneChanged()
libkwin.so.6:KWin::LayerSurfaceV1Interface::configureAcknowledged(unsigned int)
libkwin.so.6:KWin::LayerSurfaceV1Interface::role()
libkwin.so.6:KWin::LayerSurfaceV1Interface::LayerSurfaceV1Interface(KWin::LayerShellV1Interface*, KWin::SurfaceInterface*, KWin::OutputInterface*, KWin::LayerSurfaceV1Interface::Layer, QString const&, wl_resource*)
libkwin.so.6:KWin::LayerSurfaceV1Interface::LayerSurfaceV1Interface(KWin::LayerShellV1Interface*, KWin::SurfaceInterface*, KWin::OutputInterface*, KWin::LayerSurfaceV1Interface::Layer, QString const&, wl_resource*)
libkwin.so.6:KWin::LayerSurfaceV1Interface::~LayerSurfaceV1Interface()
libkwin.so.6:KWin::LayerSurfaceV1Interface::~LayerSurfaceV1Interface()
libkwin.so.6:KWin::LayerSurfaceV1Interface::~LayerSurfaceV1Interface()
libkwin.so.6:KWin::OpenGLSurfaceTextureX11::OpenGLSurfaceTextureX11(KWin::OpenGLBackend*, KWin::SurfacePixmapX11*)
libkwin.so.6:KWin::OpenGLSurfaceTextureX11::OpenGLSurfaceTextureX11(KWin::OpenGLBackend*, KWin::SurfacePixmapX11*)
libkwin.so.6:KWin::OutputDeviceV2Interface::updateEdid()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateName()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateUuid()
libkwin.so.6:KWin::OutputDeviceV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OutputDeviceV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::OutputDeviceV2Interface::updateModel()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateModes()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateScale()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateEisaId()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateEnabled()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateGeometry()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateOverscan()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateRgbRange()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateSubPixel()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateTransform()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateVrrPolicy()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateAutoRotate()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateBrightness()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateCurrentMode()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateCapabilities()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateManufacturer()
libkwin.so.6:KWin::OutputDeviceV2Interface::updatePhysicalSize()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateSerialNumber()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateSdrBrightness()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateGlobalPosition()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateIccProfilePath()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateWideColorGamut()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateHighDynamicRange()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateSdrGamutWideness()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateBrightnessMetadata()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateColorProfileSource()
libkwin.so.6:KWin::OutputDeviceV2Interface::updateBrightnessOverrides()
libkwin.so.6:KWin::OutputDeviceV2Interface::get(wl_resource*)
libkwin.so.6:KWin::OutputDeviceV2Interface::remove()
libkwin.so.6:KWin::OutputDeviceV2Interface::OutputDeviceV2Interface(KWin::Display*, KWin::Output*, QObject*)
libkwin.so.6:KWin::OutputDeviceV2Interface::OutputDeviceV2Interface(KWin::Display*, KWin::Output*, QObject*)
libkwin.so.6:KWin::OutputDeviceV2Interface::~OutputDeviceV2Interface()
libkwin.so.6:KWin::OutputDeviceV2Interface::~OutputDeviceV2Interface()
libkwin.so.6:KWin::OutputDeviceV2Interface::~OutputDeviceV2Interface()
libkwin.so.6:KWin::PointerInputRedirection::focusUpdate(KWin::Window*, KWin::Window*)
libkwin.so.6:KWin::PointerInputRedirection::processAxis(KWin::InputRedirection::PointerAxis, double, int, KWin::InputRedirection::PointerAxisSource, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processWarp(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PointerInputRedirection::qt_metacast(char const*)
libkwin.so.6:KWin::PointerInputRedirection::processFrame(KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::updateButton(unsigned int, KWin::InputRedirection::PointerButtonState)
libkwin.so.6:KWin::PointerInputRedirection::processButton(unsigned int, KWin::InputRedirection::PointerButtonState, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processMotion(QPointF const&, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::updateToReset()
libkwin.so.6:KWin::PointerInputRedirection::updatePosition(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::PointerInputRedirection::applyEdgeBarrier(QPointF const&, KWin::Output const*, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::PointerInputRedirection::cleanupDecoration(KWin::Decoration::DecoratedClientImpl*, KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::PointerInputRedirection::focusUpdatesBlocked()
libkwin.so.6:KWin::PointerInputRedirection::setEnableConstraints(bool)
libkwin.so.6:KWin::PointerInputRedirection::processHoldGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processMotionAbsolute(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processMotionInternal(QPointF const&, QPointF const&, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*, KWin::PointerInputRedirection::MotionType)
libkwin.so.6:KWin::PointerInputRedirection::processPinchGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processSwipeGestureEnd(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::breakPointerConstraints(KWin::SurfaceInterface*)
libkwin.so.6:KWin::PointerInputRedirection::processHoldGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::updateAfterScreenChange()
libkwin.so.6:KWin::PointerInputRedirection::updateOnStartMoveResize()
libkwin.so.6:KWin::PointerInputRedirection::processPinchGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processSwipeGestureBegin(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::setEffectsOverrideCursor(Qt::CursorShape)
libkwin.so.6:KWin::PointerInputRedirection::setWindowSelectionCursor(QByteArray const&)
libkwin.so.6:KWin::PointerInputRedirection::updatePointerConstraints()
libkwin.so.6:KWin::PointerInputRedirection::processPinchGestureUpdate(double, double, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processSwipeGestureUpdate(QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processHoldGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::removeEffectsOverrideCursor()
libkwin.so.6:KWin::PointerInputRedirection::removeWindowSelectionCursor()
libkwin.so.6:KWin::PointerInputRedirection::processPinchGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::processSwipeGestureCancelled(std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::PointerInputRedirection::disconnectPointerConstraintsConnection()
libkwin.so.6:KWin::PointerInputRedirection::disconnectConfinedPointerRegionConnection()
libkwin.so.6:KWin::PointerInputRedirection::disconnectLockedPointerAboutToBeUnboundConnection()
libkwin.so.6:KWin::PointerInputRedirection::init()
libkwin.so.6:KWin::PointerInputRedirection::warp(QPointF const&)
libkwin.so.6:KWin::PointerInputRedirection::PointerInputRedirection(KWin::InputRedirection*)
libkwin.so.6:KWin::PointerInputRedirection::PointerInputRedirection(KWin::InputRedirection*)
libkwin.so.6:KWin::PointerInputRedirection::~PointerInputRedirection()
libkwin.so.6:KWin::PointerInputRedirection::~PointerInputRedirection()
libkwin.so.6:KWin::PointerInputRedirection::~PointerInputRedirection()
libkwin.so.6:KWin::ContrastManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ContrastManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ContrastManagerInterface::remove()
libkwin.so.6:KWin::ContrastManagerInterface::ContrastManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ContrastManagerInterface::ContrastManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ContrastManagerInterface::~ContrastManagerInterface()
libkwin.so.6:KWin::ContrastManagerInterface::~ContrastManagerInterface()
libkwin.so.6:KWin::ContrastManagerInterface::~ContrastManagerInterface()
libkwin.so.6:KWin::KeyboardInputRedirection::processKey(unsigned int, KWin::InputRedirection::KeyboardKeyState, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::KeyboardInputRedirection::ledsChanged(QFlags<KWin::LED>)
libkwin.so.6:KWin::KeyboardInputRedirection::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::KeyboardInputRedirection::qt_metacast(char const*)
libkwin.so.6:KWin::KeyboardInputRedirection::reconfigure()
libkwin.so.6:KWin::KeyboardInputRedirection::init()
libkwin.so.6:KWin::KeyboardInputRedirection::update()
libkwin.so.6:KWin::KeyboardInputRedirection::KeyboardInputRedirection(KWin::InputRedirection*)
libkwin.so.6:KWin::KeyboardInputRedirection::KeyboardInputRedirection(KWin::InputRedirection*)
libkwin.so.6:KWin::KeyboardInputRedirection::~KeyboardInputRedirection()
libkwin.so.6:KWin::KeyboardInputRedirection::~KeyboardInputRedirection()
libkwin.so.6:KWin::KeyboardInputRedirection::~KeyboardInputRedirection()
libkwin.so.6:KWin::LockedPointerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LockedPointerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::LockedPointerV1Interface::lockedChanged()
libkwin.so.6:KWin::LockedPointerV1Interface::regionChanged()
libkwin.so.6:KWin::LockedPointerV1Interface::aboutToBeDestroyed()
libkwin.so.6:KWin::LockedPointerV1Interface::cursorPositionHintChanged()
libkwin.so.6:KWin::LockedPointerV1Interface::setLocked(bool)
libkwin.so.6:KWin::LockedPointerV1Interface::LockedPointerV1Interface(KWin::SurfaceInterface*, KWin::LockedPointerV1Interface::LifeTime, QRegion const&, wl_resource*)
libkwin.so.6:KWin::LockedPointerV1Interface::LockedPointerV1Interface(KWin::SurfaceInterface*, KWin::LockedPointerV1Interface::LifeTime, QRegion const&, wl_resource*)
libkwin.so.6:KWin::LockedPointerV1Interface::~LockedPointerV1Interface()
libkwin.so.6:KWin::LockedPointerV1Interface::~LockedPointerV1Interface()
libkwin.so.6:KWin::LockedPointerV1Interface::~LockedPointerV1Interface()
libkwin.so.6:KWin::TabletManagerV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletManagerV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletManagerV2Interface::TabletManagerV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TabletManagerV2Interface::TabletManagerV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TabletManagerV2Interface::~TabletManagerV2Interface()
libkwin.so.6:KWin::TabletManagerV2Interface::~TabletManagerV2Interface()
libkwin.so.6:KWin::TabletManagerV2Interface::~TabletManagerV2Interface()
libkwin.so.6:KWin::TabletPadRingV2Interface::sendSource(KWin::TabletPadRingV2Interface::Source)
libkwin.so.6:KWin::TabletPadRingV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletPadRingV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletPadRingV2Interface::sendStop()
libkwin.so.6:KWin::TabletPadRingV2Interface::sendAngle(double)
libkwin.so.6:KWin::TabletPadRingV2Interface::sendFrame(unsigned int)
libkwin.so.6:KWin::TabletPadRingV2Interface::TabletPadRingV2Interface(KWin::TabletPadV2Interface*)
libkwin.so.6:KWin::TabletPadRingV2Interface::TabletPadRingV2Interface(KWin::TabletPadV2Interface*)
libkwin.so.6:KWin::TabletPadRingV2Interface::~TabletPadRingV2Interface()
libkwin.so.6:KWin::TabletPadRingV2Interface::~TabletPadRingV2Interface()
libkwin.so.6:KWin::TabletPadRingV2Interface::~TabletPadRingV2Interface()
libkwin.so.6:KWin::XdgActivationV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgActivationV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgActivationV1Interface::activateRequested(KWin::SurfaceInterface*, QString const&)
libkwin.so.6:KWin::XdgActivationV1Interface::setActivationTokenCreator(std::function<QString (KWin::ClientConnection*, KWin::SurfaceInterface*, unsigned int, KWin::SeatInterface*, QString const&)> const&)
libkwin.so.6:KWin::XdgActivationV1Interface::XdgActivationV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgActivationV1Interface::XdgActivationV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgActivationV1Interface::~XdgActivationV1Interface()
libkwin.so.6:KWin::XdgActivationV1Interface::~XdgActivationV1Interface()
libkwin.so.6:KWin::XdgActivationV1Interface::~XdgActivationV1Interface()
libkwin.so.6:KWin::XwaylandShellV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XwaylandShellV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XwaylandShellV1Interface::surfaceAssociated(KWin::XwaylandSurfaceV1Interface*)
libkwin.so.6:KWin::XwaylandShellV1Interface::XwaylandShellV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XwaylandShellV1Interface::XwaylandShellV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XwaylandShellV1Interface::~XwaylandShellV1Interface()
libkwin.so.6:KWin::XwaylandShellV1Interface::~XwaylandShellV1Interface()
libkwin.so.6:KWin::XwaylandShellV1Interface::~XwaylandShellV1Interface()
libkwin.so.6:KWin::x11ToQtKeyboardModifiers(int)
libkwin.so.6:KWin::TabletPadGroupV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletPadGroupV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletPadGroupV2Interface::sendModeSwitch(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::TabletPadGroupV2Interface::TabletPadGroupV2Interface(unsigned int, KWin::TabletPadV2Interface*)
libkwin.so.6:KWin::TabletPadGroupV2Interface::TabletPadGroupV2Interface(unsigned int, KWin::TabletPadV2Interface*)
libkwin.so.6:KWin::TabletPadGroupV2Interface::~TabletPadGroupV2Interface()
libkwin.so.6:KWin::TabletPadGroupV2Interface::~TabletPadGroupV2Interface()
libkwin.so.6:KWin::TabletPadGroupV2Interface::~TabletPadGroupV2Interface()
libkwin.so.6:KWin::TabletPadStripV2Interface::sendSource(KWin::TabletPadStripV2Interface::Source)
libkwin.so.6:KWin::TabletPadStripV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabletPadStripV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TabletPadStripV2Interface::sendPosition(unsigned int)
libkwin.so.6:KWin::TabletPadStripV2Interface::sendStop()
libkwin.so.6:KWin::TabletPadStripV2Interface::sendFrame(unsigned int)
libkwin.so.6:KWin::TabletPadStripV2Interface::TabletPadStripV2Interface(KWin::TabletPadV2Interface*)
libkwin.so.6:KWin::TabletPadStripV2Interface::TabletPadStripV2Interface(KWin::TabletPadV2Interface*)
libkwin.so.6:KWin::TabletPadStripV2Interface::~TabletPadStripV2Interface()
libkwin.so.6:KWin::TabletPadStripV2Interface::~TabletPadStripV2Interface()
libkwin.so.6:KWin::TabletPadStripV2Interface::~TabletPadStripV2Interface()
libkwin.so.6:KWin::ConfinedPointerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ConfinedPointerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::ConfinedPointerV1Interface::setConfined(bool)
libkwin.so.6:KWin::ConfinedPointerV1Interface::regionChanged()
libkwin.so.6:KWin::ConfinedPointerV1Interface::confinedChanged()
libkwin.so.6:KWin::ConfinedPointerV1Interface::ConfinedPointerV1Interface(KWin::SurfaceInterface*, KWin::ConfinedPointerV1Interface::LifeTime, QRegion const&, wl_resource*)
libkwin.so.6:KWin::ConfinedPointerV1Interface::ConfinedPointerV1Interface(KWin::SurfaceInterface*, KWin::ConfinedPointerV1Interface::LifeTime, QRegion const&, wl_resource*)
libkwin.so.6:KWin::ConfinedPointerV1Interface::~ConfinedPointerV1Interface()
libkwin.so.6:KWin::ConfinedPointerV1Interface::~ConfinedPointerV1Interface()
libkwin.so.6:KWin::ConfinedPointerV1Interface::~ConfinedPointerV1Interface()
libkwin.so.6:KWin::DataDeviceManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataDeviceManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::DataDeviceManagerInterface::dataDeviceCreated(KWin::DataDeviceInterface*)
libkwin.so.6:KWin::DataDeviceManagerInterface::dataSourceCreated(KWin::DataSourceInterface*)
libkwin.so.6:KWin::DataDeviceManagerInterface::DataDeviceManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::DataDeviceManagerInterface::DataDeviceManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::DataDeviceManagerInterface::~DataDeviceManagerInterface()
libkwin.so.6:KWin::DataDeviceManagerInterface::~DataDeviceManagerInterface()
libkwin.so.6:KWin::DataDeviceManagerInterface::~DataDeviceManagerInterface()
libkwin.so.6:KWin::DrmClientBufferIntegration::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DrmClientBufferIntegration::qt_metacast(char const*)
libkwin.so.6:KWin::DrmClientBufferIntegration::setDevice(QString const&)
libkwin.so.6:KWin::DrmClientBufferIntegration::DrmClientBufferIntegration(KWin::Display*)
libkwin.so.6:KWin::DrmClientBufferIntegration::DrmClientBufferIntegration(KWin::Display*)
libkwin.so.6:KWin::DrmClientBufferIntegration::~DrmClientBufferIntegration()
libkwin.so.6:KWin::DrmClientBufferIntegration::~DrmClientBufferIntegration()
libkwin.so.6:KWin::DrmClientBufferIntegration::~DrmClientBufferIntegration()
libkwin.so.6:KWin::EffectTogglableTouchBorder::setBorders(QList<int> const&)
libkwin.so.6:KWin::EffectTogglableTouchBorder::EffectTogglableTouchBorder(KWin::EffectTogglableState*)
libkwin.so.6:KWin::EffectTogglableTouchBorder::EffectTogglableTouchBorder(KWin::EffectTogglableState*)
libkwin.so.6:KWin::EffectTogglableTouchBorder::~EffectTogglableTouchBorder()
libkwin.so.6:KWin::EffectTogglableTouchBorder::~EffectTogglableTouchBorder()
libkwin.so.6:KWin::EffectTogglableTouchBorder::~EffectTogglableTouchBorder()
libkwin.so.6:KWin::GbmGraphicsBufferAllocator::allocate(KWin::GraphicsBufferOptions const&)
libkwin.so.6:KWin::GbmGraphicsBufferAllocator::GbmGraphicsBufferAllocator(gbm_device*)
libkwin.so.6:KWin::GbmGraphicsBufferAllocator::GbmGraphicsBufferAllocator(gbm_device*)
libkwin.so.6:KWin::GbmGraphicsBufferAllocator::~GbmGraphicsBufferAllocator()
libkwin.so.6:KWin::GbmGraphicsBufferAllocator::~GbmGraphicsBufferAllocator()
libkwin.so.6:KWin::GbmGraphicsBufferAllocator::~GbmGraphicsBufferAllocator()
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_destroy(QtWaylandServer::wp_linux_drm_syncobj_manager_v1::Resource*)
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_get_surface(QtWaylandServer::wp_linux_drm_syncobj_manager_v1::Resource*, unsigned int, wl_resource*)
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_destroy_global()
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_import_timeline(QtWaylandServer::wp_linux_drm_syncobj_manager_v1::Resource*, unsigned int, int)
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::remove()
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::LinuxDrmSyncObjV1Interface(KWin::Display*, QObject*, KWin::DrmDevice*)
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::LinuxDrmSyncObjV1Interface(KWin::Display*, QObject*, KWin::DrmDevice*)
libkwin.so.6:KWin::PointerGesturesV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PointerGesturesV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::PointerGesturesV1Interface::PointerGesturesV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PointerGesturesV1Interface::PointerGesturesV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PointerGesturesV1Interface::~PointerGesturesV1Interface()
libkwin.so.6:KWin::PointerGesturesV1Interface::~PointerGesturesV1Interface()
libkwin.so.6:KWin::PointerGesturesV1Interface::~PointerGesturesV1Interface()
libkwin.so.6:KWin::ShmClientBufferIntegration::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ShmClientBufferIntegration::qt_metacast(char const*)
libkwin.so.6:KWin::ShmClientBufferIntegration::ShmClientBufferIntegration(KWin::Display*)
libkwin.so.6:KWin::ShmClientBufferIntegration::ShmClientBufferIntegration(KWin::Display*)
libkwin.so.6:KWin::ShmClientBufferIntegration::~ShmClientBufferIntegration()
libkwin.so.6:KWin::ShmClientBufferIntegration::~ShmClientBufferIntegration()
libkwin.so.6:KWin::ShmClientBufferIntegration::~ShmClientBufferIntegration()
libkwin.so.6:KWin::ShmGraphicsBufferAllocator::allocate(KWin::GraphicsBufferOptions const&)
libkwin.so.6:KWin::XdgActivationV1Integration::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgActivationV1Integration::qt_metacast(char const*)
libkwin.so.6:KWin::XdgActivationV1Integration::requestToken(bool, KWin::SurfaceInterface*, unsigned int, KWin::SeatInterface*, QString const&)
libkwin.so.6:KWin::XdgActivationV1Integration::activateSurface(KWin::SurfaceInterface*, QString const&)
libkwin.so.6:KWin::XdgActivationV1Integration::clear()
libkwin.so.6:KWin::XdgActivationV1Integration::XdgActivationV1Integration(KWin::XdgActivationV1Interface*, QObject*)
libkwin.so.6:KWin::XdgActivationV1Integration::XdgActivationV1Integration(KWin::XdgActivationV1Interface*, QObject*)
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::role()
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::XwaylandSurfaceV1Interface(KWin::XwaylandShellV1Interface*, KWin::SurfaceInterface*, wl_client*, unsigned int, int)
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::XwaylandSurfaceV1Interface(KWin::XwaylandShellV1Interface*, KWin::SurfaceInterface*, wl_client*, unsigned int, int)
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::~XwaylandSurfaceV1Interface()
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::~XwaylandSurfaceV1Interface()
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::~XwaylandSurfaceV1Interface()
libkwin.so.6:KWin::DataControlOfferV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataControlOfferV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::DataControlOfferV1Interface::sendAllOffers()
libkwin.so.6:KWin::DataControlOfferV1Interface::DataControlOfferV1Interface(KWin::AbstractDataSource*, wl_resource*)
libkwin.so.6:KWin::DataControlOfferV1Interface::DataControlOfferV1Interface(KWin::AbstractDataSource*, wl_resource*)
libkwin.so.6:KWin::DataControlOfferV1Interface::~DataControlOfferV1Interface()
libkwin.so.6:KWin::DataControlOfferV1Interface::~DataControlOfferV1Interface()
libkwin.so.6:KWin::DataControlOfferV1Interface::~DataControlOfferV1Interface()
libkwin.so.6:KWin::OpenGLSurfaceTextureWayland::OpenGLSurfaceTextureWayland(KWin::OpenGLBackend*, KWin::SurfacePixmap*)
libkwin.so.6:KWin::OpenGLSurfaceTextureWayland::OpenGLSurfaceTextureWayland(KWin::OpenGLBackend*, KWin::SurfacePixmap*)
libkwin.so.6:KWin::OutputDeviceModeV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OutputDeviceModeV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::OutputDeviceModeV2Interface::get(wl_resource*)
libkwin.so.6:KWin::OutputDeviceModeV2Interface::OutputDeviceModeV2Interface(std::shared_ptr<KWin::OutputMode>, QObject*)
libkwin.so.6:KWin::OutputDeviceModeV2Interface::OutputDeviceModeV2Interface(std::shared_ptr<KWin::OutputMode>, QObject*)
libkwin.so.6:KWin::OutputDeviceModeV2Interface::~OutputDeviceModeV2Interface()
libkwin.so.6:KWin::OutputDeviceModeV2Interface::~OutputDeviceModeV2Interface()
libkwin.so.6:KWin::OutputDeviceModeV2Interface::~OutputDeviceModeV2Interface()
libkwin.so.6:KWin::OutputManagementV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::OutputManagementV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::OutputManagementV2Interface::OutputManagementV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::OutputManagementV2Interface::OutputManagementV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::OutputManagementV2Interface::~OutputManagementV2Interface()
libkwin.so.6:KWin::OutputManagementV2Interface::~OutputManagementV2Interface()
libkwin.so.6:KWin::OutputManagementV2Interface::~OutputManagementV2Interface()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::roleChanged()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::positionChanged()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::skipTaskbarChanged()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::hideAutoHidingPanel()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::showAutoHidingPanel()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::skipSwitcherChanged()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::panelBehaviorChanged()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::panelTakesFocusChanged()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::openUnderCursorRequested()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::panelAutoHideHideRequested()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::panelAutoHideShowRequested()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::get(wl_resource*)
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::get(KWin::SurfaceInterface*)
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::PlasmaShellSurfaceInterface(KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::PlasmaShellSurfaceInterface(KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::~PlasmaShellSurfaceInterface()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::~PlasmaShellSurfaceInterface()
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::~PlasmaShellSurfaceInterface()
libkwin.so.6:KWin::ScreencastStreamV1Interface::sendClosed()
libkwin.so.6:KWin::ScreencastStreamV1Interface::sendFailed(QString const&)
libkwin.so.6:KWin::ScreencastStreamV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScreencastStreamV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::ScreencastStreamV1Interface::sendCreated(unsigned int)
libkwin.so.6:KWin::ScreencastStreamV1Interface::finished()
libkwin.so.6:KWin::ScreencastStreamV1Interface::ScreencastStreamV1Interface(QObject*)
libkwin.so.6:KWin::ScreencastStreamV1Interface::ScreencastStreamV1Interface(QObject*)
libkwin.so.6:KWin::ScreencastStreamV1Interface::~ScreencastStreamV1Interface()
libkwin.so.6:KWin::ScreencastStreamV1Interface::~ScreencastStreamV1Interface()
libkwin.so.6:KWin::ScreencastStreamV1Interface::~ScreencastStreamV1Interface()
libkwin.so.6:KWin::TextInputManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TextInputManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TextInputManagerV1Interface::TextInputManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TextInputManagerV1Interface::TextInputManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TextInputManagerV1Interface::~TextInputManagerV1Interface()
libkwin.so.6:KWin::TextInputManagerV1Interface::~TextInputManagerV1Interface()
libkwin.so.6:KWin::TextInputManagerV1Interface::~TextInputManagerV1Interface()
libkwin.so.6:KWin::TextInputManagerV2Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TextInputManagerV2Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TextInputManagerV2Interface::TextInputManagerV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TextInputManagerV2Interface::TextInputManagerV2Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TextInputManagerV2Interface::~TextInputManagerV2Interface()
libkwin.so.6:KWin::TextInputManagerV2Interface::~TextInputManagerV2Interface()
libkwin.so.6:KWin::TextInputManagerV2Interface::~TextInputManagerV2Interface()
libkwin.so.6:KWin::TextInputManagerV3Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TextInputManagerV3Interface::qt_metacast(char const*)
libkwin.so.6:KWin::TextInputManagerV3Interface::TextInputManagerV3Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TextInputManagerV3Interface::TextInputManagerV3Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::TextInputManagerV3Interface::~TextInputManagerV3Interface()
libkwin.so.6:KWin::TextInputManagerV3Interface::~TextInputManagerV3Interface()
libkwin.so.6:KWin::TextInputManagerV3Interface::~TextInputManagerV3Interface()
libkwin.so.6:KWin::XdgOutputManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgOutputManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgOutputManagerV1Interface::offer(KWin::OutputInterface*)
libkwin.so.6:KWin::XdgOutputManagerV1Interface::XdgOutputManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgOutputManagerV1Interface::XdgOutputManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgOutputManagerV1Interface::~XdgOutputManagerV1Interface()
libkwin.so.6:KWin::XdgOutputManagerV1Interface::~XdgOutputManagerV1Interface()
libkwin.so.6:KWin::XdgOutputManagerV1Interface::~XdgOutputManagerV1Interface()
libkwin.so.6:KWin::DataControlDeviceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataControlDeviceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::sendSelection(KWin::AbstractDataSource*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::selectionChanged(KWin::DataControlSourceV1Interface*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::sendPrimarySelection(KWin::AbstractDataSource*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::primarySelectionChanged(KWin::DataControlSourceV1Interface*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::DataControlDeviceV1Interface(KWin::SeatInterface*, wl_resource*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::DataControlDeviceV1Interface(KWin::SeatInterface*, wl_resource*)
libkwin.so.6:KWin::DataControlDeviceV1Interface::~DataControlDeviceV1Interface()
libkwin.so.6:KWin::DataControlDeviceV1Interface::~DataControlDeviceV1Interface()
libkwin.so.6:KWin::DataControlDeviceV1Interface::~DataControlDeviceV1Interface()
libkwin.so.6:KWin::DataControlSourceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataControlSourceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::DataControlSourceV1Interface::requestData(QString const&, int)
libkwin.so.6:KWin::DataControlSourceV1Interface::get(wl_resource*)
libkwin.so.6:KWin::DataControlSourceV1Interface::cancel()
libkwin.so.6:KWin::DataControlSourceV1Interface::DataControlSourceV1Interface(KWin::DataControlDeviceManagerV1Interface*, wl_resource*)
libkwin.so.6:KWin::DataControlSourceV1Interface::DataControlSourceV1Interface(KWin::DataControlDeviceManagerV1Interface*, wl_resource*)
libkwin.so.6:KWin::DataControlSourceV1Interface::~DataControlSourceV1Interface()
libkwin.so.6:KWin::DataControlSourceV1Interface::~DataControlSourceV1Interface()
libkwin.so.6:KWin::DataControlSourceV1Interface::~DataControlSourceV1Interface()
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::overlayPanel()
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::aboutToBeDestroyed()
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::role()
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::topLevel(KWin::OutputInterface*, KWin::InputPanelSurfaceV1Interface::Position)
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::InputPanelSurfaceV1Interface(KWin::SurfaceInterface*, unsigned int, QObject*)
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::InputPanelSurfaceV1Interface(KWin::SurfaceInterface*, unsigned int, QObject*)
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::~InputPanelSurfaceV1Interface()
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::~InputPanelSurfaceV1Interface()
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::~InputPanelSurfaceV1Interface()
libkwin.so.6:KWin::LockscreenOverlayV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LockscreenOverlayV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::LockscreenOverlayV1Interface::allowRequested(KWin::SurfaceInterface*)
libkwin.so.6:KWin::LockscreenOverlayV1Interface::LockscreenOverlayV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::LockscreenOverlayV1Interface::LockscreenOverlayV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::LockscreenOverlayV1Interface::~LockscreenOverlayV1Interface()
libkwin.so.6:KWin::LockscreenOverlayV1Interface::~LockscreenOverlayV1Interface()
libkwin.so.6:KWin::LockscreenOverlayV1Interface::~LockscreenOverlayV1Interface()
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::edgeRequested(KWin::AutoHideScreenEdgeV1Interface*)
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::ScreenEdgeManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::ScreenEdgeManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::~ScreenEdgeManagerV1Interface()
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::~ScreenEdgeManagerV1Interface()
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::~ScreenEdgeManagerV1Interface()
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::activateRequested()
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::deactivateRequested()
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::AutoHideScreenEdgeV1Interface(KWin::SurfaceInterface*, KWin::ElectricBorder, wl_resource*)
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::AutoHideScreenEdgeV1Interface(KWin::SurfaceInterface*, KWin::ElectricBorder, wl_resource*)
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::~AutoHideScreenEdgeV1Interface()
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::~AutoHideScreenEdgeV1Interface()
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::~AutoHideScreenEdgeV1Interface()
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::loadShmTexture(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::updateShmTexture(KWin::GraphicsBuffer*, QRegion const&)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::loadDmabufTexture(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::updateDmabufTexture(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::create()
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::update(QRegion const&)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::destroy()
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::BasicEGLSurfaceTextureWayland(KWin::OpenGLBackend*, KWin::SurfacePixmap*)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::BasicEGLSurfaceTextureWayland(KWin::OpenGLBackend*, KWin::SurfacePixmap*)
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::~BasicEGLSurfaceTextureWayland()
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::~BasicEGLSurfaceTextureWayland()
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::~BasicEGLSurfaceTextureWayland()
libkwin.so.6:KWin::CursorShapeManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::CursorShapeManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::CursorShapeManagerV1Interface::CursorShapeManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::CursorShapeManagerV1Interface::CursorShapeManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::CursorShapeManagerV1Interface::~CursorShapeManagerV1Interface()
libkwin.so.6:KWin::CursorShapeManagerV1Interface::~CursorShapeManagerV1Interface()
libkwin.so.6:KWin::CursorShapeManagerV1Interface::~CursorShapeManagerV1Interface()
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::IdleInhibitManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::IdleInhibitManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::~IdleInhibitManagerV1Interface()
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::~IdleInhibitManagerV1Interface()
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::~IdleInhibitManagerV1Interface()
libkwin.so.6:KWin::InputMethodContextV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::InputMethodContextV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::InputMethodContextV1Interface::commitString(unsigned int, QString const&)
libkwin.so.6:KWin::InputMethodContextV1Interface::modifiersMap(QByteArray const&)
libkwin.so.6:KWin::InputMethodContextV1Interface::preeditCursor(int)
libkwin.so.6:KWin::InputMethodContextV1Interface::preeditString(unsigned int, QString const&, QString const&)
libkwin.so.6:KWin::InputMethodContextV1Interface::textDirection(unsigned int, Qt::LayoutDirection)
libkwin.so.6:KWin::InputMethodContextV1Interface::cursorPosition(int, int)
libkwin.so.6:KWin::InputMethodContextV1Interface::preeditStyling(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::sendCommitState(unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::sendContentType(QFlags<KWin::TextInputContentHint>, KWin::TextInputContentPurpose)
libkwin.so.6:KWin::InputMethodContextV1Interface::sendInvokeAction(unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::sendSurroundingText(QString const&, unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::deleteSurroundingText(int, unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::keyboardGrabRequested(KWin::InputMethodGrabV1*)
libkwin.so.6:KWin::InputMethodContextV1Interface::sendPreferredLanguage(QString const&)
libkwin.so.6:KWin::InputMethodContextV1Interface::key(unsigned int, unsigned int, unsigned int, bool)
libkwin.so.6:KWin::InputMethodContextV1Interface::keysym(unsigned int, unsigned int, unsigned int, bool, unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::language(unsigned int, QString const&)
libkwin.so.6:KWin::InputMethodContextV1Interface::modifiers(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::InputMethodContextV1Interface::sendReset()
libkwin.so.6:KWin::InputMethodContextV1Interface::InputMethodContextV1Interface(KWin::InputMethodV1Interface*)
libkwin.so.6:KWin::InputMethodContextV1Interface::InputMethodContextV1Interface(KWin::InputMethodV1Interface*)
libkwin.so.6:KWin::InputMethodContextV1Interface::~InputMethodContextV1Interface()
libkwin.so.6:KWin::InputMethodContextV1Interface::~InputMethodContextV1Interface()
libkwin.so.6:KWin::InputMethodContextV1Interface::~InputMethodContextV1Interface()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::activateRequested()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::setName(QString const&)
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::sendDone()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::setActive(bool)
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::PlasmaVirtualDesktopInterface()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::PlasmaVirtualDesktopInterface()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::~PlasmaVirtualDesktopInterface()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::~PlasmaVirtualDesktopInterface()
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::~PlasmaVirtualDesktopInterface()
libkwin.so.6:KWin::PointerConstraintsV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PointerConstraintsV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::PointerConstraintsV1Interface::PointerConstraintsV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PointerConstraintsV1Interface::PointerConstraintsV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PointerConstraintsV1Interface::~PointerConstraintsV1Interface()
libkwin.so.6:KWin::PointerConstraintsV1Interface::~PointerConstraintsV1Interface()
libkwin.so.6:KWin::PointerConstraintsV1Interface::~PointerConstraintsV1Interface()
libkwin.so.6:KWin::QPainterSurfaceTextureWayland::create()
libkwin.so.6:KWin::QPainterSurfaceTextureWayland::update(QRegion const&)
libkwin.so.6:KWin::QPainterSurfaceTextureWayland::QPainterSurfaceTextureWayland(KWin::QPainterBackend*, KWin::SurfacePixmap*)
libkwin.so.6:KWin::QPainterSurfaceTextureWayland::QPainterSurfaceTextureWayland(KWin::QPainterBackend*, KWin::SurfacePixmap*)
libkwin.so.6:KWin::ServerSideDecorationInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ServerSideDecorationInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ServerSideDecorationInterface::preferredModeChanged()
libkwin.so.6:KWin::ServerSideDecorationInterface::get(KWin::SurfaceInterface*)
libkwin.so.6:KWin::ServerSideDecorationInterface::setMode(KWin::ServerSideDecorationManagerInterface::Mode)
libkwin.so.6:KWin::ServerSideDecorationInterface::ServerSideDecorationInterface(KWin::ServerSideDecorationManagerInterface*, KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::ServerSideDecorationInterface::ServerSideDecorationInterface(KWin::ServerSideDecorationManagerInterface*, KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::ServerSideDecorationInterface::~ServerSideDecorationInterface()
libkwin.so.6:KWin::ServerSideDecorationInterface::~ServerSideDecorationInterface()
libkwin.so.6:KWin::ServerSideDecorationInterface::~ServerSideDecorationInterface()
libkwin.so.6:KWin::PlasmaWindowActivationInterface::sendAppId(QString const&)
libkwin.so.6:KWin::PlasmaWindowActivationInterface::PlasmaWindowActivationInterface()
libkwin.so.6:KWin::PlasmaWindowActivationInterface::PlasmaWindowActivationInterface()
libkwin.so.6:KWin::PlasmaWindowActivationInterface::~PlasmaWindowActivationInterface()
libkwin.so.6:KWin::PlasmaWindowActivationInterface::~PlasmaWindowActivationInterface()
libkwin.so.6:KWin::PlasmaWindowManagementInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::createWindow(QObject*, QUuid const&)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::setStackingOrder(QList<unsigned int> const&)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::setStackingOrderUuids(QList<QString> const&)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::setShowingDesktopState(KWin::PlasmaWindowManagementInterface::ShowingDesktopState)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::requestChangeShowingDesktop(KWin::PlasmaWindowManagementInterface::ShowingDesktopState)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::setPlasmaVirtualDesktopManagementInterface(KWin::PlasmaVirtualDesktopManagementInterface*)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::PlasmaWindowManagementInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::PlasmaWindowManagementInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaWindowManagementInterface::~PlasmaWindowManagementInterface()
libkwin.so.6:KWin::PlasmaWindowManagementInterface::~PlasmaWindowManagementInterface()
libkwin.so.6:KWin::PlasmaWindowManagementInterface::~PlasmaWindowManagementInterface()
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::XWaylandKeyboardGrabV1Interface(wl_resource*)
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::XWaylandKeyboardGrabV1Interface(wl_resource*)
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::~XWaylandKeyboardGrabV1Interface()
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::~XWaylandKeyboardGrabV1Interface()
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::~XWaylandKeyboardGrabV1Interface()
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::decorationCreated(KWin::XdgToplevelDecorationV1Interface*)
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::XdgDecorationManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::XdgDecorationManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::~XdgDecorationManagerV1Interface()
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::~XdgDecorationManagerV1Interface()
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::~XdgDecorationManagerV1Interface()
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::sendAllOffers()
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::PrimarySelectionOfferV1Interface(KWin::AbstractDataSource*, wl_resource*)
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::PrimarySelectionOfferV1Interface(KWin::AbstractDataSource*, wl_resource*)
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::~PrimarySelectionOfferV1Interface()
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::~PrimarySelectionOfferV1Interface()
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::~PrimarySelectionOfferV1Interface()
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::sendConfigure(KWin::XdgToplevelDecorationV1Interface::Mode)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::preferredModeChanged(KWin::XdgToplevelDecorationV1Interface::Mode)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::get(KWin::XdgToplevelInterface*)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::XdgToplevelDecorationV1Interface(KWin::XdgToplevelInterface*, wl_resource*)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::XdgToplevelDecorationV1Interface(KWin::XdgToplevelInterface*, wl_resource*)
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::~XdgToplevelDecorationV1Interface()
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::~XdgToplevelDecorationV1Interface()
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::~XdgToplevelDecorationV1Interface()
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::FractionalScaleManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::FractionalScaleManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::~FractionalScaleManagerV1Interface()
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::~FractionalScaleManagerV1Interface()
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::~FractionalScaleManagerV1Interface()
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::sendSelection(KWin::AbstractDataSource*)
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::selectionChanged(KWin::PrimarySelectionSourceV1Interface*)
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::PrimarySelectionDeviceV1Interface(KWin::SeatInterface*, wl_resource*)
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::PrimarySelectionDeviceV1Interface(KWin::SeatInterface*, wl_resource*)
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::~PrimarySelectionDeviceV1Interface()
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::~PrimarySelectionDeviceV1Interface()
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::~PrimarySelectionDeviceV1Interface()
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::requestData(QString const&, int)
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::get(wl_resource*)
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::cancel()
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::PrimarySelectionSourceV1Interface(wl_resource*)
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::PrimarySelectionSourceV1Interface(wl_resource*)
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::~PrimarySelectionSourceV1Interface()
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::~PrimarySelectionSourceV1Interface()
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::~PrimarySelectionSourceV1Interface()
libkwin.so.6:KWin::RelativePointerManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::RelativePointerManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::RelativePointerManagerV1Interface::RelativePointerManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::RelativePointerManagerV1Interface::RelativePointerManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::RelativePointerManagerV1Interface::~RelativePointerManagerV1Interface()
libkwin.so.6:KWin::RelativePointerManagerV1Interface::~RelativePointerManagerV1Interface()
libkwin.so.6:KWin::RelativePointerManagerV1Interface::~RelativePointerManagerV1Interface()
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::dataDeviceCreated(KWin::DataControlDeviceV1Interface*)
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::dataSourceCreated(KWin::DataControlSourceV1Interface*)
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::DataControlDeviceManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::DataControlDeviceManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::~DataControlDeviceManagerV1Interface()
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::~DataControlDeviceManagerV1Interface()
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::~DataControlDeviceManagerV1Interface()
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::qt_metacast(char const*)
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::setRenderBackend(KWin::RenderBackend*)
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::setSupportedFormatsWithModifiers(QList<KWin::LinuxDmaBufV1Feedback::Tranche> const&)
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::LinuxDmaBufV1ClientBufferIntegration(KWin::Display*)
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::LinuxDmaBufV1ClientBufferIntegration(KWin::Display*)
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::~LinuxDmaBufV1ClientBufferIntegration()
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::~LinuxDmaBufV1ClientBufferIntegration()
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::~LinuxDmaBufV1ClientBufferIntegration()
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::setDefaultMode(KWin::ServerSideDecorationManagerInterface::Mode)
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::decorationCreated(KWin::ServerSideDecorationInterface*)
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::ServerSideDecorationManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::ServerSideDecorationManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::~ServerSideDecorationManagerInterface()
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::~ServerSideDecorationManagerInterface()
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::~ServerSideDecorationManagerInterface()
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::paletteChanged(QString const&)
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::ServerSideDecorationPaletteInterface(KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::ServerSideDecorationPaletteInterface(KWin::SurfaceInterface*, wl_resource*)
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::~ServerSideDecorationPaletteInterface()
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::~ServerSideDecorationPaletteInterface()
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::~ServerSideDecorationPaletteInterface()
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::setActive(bool)
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::KeyboardShortcutsInhibitorV1Interface(KWin::SurfaceInterface*, KWin::SeatInterface*, KWin::KeyboardShortcutsInhibitManagerV1Interface*, wl_resource*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::KeyboardShortcutsInhibitorV1Interface(KWin::SurfaceInterface*, KWin::SeatInterface*, KWin::KeyboardShortcutsInhibitManagerV1Interface*, wl_resource*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::~KeyboardShortcutsInhibitorV1Interface()
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::~KeyboardShortcutsInhibitorV1Interface()
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::~KeyboardShortcutsInhibitorV1Interface()
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::XWaylandKeyboardGrabManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::XWaylandKeyboardGrabManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::~XWaylandKeyboardGrabManagerV1Interface()
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::~XWaylandKeyboardGrabManagerV1Interface()
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::~XWaylandKeyboardGrabManagerV1Interface()
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::createDesktop(QString const&, unsigned int)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::removeDesktop(QString const&)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::desktopActivated(QString const&)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::desktopCreateRequested(QString const&, unsigned int)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::desktopRemoveRequested(QString const&)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::desktop(QString const&)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::setRows(unsigned int)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::sendDone()
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::PlasmaVirtualDesktopManagementInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::PlasmaVirtualDesktopManagementInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::~PlasmaVirtualDesktopManagementInterface()
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::~PlasmaVirtualDesktopManagementInterface()
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::~PlasmaVirtualDesktopManagementInterface()
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::qt_metacast(char const*)
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::createActivation(QString const&)
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::PlasmaWindowActivationFeedbackInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::PlasmaWindowActivationFeedbackInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::~PlasmaWindowActivationFeedbackInterface()
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::~PlasmaWindowActivationFeedbackInterface()
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::~PlasmaWindowActivationFeedbackInterface()
libkwin.so.6:KWin::Xcb::Extensions::extensionQueryReply(xcb_query_extension_reply_t const*, KWin::Xcb::ExtensionData*)
libkwin.so.6:KWin::Xcb::Extensions::init()
libkwin.so.6:KWin::Xcb::Extensions::self()
libkwin.so.6:KWin::Xcb::Extensions::destroy()
libkwin.so.6:KWin::Xcb::Extensions::Extensions()
libkwin.so.6:KWin::Xcb::Extensions::Extensions()
libkwin.so.6:KWin::Xcb::Extensions::~Extensions()
libkwin.so.6:KWin::Xcb::Extensions::~Extensions()
libkwin.so.6:KWin::Xcb::fromXNative(QRect const&)
libkwin.so.6:KWin::Xcb::fromXNative(QSize const&)
libkwin.so.6:KWin::Xcb::fromXNative(int)
libkwin.so.6:KWin::Xcb::nativeFloor(QRectF const&)
libkwin.so.6:KWin::Xcb::nativeRound(double)
libkwin.so.6:KWin::Xcb::toXNative(QRectF const&)
libkwin.so.6:KWin::Xcb::toXNative(double)
libkwin.so.6:KWin::Xkb::ledsChanged(QFlags<KWin::LED> const&)
libkwin.so.6:KWin::Xkb::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Xkb::qt_metacast(char const*)
libkwin.so.6:KWin::Xkb::reconfigure()
libkwin.so.6:KWin::Xkb::updateKeymap(xkb_keymap*)
libkwin.so.6:KWin::Xkb::switchToLayout(unsigned int)
libkwin.so.6:KWin::Xkb::updateModifiers(unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::Xkb::updateModifiers()
libkwin.so.6:KWin::Xkb::createKeymapFile()
libkwin.so.6:KWin::Xkb::forwardModifiers()
libkwin.so.6:KWin::Xkb::keysymsFromQtKey(int)
libkwin.so.6:KWin::Xkb::setNumLockConfig(QExplicitlySharedDataPointer<KSharedConfig> const&)
libkwin.so.6:KWin::Xkb::keycodeFromKeysym(unsigned int)
libkwin.so.6:KWin::Xkb::loadDefaultKeymap()
libkwin.so.6:KWin::Xkb::setModifierLocked(KWin::Xkb::Modifier, bool)
libkwin.so.6:KWin::Xkb::setModifierLatched(KWin::Xkb::Modifier, bool)
libkwin.so.6:KWin::Xkb::switchToNextLayout()
libkwin.so.6:KWin::Xkb::loadKeymapFromConfig()
libkwin.so.6:KWin::Xkb::modifierStateChanged()
libkwin.so.6:KWin::Xkb::applyEnvironmentRules(xkb_rule_names&)
libkwin.so.6:KWin::Xkb::loadKeymapFromLocale1()
libkwin.so.6:KWin::Xkb::switchToPreviousLayout()
libkwin.so.6:KWin::Xkb::updateConsumedModifiers(unsigned int)
libkwin.so.6:KWin::Xkb::setSeat(KWin::SeatInterface*)
libkwin.so.6:KWin::Xkb::toKeysym(unsigned int)
libkwin.so.6:KWin::Xkb::toString(unsigned int)
libkwin.so.6:KWin::Xkb::setConfig(QExplicitlySharedDataPointer<KSharedConfig> const&)
libkwin.so.6:KWin::Xkb::updateKey(unsigned int, KWin::InputRedirection::KeyboardKeyState)
libkwin.so.6:KWin::Xkb::Xkb(bool)
libkwin.so.6:KWin::Xkb::Xkb(bool)
libkwin.so.6:KWin::Xkb::~Xkb()
libkwin.so.6:KWin::Xkb::~Xkb()
libkwin.so.6:KWin::Xkb::~Xkb()
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::dataDeviceCreated(KWin::PrimarySelectionDeviceV1Interface*)
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::dataSourceCreated(KWin::PrimarySelectionSourceV1Interface*)
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::PrimarySelectionDeviceManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::PrimarySelectionDeviceManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::~PrimarySelectionDeviceManagerV1Interface()
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::~PrimarySelectionDeviceManagerV1Interface()
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::~PrimarySelectionDeviceManagerV1Interface()
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::qt_metacast(char const*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::removeInhibitor(KWin::SurfaceInterface*, KWin::SeatInterface*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::inhibitorCreated(KWin::KeyboardShortcutsInhibitorV1Interface*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::KeyboardShortcutsInhibitManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::KeyboardShortcutsInhibitManagerV1Interface(KWin::Display*, QObject*)
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::~KeyboardShortcutsInhibitManagerV1Interface()
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::~KeyboardShortcutsInhibitManagerV1Interface()
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::~KeyboardShortcutsInhibitManagerV1Interface()
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::qt_metacast(char const*)
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::paletteCreated(KWin::ServerSideDecorationPaletteInterface*)
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::paletteForSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::ServerSideDecorationPaletteManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::ServerSideDecorationPaletteManagerInterface(KWin::Display*, QObject*)
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::~ServerSideDecorationPaletteManagerInterface()
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::~ServerSideDecorationPaletteManagerInterface()
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::~ServerSideDecorationPaletteManagerInterface()
libkwin.so.6:KWin::Edge::deactivate()
libkwin.so.6:KWin::Edge::doActivate()
libkwin.so.6:KWin::Edge::approaching(KWin::ElectricBorder, double, QRect const&)
libkwin.so.6:KWin::Edge::canActivate(QPoint const&, QDateTime const&)
libkwin.so.6:KWin::Edge::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Edge::qt_metacast(char const*)
libkwin.so.6:KWin::Edge::setGeometry(QRect const&)
libkwin.so.6:KWin::Edge::doDeactivate()
libkwin.so.6:KWin::Edge::handleAction(KWin::ElectricBorderAction)
libkwin.so.6:KWin::Edge::checkBlocking()
libkwin.so.6:KWin::Edge::switchDesktop(QPoint const&)
libkwin.so.6:KWin::Edge::pushCursorBack(QPoint const&)
libkwin.so.6:KWin::Edge::setTouchAction(KWin::ElectricBorderAction)
libkwin.so.6:KWin::Edge::markAsTriggered(QPoint const&, QDateTime const&)
libkwin.so.6:KWin::Edge::stopApproaching()
libkwin.so.6:KWin::Edge::doGeometryUpdate()
libkwin.so.6:KWin::Edge::doUpdateBlocking()
libkwin.so.6:KWin::Edge::handleByCallback()
libkwin.so.6:KWin::Edge::startApproaching()
libkwin.so.6:KWin::Edge::doStopApproaching()
libkwin.so.6:KWin::Edge::updateApproaching(QPointF const&)
libkwin.so.6:KWin::Edge::doStartApproaching()
libkwin.so.6:KWin::Edge::handleTouchCallback()
libkwin.so.6:KWin::Edge::reserveTouchCallBack(QAction*, std::function<void (KWin::ElectricBorder, QPointF const&, KWin::Output*)>)
libkwin.so.6:KWin::Edge::reserveTouchCallBack(KWin::TouchCallback const&)
libkwin.so.6:KWin::Edge::unreserveTouchCallBack(QAction*)
libkwin.so.6:KWin::Edge::activatesForTouchGestureChanged()
libkwin.so.6:KWin::Edge::check(QPoint const&, QDateTime const&, bool)
libkwin.so.6:KWin::Edge::handle(QPoint const&)
libkwin.so.6:KWin::Edge::reserve(QObject*, char const*)
libkwin.so.6:KWin::Edge::reserve()
libkwin.so.6:KWin::Edge::activate()
libkwin.so.6:KWin::Edge::setBorder(KWin::ElectricBorder)
libkwin.so.6:KWin::Edge::setClient(KWin::Window*)
libkwin.so.6:KWin::Edge::setOutput(KWin::Output*)
libkwin.so.6:KWin::Edge::unreserve(QObject*)
libkwin.so.6:KWin::Edge::unreserve()
libkwin.so.6:KWin::Edge::Edge(KWin::ScreenEdges*)
libkwin.so.6:KWin::Edge::Edge(KWin::ScreenEdges*)
libkwin.so.6:KWin::Edge::~Edge()
libkwin.so.6:KWin::Edge::~Edge()
libkwin.so.6:KWin::Edge::~Edge()
libkwin.so.6:KWin::Edid::Edid(void const*, unsigned int)
libkwin.so.6:KWin::Edid::Edid()
libkwin.so.6:KWin::Edid::Edid(void const*, unsigned int)
libkwin.so.6:KWin::Edid::Edid()
libkwin.so.6:KWin::Item::childAdded(KWin::Item*)
libkwin.so.6:KWin::Item::preprocess()
libkwin.so.6:KWin::Item::setOpacity(double)
libkwin.so.6:KWin::Item::setVisible(bool)
libkwin.so.6:KWin::Item::stackAfter(KWin::Item*)
libkwin.so.6:KWin::Item::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Item::qt_metacast(char const*)
libkwin.so.6:KWin::Item::removeChild(KWin::Item*)
libkwin.so.6:KWin::Item::setPosition(QPointF const&)
libkwin.so.6:KWin::Item::sizeChanged()
libkwin.so.6:KWin::Item::stackBefore(KWin::Item*)
libkwin.so.6:KWin::Item::discardQuads()
libkwin.so.6:KWin::Item::setTransform(QTransform const&)
libkwin.so.6:KWin::Item::resetRepaints(KWin::SceneDelegate*)
libkwin.so.6:KWin::Item::scheduleFrame()
libkwin.so.6:KWin::Item::setParentItem(KWin::Item*)
libkwin.so.6:KWin::Item::removeRepaints(KWin::SceneDelegate*)
libkwin.so.6:KWin::Item::positionChanged()
libkwin.so.6:KWin::Item::scheduleRepaint(KWin::SceneDelegate*, QRegion const&)
libkwin.so.6:KWin::Item::scheduleRepaint(QRectF const&)
libkwin.so.6:KWin::Item::scheduleRepaint(QRegion const&)
libkwin.so.6:KWin::Item::updateBoundingRect()
libkwin.so.6:KWin::Item::boundingRectChanged()
libkwin.so.6:KWin::Item::setColorDescription(KWin::ColorDescription const&)
libkwin.so.6:KWin::Item::setPresentationHint(KWin::PresentationModeHint)
libkwin.so.6:KWin::Item::scheduleRepaintInternal(KWin::SceneDelegate*, QRegion const&)
libkwin.so.6:KWin::Item::scheduleRepaintInternal(QRegion const&)
libkwin.so.6:KWin::Item::markSortedChildItemsDirty()
libkwin.so.6:KWin::Item::updateEffectiveVisibility()
libkwin.so.6:KWin::Item::updateItemToSceneTransform()
libkwin.so.6:KWin::Item::setZ(int)
libkwin.so.6:KWin::Item::setSize(QSizeF const&)
libkwin.so.6:KWin::Item::addChild(KWin::Item*)
libkwin.so.6:KWin::Item::setScene(KWin::Scene*)
libkwin.so.6:KWin::Item::Item(KWin::Item*)
libkwin.so.6:KWin::Item::Item(KWin::Item*)
libkwin.so.6:KWin::Item::~Item()
libkwin.so.6:KWin::Item::~Item()
libkwin.so.6:KWin::Item::~Item()
libkwin.so.6:KWin::Tile::rowChanged(int)
libkwin.so.6:KWin::Tile::setPadding(double)
libkwin.so.6:KWin::Tile::insertChild(int, KWin::Tile*)
libkwin.so.6:KWin::Tile::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Tile::qt_metacast(char const*)
libkwin.so.6:KWin::Tile::removeChild(KWin::Tile*)
libkwin.so.6:KWin::Tile::windowAdded(KWin::Window*)
libkwin.so.6:KWin::Tile::destroyChild(KWin::Tile*)
libkwin.so.6:KWin::Tile::removeWindow(KWin::Window*)
libkwin.so.6:KWin::Tile::windowRemoved(KWin::Window*)
libkwin.so.6:KWin::Tile::paddingChanged(double)
libkwin.so.6:KWin::Tile::resizeByPixels(double, Qt::Edge)
libkwin.so.6:KWin::Tile::windowsChanged()
libkwin.so.6:KWin::Tile::isLayoutChanged(bool)
libkwin.so.6:KWin::Tile::setQuickTileMode(QFlags<KWin::QuickTileFlag>)
libkwin.so.6:KWin::Tile::childTilesChanged()
libkwin.so.6:KWin::Tile::resizeFromGravity(KWin::Gravity, int, int)
libkwin.so.6:KWin::Tile::setRelativeGeometry(QRectF const&)
libkwin.so.6:KWin::Tile::setGeometryFromWindow(QRectF const&)
libkwin.so.6:KWin::Tile::supportsResizeGravity(KWin::Gravity)
libkwin.so.6:KWin::Tile::windowGeometryChanged()
libkwin.so.6:KWin::Tile::absoluteGeometryChanged()
libkwin.so.6:KWin::Tile::relativeGeometryChanged()
libkwin.so.6:KWin::Tile::setGeometryFromAbsolute(QRectF const&)
libkwin.so.6:KWin::Tile::addWindow(KWin::Window*)
libkwin.so.6:KWin::Tile::childTile(int)
libkwin.so.6:KWin::Tile::Tile(KWin::TileManager*, KWin::Tile*)
libkwin.so.6:KWin::Tile::Tile(KWin::TileManager*, KWin::Tile*)
libkwin.so.6:KWin::Tile::~Tile()
libkwin.so.6:KWin::Tile::~Tile()
libkwin.so.6:KWin::Tile::~Tile()
libkwin.so.6:KWin::Udev::deviceFromSyspath(char const*)
libkwin.so.6:KWin::Udev::monitor()
libkwin.so.6:KWin::Udev::listGPUs()
libkwin.so.6:KWin::Udev::Udev()
libkwin.so.6:KWin::Udev::Udev()
libkwin.so.6:KWin::Udev::~Udev()
libkwin.so.6:KWin::Udev::~Udev()
libkwin.so.6:KWin::Atoms::retrieveHelpers()
libkwin.so.6:KWin::Atoms::Atoms()
libkwin.so.6:KWin::Atoms::Atoms()
libkwin.so.6:KWin::Scene::addRepaint(QRegion const&)
libkwin.so.6:KWin::Scene::addRepaint(int, int, int, int)
libkwin.so.6:KWin::Scene::addDelegate(KWin::SceneDelegate*)
libkwin.so.6:KWin::Scene::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Scene::qt_metacast(char const*)
libkwin.so.6:KWin::Scene::setGeometry(QRect const&)
libkwin.so.6:KWin::Scene::addRepaintFull()
libkwin.so.6:KWin::Scene::removeDelegate(KWin::SceneDelegate*)
libkwin.so.6:KWin::Scene::delegateRemoved(KWin::SceneDelegate*)
libkwin.so.6:KWin::Scene::frame(KWin::SceneDelegate*, KWin::OutputFrame*)
libkwin.so.6:KWin::Scene::Scene(std::unique_ptr<KWin::ItemRenderer, std::default_delete<KWin::ItemRenderer> >&&)
libkwin.so.6:KWin::Scene::Scene(std::unique_ptr<KWin::ItemRenderer, std::default_delete<KWin::ItemRenderer> >&&)
libkwin.so.6:KWin::Scene::~Scene()
libkwin.so.6:KWin::Scene::~Scene()
libkwin.so.6:KWin::Scene::~Scene()
libkwin.so.6:KWin::Cursor::posChanged(QPointF const&)
libkwin.so.6:KWin::Cursor::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Cursor::qt_metacast(char const*)
libkwin.so.6:KWin::Cursor::updateTheme(QString const&, int)
libkwin.so.6:KWin::Cursor::mouseChanged(QPointF const&, QPointF const&, QFlags<Qt::MouseButton>, QFlags<Qt::MouseButton>, QFlags<Qt::KeyboardModifier>, QFlags<Qt::KeyboardModifier>)
libkwin.so.6:KWin::Cursor::themeChanged()
libkwin.so.6:KWin::Cursor::cursorChanged()
libkwin.so.6:KWin::Cursor::markAsRendered(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Cursor::defaultThemeName()
libkwin.so.6:KWin::Cursor::defaultThemeSize()
libkwin.so.6:KWin::Cursor::fallbackThemeName()
libkwin.so.6:KWin::Cursor::loadThemeSettings()
libkwin.so.6:KWin::Cursor::loadThemeFromKConfig()
libkwin.so.6:KWin::Cursor::slotKGlobalSettingsNotifyChange(int, int)
libkwin.so.6:KWin::Cursor::pos()
libkwin.so.6:KWin::Cursor::setPos(QPointF const&)
libkwin.so.6:KWin::Cursor::doGetPos()
libkwin.so.6:KWin::Cursor::doSetPos()
libkwin.so.6:KWin::Cursor::rendered(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Cursor::setSource(KWin::CursorSource*)
libkwin.so.6:KWin::Cursor::updatePos(QPointF const&)
libkwin.so.6:KWin::Cursor::x11Cursor(KWin::CursorShape)
libkwin.so.6:KWin::Cursor::x11Cursor(QByteArray const&)
libkwin.so.6:KWin::Cursor::Cursor()
libkwin.so.6:KWin::Cursor::Cursor()
libkwin.so.6:KWin::Cursor::~Cursor()
libkwin.so.6:KWin::Cursor::~Cursor()
libkwin.so.6:KWin::Cursor::~Cursor()
libkwin.so.6:KWin::Effect::drawWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion const&, KWin::WindowPaintData&)
libkwin.so.6:KWin::Effect::paintScreen(KWin::RenderTarget const&, KWin::RenderViewport const&, int, QRegion const&, KWin::Output*)
libkwin.so.6:KWin::Effect::paintWindow(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::EffectWindow*, int, QRegion, KWin::WindowPaintData&)
libkwin.so.6:KWin::Effect::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Effect::qt_metacast(char const*)
libkwin.so.6:KWin::Effect::reconfigure(QFlags<KWin::Effect::ReconfigureFlag>)
libkwin.so.6:KWin::Effect::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::Effect::animationTime(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Effect::animationTime(KConfigGroup const&, QString const&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Effect::prePaintScreen(KWin::ScreenPrePaintData&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Effect::prePaintWindow(KWin::EffectWindow*, KWin::WindowPrePaintData&, std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Effect::borderActivated(KWin::ElectricBorder)
libkwin.so.6:KWin::Effect::postPaintScreen()
libkwin.so.6:KWin::Effect::postPaintWindow(KWin::EffectWindow*)
libkwin.so.6:KWin::Effect::tabletToolEvent(QTabletEvent*)
libkwin.so.6:KWin::Effect::tabletPadRingEvent(int, int, bool, void*)
libkwin.so.6:KWin::Effect::tabletPadStripEvent(int, int, bool, void*)
libkwin.so.6:KWin::Effect::grabbedKeyboardEvent(QKeyEvent*)
libkwin.so.6:KWin::Effect::tabletPadButtonEvent(unsigned int, bool, void*)
libkwin.so.6:KWin::Effect::tabletToolButtonEvent(unsigned int, bool, unsigned long long)
libkwin.so.6:KWin::Effect::windowInputMouseEvent(QEvent*)
libkwin.so.6:KWin::Effect::setPositionTransformations(KWin::WindowPaintData&, QRect&, KWin::EffectWindow*, QRect const&, Qt::AspectRatioMode)
libkwin.so.6:KWin::Effect::perform(KWin::Effect::Feature, QList<QVariant> const&)
libkwin.so.6:KWin::Effect::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::Effect::provides(KWin::Effect::Feature)
libkwin.so.6:KWin::Effect::cursorPos()
libkwin.so.6:KWin::Effect::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:KWin::Effect::Effect(QObject*)
libkwin.so.6:KWin::Effect::Effect(QObject*)
libkwin.so.6:KWin::Effect::~Effect()
libkwin.so.6:KWin::Effect::~Effect()
libkwin.so.6:KWin::Effect::~Effect()
libkwin.so.6:KWin::Output::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Output::qt_metacast(char const*)
libkwin.so.6:KWin::Output::setDpmsMode(KWin::Output::DpmsMode)
libkwin.so.6:KWin::Output::applyChanges(KWin::OutputConfiguration const&)
libkwin.so.6:KWin::Output::modesChanged()
libkwin.so.6:KWin::Output::outputChange(QRegion const&)
libkwin.so.6:KWin::Output::scaleChanged()
libkwin.so.6:KWin::Output::setGammaRamp(std::shared_ptr<KWin::ColorTransformation> const&)
libkwin.so.6:KWin::Output::aboutToChange(KWin::OutputChangeSet*)
libkwin.so.6:KWin::Output::aboutToTurnOff(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::Output::enabledChanged()
libkwin.so.6:KWin::Output::setInformation(KWin::Output::Information const&)
libkwin.so.6:KWin::Output::dpmsModeChanged()
libkwin.so.6:KWin::Output::geometryChanged()
libkwin.so.6:KWin::Output::overscanChanged()
libkwin.so.6:KWin::Output::rgbRangeChanged()
libkwin.so.6:KWin::Output::dimAnimationTime()
libkwin.so.6:KWin::Output::transformChanged()
libkwin.so.6:KWin::Output::vrrPolicyChanged()
libkwin.so.6:KWin::Output::brightnessChanged()
libkwin.so.6:KWin::Output::iccProfileChanged()
libkwin.so.6:KWin::Output::setChannelFactors(QVector3D const&)
libkwin.so.6:KWin::Output::updateCursorLayer()
libkwin.so.6:KWin::Output::currentModeChanged()
libkwin.so.6:KWin::Output::capabilitiesChanged()
libkwin.so.6:KWin::Output::sdrBrightnessChanged()
libkwin.so.6:KWin::Output::iccProfilePathChanged()
libkwin.so.6:KWin::Output::wideColorGamutChanged()
libkwin.so.6:KWin::Output::colorDescriptionChanged()
libkwin.so.6:KWin::Output::highDynamicRangeChanged()
libkwin.so.6:KWin::Output::sdrGamutWidenessChanged()
libkwin.so.6:KWin::Output::autoRotationPolicyChanged()
libkwin.so.6:KWin::Output::brightnessMetadataChanged()
libkwin.so.6:KWin::Output::colorProfileSourceChanged()
libkwin.so.6:KWin::Output::ref()
libkwin.so.6:KWin::Output::unref()
libkwin.so.6:KWin::Output::wakeUp()
libkwin.so.6:KWin::Output::changed()
libkwin.so.6:KWin::Output::setState(KWin::Output::State const&)
libkwin.so.6:KWin::Output::Output(QObject*)
libkwin.so.6:KWin::Output::Output(QObject*)
libkwin.so.6:KWin::Output::~Output()
libkwin.so.6:KWin::Output::~Output()
libkwin.so.6:KWin::Output::~Output()
libkwin.so.6:KWin::Plugin::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Plugin::qt_metacast(char const*)
libkwin.so.6:KWin::Plugin::Plugin()
libkwin.so.6:KWin::Plugin::Plugin()
libkwin.so.6:KWin::Shadow::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Shadow::qt_metacast(char const*)
libkwin.so.6:KWin::Shadow::rectChanged()
libkwin.so.6:KWin::Shadow::createShadow(KWin::Window*)
libkwin.so.6:KWin::Shadow::updateShadow()
libkwin.so.6:KWin::Shadow::offsetChanged()
libkwin.so.6:KWin::Shadow::textureChanged()
libkwin.so.6:KWin::Shadow::geometryChanged()
libkwin.so.6:KWin::Shadow::createShadowFromX11(KWin::Window*)
libkwin.so.6:KWin::Shadow::readX11ShadowProperty(unsigned int)
libkwin.so.6:KWin::Shadow::createShadowFromWayland(KWin::Window*)
libkwin.so.6:KWin::Shadow::createShadowFromDecoration(KWin::Window*)
libkwin.so.6:KWin::Shadow::createShadowFromInternalWindow(KWin::Window*)
libkwin.so.6:KWin::Shadow::init(QWindow const*)
libkwin.so.6:KWin::Shadow::init(KDecoration2::Decoration*)
libkwin.so.6:KWin::Shadow::init(QList<unsigned int> const&)
libkwin.so.6:KWin::Shadow::init(QPointer<KWin::ShadowInterface> const&)
libkwin.so.6:KWin::Shadow::Shadow(KWin::Window*)
libkwin.so.6:KWin::Shadow::Shadow(KWin::Window*)
libkwin.so.6:KWin::Shadow::~Shadow()
libkwin.so.6:KWin::Shadow::~Shadow()
libkwin.so.6:KWin::Shadow::~Shadow()
libkwin.so.6:KWin::TabBox::TabBox::loadConfig(KConfigGroup const&, KWin::TabBox::TabBoxConfig&)
libkwin.so.6:KWin::TabBox::TabBox::toggleMode(KWin::TabBoxMode)
libkwin.so.6:KWin::TabBox::TabBox::delayedShow()
libkwin.so.6:KWin::TabBox::TabBox::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TabBox::TabBox::qt_metacast(char const*)
libkwin.so.6:KWin::TabBox::TabBox::reconfigure()
libkwin.so.6:KWin::TabBox::TabBox::tabBoxAdded(int)
libkwin.so.6:KWin::TabBox::TabBox::handlerReady()
libkwin.so.6:KWin::TabBox::TabBox::tabBoxClosed()
libkwin.so.6:KWin::TabBox::TabBox::currentClient()
libkwin.so.6:KWin::TabBox::TabBox::initShortcuts()
libkwin.so.6:KWin::TabBox::TabBox::shadeActivate(KWin::Window*)
libkwin.so.6:KWin::TabBox::TabBox::tabBoxUpdated()
libkwin.so.6:KWin::TabBox::TabBox::tabBoxKeyEvent(QKeyEvent*)
libkwin.so.6:KWin::TabBox::TabBox::grabbedKeyEvent(QKeyEvent*)
libkwin.so.6:KWin::TabBox::TabBox::setCurrentIndex(QModelIndex, bool)
libkwin.so.6:KWin::TabBox::TabBox::handleMouseEvent(QMouseEvent*)
libkwin.so.6:KWin::TabBox::TabBox::handleWheelEvent(QWheelEvent*)
libkwin.so.6:KWin::TabBox::TabBox::removeTabBoxGrab()
libkwin.so.6:KWin::TabBox::TabBox::setCurrentClient(KWin::Window*)
libkwin.so.6:KWin::TabBox::TabBox::currentClientList()
libkwin.so.6:KWin::TabBox::TabBox::modifiersReleased()
libkwin.so.6:KWin::TabBox::TabBox::establishTabBoxGrab()
libkwin.so.6:KWin::TabBox::TabBox::CDEWalkThroughWindows(bool)
libkwin.so.6:KWin::TabBox::TabBox::KDEWalkThroughWindows(bool)
libkwin.so.6:KWin::TabBox::TabBox::globalShortcutChanged(QAction*, QKeySequence const&)
libkwin.so.6:KWin::TabBox::TabBox::slotWalkThroughWindows()
libkwin.so.6:KWin::TabBox::TabBox::KDEOneStepThroughWindows(bool, KWin::TabBoxMode)
libkwin.so.6:KWin::TabBox::TabBox::navigatingThroughWindows(bool, QKeySequence const&, KWin::TabBoxMode)
libkwin.so.6:KWin::TabBox::TabBox::slotWalkBackThroughWindows()
libkwin.so.6:KWin::TabBox::TabBox::startKDEWalkThroughWindows(KWin::TabBoxMode)
libkwin.so.6:KWin::TabBox::TabBox::slotWalkThroughCurrentAppWindows()
libkwin.so.6:KWin::TabBox::TabBox::slotWalkThroughWindowsAlternative()
libkwin.so.6:KWin::TabBox::TabBox::slotWalkBackThroughCurrentAppWindows()
libkwin.so.6:KWin::TabBox::TabBox::slotWalkBackThroughWindowsAlternative()
libkwin.so.6:KWin::TabBox::TabBox::slotWalkThroughCurrentAppWindowsAlternative()
libkwin.so.6:KWin::TabBox::TabBox::slotWalkBackThroughCurrentAppWindowsAlternative()
libkwin.so.6:KWin::TabBox::TabBox::hide(bool)
libkwin.so.6:KWin::TabBox::TabBox::show()
libkwin.so.6:KWin::TabBox::TabBox::close(bool)
libkwin.so.6:KWin::TabBox::TabBox::reset(bool)
libkwin.so.6:KWin::TabBox::TabBox::accept(bool)
libkwin.so.6:KWin::TabBox::TabBox::toggle(KWin::ElectricBorder)
libkwin.so.6:KWin::TabBox::TabBox::setMode(KWin::TabBoxMode)
libkwin.so.6:KWin::TabBox::TabBox::keyPress(int)
libkwin.so.6:KWin::TabBox::TabBox::nextPrev(bool)
libkwin.so.6:KWin::TabBox::TabBox::TabBox()
libkwin.so.6:KWin::TabBox::TabBox::TabBox()
libkwin.so.6:KWin::TabBox::TabBox::~TabBox()
libkwin.so.6:KWin::TabBox::TabBox::~TabBox()
libkwin.so.6:KWin::TabBox::TabBox::~TabBox()
libkwin.so.6:KWin::Window::doMinimize()
libkwin.so.6:KWin::Window::doSetModal()
libkwin.so.6:KWin::Window::doSetShade(KWin::ShadeMode)
libkwin.so.6:KWin::Window::keepInArea(QRectF, QRectF, bool)
libkwin.so.6:KWin::Window::moveResize(QRectF const&)
libkwin.so.6:KWin::Window::moveToArea(QRectF const&, QRectF const&, QRectF const&)
libkwin.so.6:KWin::Window::removeRule(KWin::Rules*)
libkwin.so.6:KWin::Window::setOpacity(double)
libkwin.so.6:KWin::Window::setSurface(KWin::SurfaceInterface*)
libkwin.so.6:KWin::Window::shadeHover()
libkwin.so.6:KWin::Window::cleanTabBox()
libkwin.so.6:KWin::Window::doSetActive()
libkwin.so.6:KWin::Window::doSetHidden()
libkwin.so.6:KWin::Window::iconChanged()
libkwin.so.6:KWin::Window::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Window::qt_metacast(char const*)
libkwin.so.6:KWin::Window::setDesktops(QList<KWin::VirtualDesktop*>)
libkwin.so.6:KWin::Window::setMaximize(bool, bool)
libkwin.so.6:KWin::Window::setNoBorder(bool)
libkwin.so.6:KWin::Window::setShortcut(QString const&)
libkwin.so.6:KWin::Window::tileChanged(KWin::Tile*)
libkwin.so.6:KWin::Window::toggleShade()
libkwin.so.6:KWin::Window::updateLayer()
libkwin.so.6:KWin::Window::addTransient(KWin::Window*)
libkwin.so.6:KWin::Window::doSetDesktop()
libkwin.so.6:KWin::Window::effectWindow()
libkwin.so.6:KWin::Window::enterDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Window::growVertical()
libkwin.so.6:KWin::Window::leaveDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Window::modalChanged()
libkwin.so.6:KWin::Window::sendToOutput(KWin::Output*)
libkwin.so.6:KWin::Window::setKeepAbove(bool)
libkwin.so.6:KWin::Window::setKeepBelow(bool)
libkwin.so.6:KWin::Window::setMinimized(bool)
libkwin.so.6:KWin::Window::setSkipPager(bool)
libkwin.so.6:KWin::Window::setSuspended(bool)
libkwin.so.6:KWin::Window::shadeChanged()
libkwin.so.6:KWin::Window::shadeUnhover()
libkwin.so.6:KWin::Window::transientFor()
libkwin.so.6:KWin::Window::updateCursor()
libkwin.so.6:KWin::Window::updateShadow()
libkwin.so.6:KWin::Window::activeChanged()
libkwin.so.6:KWin::Window::checkNoBorder()
libkwin.so.6:KWin::Window::ensurePalette()
libkwin.so.6:KWin::Window::hiddenChanged()
libkwin.so.6:KWin::Window::keyPressEvent(unsigned int)
libkwin.so.6:KWin::Window::markAsDeleted()
libkwin.so.6:KWin::Window::outputChanged()
libkwin.so.6:KWin::Window::setDecoration(std::shared_ptr<KDecoration2::Decoration>)
libkwin.so.6:KWin::Window::setFullScreen(bool)
libkwin.so.6:KWin::Window::setOnActivity(QString const&, bool)
libkwin.so.6:KWin::Window::shadowChanged()
libkwin.so.6:KWin::Window::captionChanged()
libkwin.so.6:KWin::Window::doSetKeepAbove()
libkwin.so.6:KWin::Window::doSetKeepBelow()
libkwin.so.6:KWin::Window::doSetSkipPager()
libkwin.so.6:KWin::Window::doSetSuspended()
libkwin.so.6:KWin::Window::growHorizontal()
libkwin.so.6:KWin::Window::opacityChanged(KWin::Window*, double)
libkwin.so.6:KWin::Window::paletteChanged(QPalette const&)
libkwin.so.6:KWin::Window::setColorScheme(QString const&)
libkwin.so.6:KWin::Window::setSkipTaskbar(bool)
libkwin.so.6:KWin::Window::shrinkVertical()
libkwin.so.6:KWin::Window::startAutoRaise()
libkwin.so.6:KWin::Window::surfaceChanged()
libkwin.so.6:KWin::Window::cancelAutoRaise()
libkwin.so.6:KWin::Window::demandAttention(bool)
libkwin.so.6:KWin::Window::desktopsChanged()
libkwin.so.6:KWin::Window::findDesktopFile(QString const&)
libkwin.so.6:KWin::Window::removeTransient(KWin::Window*)
libkwin.so.6:KWin::Window::setOnActivities(QList<QString> const&)
libkwin.so.6:KWin::Window::setSkipSwitcher(bool)
libkwin.so.6:KWin::Window::setTransientFor(KWin::Window*)
libkwin.so.6:KWin::Window::setUnresponsive(bool)
libkwin.so.6:KWin::Window::showContextHelp()
libkwin.so.6:KWin::Window::updateMouseGrab()
libkwin.so.6:KWin::Window::applyWindowRules()
libkwin.so.6:KWin::Window::closeableChanged(bool)
libkwin.so.6:KWin::Window::doSetSkipTaskbar()
libkwin.so.6:KWin::Window::keepAboveChanged(bool)
libkwin.so.6:KWin::Window::keepBelowChanged(bool)
libkwin.so.6:KWin::Window::maximizedChanged()
libkwin.so.6:KWin::Window::minimizedChanged()
libkwin.so.6:KWin::Window::setOnAllDesktops(bool)
libkwin.so.6:KWin::Window::setQuickTileMode(QFlags<KWin::QuickTileFlag>, bool)
libkwin.so.6:KWin::Window::setResourceClass(QString const&, QString const&)
libkwin.so.6:KWin::Window::setStackingOrder(int)
libkwin.so.6:KWin::Window::setupCompositing()
libkwin.so.6:KWin::Window::setupWindowRules()
libkwin.so.6:KWin::Window::shadeableChanged(bool)
libkwin.so.6:KWin::Window::showOnScreenEdge()
libkwin.so.6:KWin::Window::shrinkHorizontal()
libkwin.so.6:KWin::Window::skipPagerChanged()
libkwin.so.6:KWin::Window::transientChanged()
libkwin.so.6:KWin::Window::updateActivities(bool)
libkwin.so.6:KWin::Window::activitiesChanged()
libkwin.so.6:KWin::Window::decorationChanged()
libkwin.so.6:KWin::Window::decorationPalette()
libkwin.so.6:KWin::Window::doSetOnActivities(QList<QString> const&)
libkwin.so.6:KWin::Window::doSetSkipSwitcher()
libkwin.so.6:KWin::Window::finishCompositing()
libkwin.so.6:KWin::Window::finishWindowRules()
libkwin.so.6:KWin::Window::fullScreenChanged()
libkwin.so.6:KWin::Window::pointerEnterEvent(QPointF const&)
libkwin.so.6:KWin::Window::pointerLeaveEvent()
libkwin.so.6:KWin::Window::updateColorScheme()
libkwin.so.6:KWin::Window::updateWindowRules(QFlags<KWin::Rules::Type>)
libkwin.so.6:KWin::Window::windowRoleChanged()
libkwin.so.6:KWin::Window::colorSchemeChanged()
libkwin.so.6:KWin::Window::doSetQuickTileMode()
libkwin.so.6:KWin::Window::moveResizedChanged()
libkwin.so.6:KWin::Window::setDecoratedClient(KWin::Decoration::DecoratedClientImpl*)
libkwin.so.6:KWin::Window::setDesktopFileName(QString const&)
libkwin.so.6:KWin::Window::setGeometryRestore(QRectF const&)
libkwin.so.6:KWin::Window::setLastUsageSerial(unsigned int)
libkwin.so.6:KWin::Window::setOnAllActivities(bool)
libkwin.so.6:KWin::Window::skipTaskbarChanged()
libkwin.so.6:KWin::Window::windowClassChanged()
libkwin.so.6:KWin::Window::evaluateWindowRules()
libkwin.so.6:KWin::Window::handlePaletteChange()
libkwin.so.6:KWin::Window::iconFromDesktopFile(QString const&)
libkwin.so.6:KWin::Window::maximizeableChanged(bool)
libkwin.so.6:KWin::Window::minimizeableChanged(bool)
libkwin.so.6:KWin::Window::performMouseCommand(KWin::Options::MouseCommand, QPointF const&)
libkwin.so.6:KWin::Window::setMoveResizeOutput(KWin::Output*)
libkwin.so.6:KWin::Window::setReadyForPainting()
libkwin.so.6:KWin::Window::setShortcutInternal()
libkwin.so.6:KWin::Window::showApplicationMenu(int)
libkwin.so.6:KWin::Window::skipSwitcherChanged()
libkwin.so.6:KWin::Window::unresponsiveChanged(bool)
libkwin.so.6:KWin::Window::updateQuickTileMode(QFlags<KWin::QuickTileFlag>)
libkwin.so.6:KWin::Window::blockActivityUpdates(bool)
libkwin.so.6:KWin::Window::captionNormalChanged()
libkwin.so.6:KWin::Window::frameGeometryChanged(QRectF const&)
libkwin.so.6:KWin::Window::invalidateDecoration()
libkwin.so.6:KWin::Window::quickTileModeChanged()
libkwin.so.6:KWin::Window::setLockScreenOverlay(bool)
libkwin.so.6:KWin::Window::stackingOrderChanged()
libkwin.so.6:KWin::Window::startShadeHoverTimer()
libkwin.so.6:KWin::Window::bufferGeometryChanged(QRectF const&)
libkwin.so.6:KWin::Window::cancelShadeHoverTimer()
libkwin.so.6:KWin::Window::clientGeometryChanged(QRectF const&)
libkwin.so.6:KWin::Window::doSetDemandsAttention()
libkwin.so.6:KWin::Window::processDecorationMove(QPointF const&, QPointF const&)
libkwin.so.6:KWin::Window::refOffscreenRendering()
libkwin.so.6:KWin::Window::setElectricBorderMode(QFlags<KWin::QuickTileFlag>)
libkwin.so.6:KWin::Window::setMoveResizeGeometry(QRectF const&)
libkwin.so.6:KWin::Window::setSkipCloseAnimation(bool)
libkwin.so.6:KWin::Window::applicationMenuChanged()
libkwin.so.6:KWin::Window::checkOffscreenPosition(QRectF*, QRectF const&)
libkwin.so.6:KWin::Window::checkWorkspacePosition(QRectF, KWin::VirtualDesktop const*)
libkwin.so.6:KWin::Window::desktopFileNameChanged()
libkwin.so.6:KWin::Window::maximizedAboutToChange(KWin::MaximizeMode)
libkwin.so.6:KWin::Window::maybeSendFrameCallback()
libkwin.so.6:KWin::Window::setHiddenByShowDesktop(bool)
libkwin.so.6:KWin::Window::setOriginalSkipTaskbar(bool)
libkwin.so.6:KWin::Window::startShadeUnhoverTimer()
libkwin.so.6:KWin::Window::visibleGeometryChanged()
libkwin.so.6:KWin::Window::belongToSameApplication(KWin::Window const*, KWin::Window const*, QFlags<KWin::Window::SameApplicationCheck>)
libkwin.so.6:KWin::Window::demandsAttentionChanged()
libkwin.so.6:KWin::Window::doInteractiveResizeSync(QRectF const&)
libkwin.so.6:KWin::Window::moveResizeCursorChanged(KWin::CursorShape)
libkwin.so.6:KWin::Window::readyForPaintingChanged()
libkwin.so.6:KWin::Window::removeTransientFromList(KWin::Window*)
libkwin.so.6:KWin::Window::setPreferredBufferScale(double)
libkwin.so.6:KWin::Window::unrefOffscreenRendering()
libkwin.so.6:KWin::Window::doSetHiddenByShowDesktop()
libkwin.so.6:KWin::Window::endInteractiveMoveResize()
libkwin.so.6:KWin::Window::lockScreenOverlayChanged()
libkwin.so.6:KWin::Window::setApplicationMenuActive(bool)
libkwin.so.6:KWin::Window::triggerDecorationRepaint()
libkwin.so.6:KWin::Window::doSetPreferredBufferScale()
libkwin.so.6:KWin::Window::dontInteractiveMoveResize()
libkwin.so.6:KWin::Window::hasApplicationMenuChanged(bool)
libkwin.so.6:KWin::Window::offscreenRenderingChanged()
libkwin.so.6:KWin::Window::skipCloseAnimationChanged()
libkwin.so.6:KWin::Window::ensureSpecialStateGeometry(QRectF const&)
libkwin.so.6:KWin::Window::frameGeometryAboutToChange()
libkwin.so.6:KWin::Window::hiddenByShowDesktopChanged()
libkwin.so.6:KWin::Window::inputTransformationChanged()
libkwin.so.6:KWin::Window::leaveInteractiveMoveResize()
libkwin.so.6:KWin::Window::setKeyboardGeometryRestore(QRectF const&)
libkwin.so.6:KWin::Window::setVirtualKeyboardGeometry(QRectF const&)
libkwin.so.6:KWin::Window::startInteractiveMoveResize()
libkwin.so.6:KWin::Window::updateDecorationInputShape()
libkwin.so.6:KWin::Window::updatePreferredBufferScale()
libkwin.so.6:KWin::Window::finishInteractiveMoveResize(bool)
libkwin.so.6:KWin::Window::setElectricBorderMaximizing(bool)
libkwin.so.6:KWin::Window::setPreferredBufferTransform(KWin::OutputTransform)
libkwin.so.6:KWin::Window::updateInteractiveMoveResize(QPointF const&)
libkwin.so.6:KWin::Window::applicationMenuActiveChanged(bool)
libkwin.so.6:KWin::Window::doStartInteractiveMoveResize()
libkwin.so.6:KWin::Window::interactiveMoveResizeStarted()
libkwin.so.6:KWin::Window::interactiveMoveResizeStepped(QRectF const&)
libkwin.so.6:KWin::Window::processDecorationButtonPress(QPointF const&, QPointF const&, Qt::MouseButton, bool)
libkwin.so.6:KWin::Window::setFullscreenGeometryRestore(QRectF const&)
libkwin.so.6:KWin::Window::setPreferredColorDescription(KWin::ColorDescription const&)
libkwin.so.6:KWin::Window::doFinishInteractiveMoveResize()
libkwin.so.6:KWin::Window::doSetPreferredBufferTransform()
libkwin.so.6:KWin::Window::interactiveMoveResizeFinished()
libkwin.so.6:KWin::Window::updateElectricGeometryRestore()
libkwin.so.6:KWin::Window::doSetPreferredColorDescription()
libkwin.so.6:KWin::Window::maximizeGeometryRestoreChanged()
libkwin.so.6:KWin::Window::processDecorationButtonRelease(Qt::MouseButton)
libkwin.so.6:KWin::Window::setupWindowManagementInterface()
libkwin.so.6:KWin::Window::updatePreferredBufferTransform()
libkwin.so.6:KWin::Window::startDecorationDoubleClickTimer()
libkwin.so.6:KWin::Window::updateApplicationMenuObjectPath(QString const&)
libkwin.so.6:KWin::Window::updatePreferredColorDescription()
libkwin.so.6:KWin::Window::destroyWindowManagementInterface()
libkwin.so.6:KWin::Window::fullscreenGeometryRestoreChanged()
libkwin.so.6:KWin::Window::stopDelayedInteractiveMoveResize()
libkwin.so.6:KWin::Window::updateApplicationMenuServiceName(QString const&)
libkwin.so.6:KWin::Window::checkQuickTilingMaximizationZones(int, int)
libkwin.so.6:KWin::Window::resetQuickTilingMaximizationZones()
libkwin.so.6:KWin::Window::startDelayedInteractiveMoveResize()
libkwin.so.6:KWin::Window::invalidateDecorationDoubleClickTimer()
libkwin.so.6:KWin::Window::checkUnrestrictedInteractiveMoveResize()
libkwin.so.6:KWin::Window::ref()
libkwin.so.6:KWin::Window::move(QPointF const&)
libkwin.so.6:KWin::Window::group()
libkwin.so.6:KWin::Window::unref()
libkwin.so.6:KWin::Window::closed()
libkwin.so.6:KWin::Window::packTo(double, double)
libkwin.so.6:KWin::Window::resize(QSizeF const&)
libkwin.so.6:KWin::Window::damaged(KWin::Window*)
libkwin.so.6:KWin::Window::elevate(bool)
libkwin.so.6:KWin::Window::palette()
libkwin.so.6:KWin::Window::setIcon(QIcon const&)
libkwin.so.6:KWin::Window::setTile(KWin::Tile*)
libkwin.so.6:KWin::Window::maximize(KWin::MaximizeMode)
libkwin.so.6:KWin::Window::setModal(bool)
libkwin.so.6:KWin::Window::setShade(KWin::ShadeMode)
libkwin.so.6:KWin::Window::setShade(bool)
libkwin.so.6:KWin::Window::autoRaise()
libkwin.so.6:KWin::Window::setActive(bool)
libkwin.so.6:KWin::Window::setHidden(bool)
libkwin.so.6:KWin::Window::setOutput(KWin::Output*)
libkwin.so.6:KWin::Window::Window()
libkwin.so.6:KWin::Window::Window()
libkwin.so.6:KWin::Window::~Window()
libkwin.so.6:KWin::Window::~Window()
libkwin.so.6:KWin::Window::~Window()
libkwin.so.6:KWin::AniData::AniData(KWin::AnimationEffect::Attribute, int, KWin::FPx2 const&, int, KWin::FPx2 const&, bool, std::shared_ptr<KWin::FullScreenEffectLock> const&, bool, KWin::GLShader*)
libkwin.so.6:KWin::AniData::AniData()
libkwin.so.6:KWin::AniData::AniData(KWin::AnimationEffect::Attribute, int, KWin::FPx2 const&, int, KWin::FPx2 const&, bool, std::shared_ptr<KWin::FullScreenEffectLock> const&, bool, KWin::GLShader*)
libkwin.so.6:KWin::AniData::AniData()
libkwin.so.6:KWin::Cursors::hideCursor()
libkwin.so.6:KWin::Cursors::showCursor()
libkwin.so.6:KWin::Cursors::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Cursors::qt_metacast(char const*)
libkwin.so.6:KWin::Cursors::removeCursor(KWin::Cursor*)
libkwin.so.6:KWin::Cursors::hiddenChanged()
libkwin.so.6:KWin::Cursors::positionChanged(KWin::Cursor*, QPointF const&)
libkwin.so.6:KWin::Cursors::setCurrentCursor(KWin::Cursor*)
libkwin.so.6:KWin::Cursors::currentCursorChanged(KWin::Cursor*)
libkwin.so.6:KWin::Cursors::emitCurrentCursorChanged()
libkwin.so.6:KWin::Cursors::self()
libkwin.so.6:KWin::Cursors::addCursor(KWin::Cursor*)
libkwin.so.6:KWin::Display::nextSerial()
libkwin.so.6:KWin::Display::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Display::qt_metacast(char const*)
libkwin.so.6:KWin::Display::createClient(int)
libkwin.so.6:KWin::Display::addSocketName(QString const&)
libkwin.so.6:KWin::Display::getConnection(wl_client*)
libkwin.so.6:KWin::Display::dispatchEvents()
libkwin.so.6:KWin::Display::runningChanged(bool)
libkwin.so.6:KWin::Display::clientConnected(KWin::ClientConnection*)
libkwin.so.6:KWin::Display::bufferForResource(wl_resource*)
libkwin.so.6:KWin::Display::clientDisconnected(KWin::ClientConnection*)
libkwin.so.6:KWin::Display::socketNamesChanged()
libkwin.so.6:KWin::Display::addSocketFileDescriptor(int, QString const&)
libkwin.so.6:KWin::Display::setDefaultMaxBufferSize(unsigned long)
libkwin.so.6:KWin::Display::flush()
libkwin.so.6:KWin::Display::start()
libkwin.so.6:KWin::Display::serial()
libkwin.so.6:KWin::Display::createShm()
libkwin.so.6:KWin::Display::Display(QObject*)
libkwin.so.6:KWin::Display::Display(QObject*)
libkwin.so.6:KWin::Display::~Display()
libkwin.so.6:KWin::Display::~Display()
libkwin.so.6:KWin::Display::~Display()
libkwin.so.6:KWin::Display::operator wl_display*()
libkwin.so.6:KWin::Options::loadConfig()
libkwin.so.6:KWin::Options::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Options::qt_metacast(char const*)
libkwin.so.6:KWin::Options::mouseCommand(QString const&, bool)
libkwin.so.6:KWin::Options::setAutoRaise(bool)
libkwin.so.6:KWin::Options::setPlacement(KWin::PlacementPolicy)
libkwin.so.6:KWin::Options::configChanged()
libkwin.so.6:KWin::Options::setClickRaise(bool)
libkwin.so.6:KWin::Options::setShadeHover(bool)
libkwin.so.6:KWin::Options::syncFromKcfgc()
libkwin.so.6:KWin::Options::setCommandAll1(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandAll2(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandAll3(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setEdgeBarrier(int)
libkwin.so.6:KWin::Options::setFocusPolicy(KWin::Options::FocusPolicy)
libkwin.so.6:KWin::Options::updateSettings()
libkwin.so.6:KWin::Options::setAllowTearing(bool)
libkwin.so.6:KWin::Options::windowOperation(QString const&, bool)
libkwin.so.6:KWin::Options::autoRaiseChanged()
libkwin.so.6:KWin::Options::placementChanged()
libkwin.so.6:KWin::Options::setCornerBarrier(bool)
libkwin.so.6:KWin::Options::setGlSmoothScale(int)
libkwin.so.6:KWin::Options::clickRaiseChanged()
libkwin.so.6:KWin::Options::mouseWheelCommand(QString const&)
libkwin.so.6:KWin::Options::setBorderSnapZone(int)
libkwin.so.6:KWin::Options::setCenterSnapZone(int)
libkwin.so.6:KWin::Options::setCommandWindow1(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandWindow2(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandWindow3(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCondensedTitle(bool)
libkwin.so.6:KWin::Options::setHiddenPreviews(int)
libkwin.so.6:KWin::Options::setUseCompositing(bool)
libkwin.so.6:KWin::Options::setWindowSnapZone(int)
libkwin.so.6:KWin::Options::shadeHoverChanged()
libkwin.so.6:KWin::Options::commandAll1Changed()
libkwin.so.6:KWin::Options::commandAll2Changed()
libkwin.so.6:KWin::Options::commandAll3Changed()
libkwin.so.6:KWin::Options::edgeBarrierChanged()
libkwin.so.6:KWin::Options::focusPolicyChanged()
libkwin.so.6:KWin::Options::setCompositingMode(int)
libkwin.so.6:KWin::Options::setGlStrictBinding(bool)
libkwin.so.6:KWin::Options::setKeyCmdAllModKey(unsigned int)
libkwin.so.6:KWin::Options::setKillPingTimeout(int)
libkwin.so.6:KWin::Options::allowTearingChanged()
libkwin.so.6:KWin::Options::setRollOverDesktops(bool)
libkwin.so.6:KWin::Options::cornerBarrierChanged()
libkwin.so.6:KWin::Options::glSmoothScaleChanged()
libkwin.so.6:KWin::Options::reparseConfiguration()
libkwin.so.6:KWin::Options::setAutoRaiseInterval(int)
libkwin.so.6:KWin::Options::animationSpeedChanged()
libkwin.so.6:KWin::Options::borderSnapZoneChanged()
libkwin.so.6:KWin::Options::centerSnapZoneChanged()
libkwin.so.6:KWin::Options::commandWindow1Changed()
libkwin.so.6:KWin::Options::commandWindow2Changed()
libkwin.so.6:KWin::Options::commandWindow3Changed()
libkwin.so.6:KWin::Options::condensedTitleChanged()
libkwin.so.6:KWin::Options::hiddenPreviewsChanged()
libkwin.so.6:KWin::Options::setCommandWindowWheel(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setDelayFocusInterval(int)
libkwin.so.6:KWin::Options::setGlPreferBufferSwap(char)
libkwin.so.6:KWin::Options::setShadeHoverInterval(int)
libkwin.so.6:KWin::Options::setXwaylandEavesdrops(KWin::XwaylandEavesdropsMode)
libkwin.so.6:KWin::Options::useCompositingChanged()
libkwin.so.6:KWin::Options::windowSnapZoneChanged()
libkwin.so.6:KWin::Options::compositingModeChanged()
libkwin.so.6:KWin::Options::glStrictBindingChanged()
libkwin.so.6:KWin::Options::keyCmdAllModKeyChanged()
libkwin.so.6:KWin::Options::killPingTimeoutChanged()
libkwin.so.6:KWin::Options::setGlPlatformInterface(KWin::OpenGLPlatformInterface)
libkwin.so.6:KWin::Options::setSeparateScreenFocus(bool)
libkwin.so.6:KWin::Options::setXwaylandCrashPolicy(KWin::XwaylandCrashPolicy)
libkwin.so.6:KWin::Options::rollOverDesktopsChanged(bool)
libkwin.so.6:KWin::Options::setElectricBorderTiling(bool)
libkwin.so.6:KWin::Options::autoRaiseIntervalChanged()
libkwin.so.6:KWin::Options::setNextFocusPrefersMouse(bool)
libkwin.so.6:KWin::Options::setXwaylandMaxCrashCount(int)
libkwin.so.6:KWin::Options::commandWindowWheelChanged()
libkwin.so.6:KWin::Options::delayFocusIntervalChanged()
libkwin.so.6:KWin::Options::glPreferBufferSwapChanged()
libkwin.so.6:KWin::Options::setCommandActiveTitlebar1(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandActiveTitlebar2(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandActiveTitlebar3(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setElectricBorderMaximize(bool)
libkwin.so.6:KWin::Options::shadeHoverIntervalChanged()
libkwin.so.6:KWin::Options::xwaylandEavesdropsChanged()
libkwin.so.6:KWin::Options::glPlatformInterfaceChanged()
libkwin.so.6:KWin::Options::separateScreenFocusChanged(bool)
libkwin.so.6:KWin::Options::setActivationDesktopPolicy(KWin::Options::ActivationDesktopPolicy)
libkwin.so.6:KWin::Options::setSnapOnlyWhenOverlapping(bool)
libkwin.so.6:KWin::Options::setWindowsBlockCompositing(bool)
libkwin.so.6:KWin::Options::setXwaylandEavesdropsMouse(bool)
libkwin.so.6:KWin::Options::xwaylandCrashPolicyChanged()
libkwin.so.6:KWin::Options::electricBorderTilingChanged()
libkwin.so.6:KWin::Options::setCommandInactiveTitlebar1(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandInactiveTitlebar2(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::setCommandInactiveTitlebar3(KWin::Options::MouseCommand)
libkwin.so.6:KWin::Options::nextFocusPrefersMouseChanged()
libkwin.so.6:KWin::Options::setElectricBorderCornerRatio(float)
libkwin.so.6:KWin::Options::setOperationTitlebarDblClick(KWin::Options::WindowOperation)
libkwin.so.6:KWin::Options::xwaylandMaxCrashCountChanged()
libkwin.so.6:KWin::Options::commandActiveTitlebar1Changed()
libkwin.so.6:KWin::Options::commandActiveTitlebar2Changed()
libkwin.so.6:KWin::Options::commandActiveTitlebar3Changed()
libkwin.so.6:KWin::Options::electricBorderMaximizeChanged()
libkwin.so.6:KWin::Options::focusPolicyIsResonableChanged()
libkwin.so.6:KWin::Options::setBorderlessMaximizedWindows(bool)
libkwin.so.6:KWin::Options::activationDesktopPolicyChanged()
libkwin.so.6:KWin::Options::setOperationMaxButtonLeftClick(KWin::Options::WindowOperation)
libkwin.so.6:KWin::Options::snapOnlyWhenOverlappingChanged()
libkwin.so.6:KWin::Options::windowsBlockCompositingChanged()
libkwin.so.6:KWin::Options::xwaylandEavesdropsMouseChanged()
libkwin.so.6:KWin::Options::commandInactiveTitlebar1Changed()
libkwin.so.6:KWin::Options::commandInactiveTitlebar2Changed()
libkwin.so.6:KWin::Options::commandInactiveTitlebar3Changed()
libkwin.so.6:KWin::Options::setFocusStealingPreventionLevel(int)
libkwin.so.6:KWin::Options::setGlStrictBindingFollowsDriver(bool)
libkwin.so.6:KWin::Options::setOperationMaxButtonRightClick(KWin::Options::WindowOperation)
libkwin.so.6:KWin::Options::electricBorderCornerRatioChanged()
libkwin.so.6:KWin::Options::operationTitlebarDblClickChanged()
libkwin.so.6:KWin::Options::setHideUtilityWindowsForInactive(bool)
libkwin.so.6:KWin::Options::setOperationMaxButtonMiddleClick(KWin::Options::WindowOperation)
libkwin.so.6:KWin::Options::borderlessMaximizedWindowsChanged()
libkwin.so.6:KWin::Options::operationMaxButtonLeftClickChanged()
libkwin.so.6:KWin::Options::focusStealingPreventionLevelChanged()
libkwin.so.6:KWin::Options::glStrictBindingFollowsDriverChanged()
libkwin.so.6:KWin::Options::operationMaxButtonRightClickChanged()
libkwin.so.6:KWin::Options::hideUtilityWindowsForInactiveChanged()
libkwin.so.6:KWin::Options::operationMaxButtonMiddleClickChanged()
libkwin.so.6:KWin::Options::Options(QObject*)
libkwin.so.6:KWin::Options::Options(QObject*)
libkwin.so.6:KWin::Options::~Options()
libkwin.so.6:KWin::Options::~Options()
libkwin.so.6:KWin::Options::~Options()
libkwin.so.6:KWin::Outline::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Outline::qt_metacast(char const*)
libkwin.so.6:KWin::Outline::setGeometry(QRect const&)
libkwin.so.6:KWin::Outline::createHelper()
libkwin.so.6:KWin::Outline::activeChanged()
libkwin.so.6:KWin::Outline::geometryChanged()
libkwin.so.6:KWin::Outline::compositingChanged()
libkwin.so.6:KWin::Outline::unifiedGeometryChanged()
libkwin.so.6:KWin::Outline::setVisualParentGeometry(QRect const&)
libkwin.so.6:KWin::Outline::visualParentGeometryChanged()
libkwin.so.6:KWin::Outline::hide()
libkwin.so.6:KWin::Outline::show(QRect const&)
libkwin.so.6:KWin::Outline::show(QRect const&, QRect const&)
libkwin.so.6:KWin::Outline::show()
libkwin.so.6:KWin::Outline::Outline()
libkwin.so.6:KWin::Outline::Outline()
libkwin.so.6:KWin::Outline::~Outline()
libkwin.so.6:KWin::Outline::~Outline()
libkwin.so.6:KWin::Outline::~Outline()
libkwin.so.6:KWin::RamFile::cleanup()
libkwin.so.6:KWin::RamFile::RamFile(KWin::RamFile&&)
libkwin.so.6:KWin::RamFile::RamFile(char const*, void const*, int, QFlags<KWin::RamFile::Flag>)
libkwin.so.6:KWin::RamFile::RamFile(KWin::RamFile&&)
libkwin.so.6:KWin::RamFile::RamFile(char const*, void const*, int, QFlags<KWin::RamFile::Flag>)
libkwin.so.6:KWin::RamFile::~RamFile()
libkwin.so.6:KWin::RamFile::~RamFile()
libkwin.so.6:KWin::RamFile::operator=(KWin::RamFile&&)
libkwin.so.6:KWin::Session::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Session::qt_metacast(char const*)
libkwin.so.6:KWin::Session::devicePaused(unsigned long)
libkwin.so.6:KWin::Session::activeChanged(bool)
libkwin.so.6:KWin::Session::deviceResumed(unsigned long)
libkwin.so.6:KWin::Session::awoke()
libkwin.so.6:KWin::Session::create(KWin::Session::Type)
libkwin.so.6:KWin::Session::create()
libkwin.so.6:KWin::Version::parseString(QByteArrayView)
libkwin.so.6:KWin::Version::Version(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::Version::Version(unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::Wayland::WaylandBackend::initialize()
libkwin.so.6:KWin::Wayland::WaylandBackend::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Wayland::WaylandBackend::qt_metacast(char const*)
libkwin.so.6:KWin::Wayland::WaylandBackend::createOutput(QString const&, QSize const&, double)
libkwin.so.6:KWin::Wayland::WaylandBackend::importBuffer(KWin::GraphicsBuffer*)
libkwin.so.6:KWin::Wayland::WaylandBackend::createOutputs()
libkwin.so.6:KWin::Wayland::WaylandBackend::setEglDisplay(std::unique_ptr<KWin::EglDisplay, std::default_delete<KWin::EglDisplay> >&&)
libkwin.so.6:KWin::Wayland::WaylandBackend::destroyOutputs()
libkwin.so.6:KWin::Wayland::WaylandBackend::togglePointerLock()
libkwin.so.6:KWin::Wayland::WaylandBackend::createInputBackend()
libkwin.so.6:KWin::Wayland::WaylandBackend::pointerLockChanged(bool)
libkwin.so.6:KWin::Wayland::WaylandBackend::createOpenGLBackend()
libkwin.so.6:KWin::Wayland::WaylandBackend::createVirtualOutput(QString const&, QSize const&, double)
libkwin.so.6:KWin::Wayland::WaylandBackend::removeVirtualOutput(KWin::Output*)
libkwin.so.6:KWin::Wayland::WaylandBackend::supportsPointerLock()
libkwin.so.6:KWin::Wayland::WaylandBackend::createQPainterBackend()
libkwin.so.6:KWin::Wayland::WaylandBackend::WaylandBackend(KWin::Wayland::WaylandBackendOptions const&, QObject*)
libkwin.so.6:KWin::Wayland::WaylandBackend::WaylandBackend(KWin::Wayland::WaylandBackendOptions const&, QObject*)
libkwin.so.6:KWin::Wayland::WaylandBackend::~WaylandBackend()
libkwin.so.6:KWin::Wayland::WaylandBackend::~WaylandBackend()
libkwin.so.6:KWin::Wayland::WaylandBackend::~WaylandBackend()
libkwin.so.6:KWin::ColorLUT::ColorLUT(std::shared_ptr<KWin::ColorTransformation> const&, unsigned long)
libkwin.so.6:KWin::ColorLUT::ColorLUT(std::shared_ptr<KWin::ColorTransformation> const&, unsigned long)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::IntUniform, int)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::Mat3Uniform, QGenericMatrix<3, 3, float> const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::Mat4Uniform, QMatrix4x4 const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::Vec2Uniform, QVector2D const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::Vec3Uniform, QVector3D const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::Vec4Uniform, QVector4D const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::ColorUniform, QColor const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::ColorUniform, QVector4D const&)
libkwin.so.6:KWin::GLShader::setUniform(KWin::GLShader::FloatUniform, float)
libkwin.so.6:KWin::GLShader::setUniform(char const*, QMatrix4x4 const&)
libkwin.so.6:KWin::GLShader::setUniform(char const*, QGenericMatrix<3, 3, float> const&)
libkwin.so.6:KWin::GLShader::setUniform(char const*, QColor const&)
libkwin.so.6:KWin::GLShader::setUniform(char const*, QVector2D const&)
libkwin.so.6:KWin::GLShader::setUniform(char const*, QVector3D const&)
libkwin.so.6:KWin::GLShader::setUniform(char const*, QVector4D const&)
libkwin.so.6:KWin::GLShader::setUniform(char const*, float)
libkwin.so.6:KWin::GLShader::setUniform(char const*, int)
libkwin.so.6:KWin::GLShader::setUniform(int, QMatrix4x4 const&)
libkwin.so.6:KWin::GLShader::setUniform(int, QGenericMatrix<3, 3, float> const&)
libkwin.so.6:KWin::GLShader::setUniform(int, QColor const&)
libkwin.so.6:KWin::GLShader::setUniform(int, QVector2D const&)
libkwin.so.6:KWin::GLShader::setUniform(int, QVector3D const&)
libkwin.so.6:KWin::GLShader::setUniform(int, QVector4D const&)
libkwin.so.6:KWin::GLShader::setUniform(int, float)
libkwin.so.6:KWin::GLShader::setUniform(int, int)
libkwin.so.6:KWin::GLShader::setUniform(int, int, int, int)
libkwin.so.6:KWin::GLShader::setAttribute(char const*, float)
libkwin.so.6:KWin::GLShader::loadFromFiles(QString const&, QString const&)
libkwin.so.6:KWin::GLShader::uniformLocation(char const*)
libkwin.so.6:KWin::GLShader::resolveLocations()
libkwin.so.6:KWin::GLShader::attributeLocation(char const*)
libkwin.so.6:KWin::GLShader::getUniformMatrix4x4(char const*)
libkwin.so.6:KWin::GLShader::bindFragDataLocation(char const*, int)
libkwin.so.6:KWin::GLShader::bindAttributeLocation(char const*, int)
libkwin.so.6:KWin::GLShader::setColorspaceUniforms(KWin::ColorDescription const&, KWin::ColorDescription const&)
libkwin.so.6:KWin::GLShader::setColorspaceUniformsToSRGB(KWin::ColorDescription const&)
libkwin.so.6:KWin::GLShader::setColorspaceUniformsFromSRGB(KWin::ColorDescription const&)
libkwin.so.6:KWin::GLShader::bind()
libkwin.so.6:KWin::GLShader::link()
libkwin.so.6:KWin::GLShader::load(QByteArray const&, QByteArray const&)
libkwin.so.6:KWin::GLShader::unbind()
libkwin.so.6:KWin::GLShader::GLShader(QString const&, QString const&, unsigned int)
libkwin.so.6:KWin::GLShader::GLShader(unsigned int)
libkwin.so.6:KWin::GLShader::GLShader(QString const&, QString const&, unsigned int)
libkwin.so.6:KWin::GLShader::GLShader(unsigned int)
libkwin.so.6:KWin::GLShader::~GLShader()
libkwin.so.6:KWin::GLShader::~GLShader()
libkwin.so.6:KWin::KeyEvent::KeyEvent(QEvent::Type, Qt::Key, QFlags<Qt::KeyboardModifier>, unsigned int, unsigned int, QString const&, bool, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::KeyEvent::KeyEvent(QEvent::Type, Qt::Key, QFlags<Qt::KeyboardModifier>, unsigned int, unsigned int, QString const&, bool, std::chrono::duration<long, std::ratio<1l, 1000000l> >, KWin::InputDevice*)
libkwin.so.6:KWin::LibInput::Connection::deactivate()
libkwin.so.6:KWin::LibInput::Connection::eventsRead()
libkwin.so.6:KWin::LibInput::Connection::deviceAdded(KWin::LibInput::Device*)
libkwin.so.6:KWin::LibInput::Connection::handleEvent()
libkwin.so.6:KWin::LibInput::Connection::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LibInput::Connection::qt_metacast(char const*)
libkwin.so.6:KWin::LibInput::Connection::deviceRemoved(KWin::LibInput::Device*)
libkwin.so.6:KWin::LibInput::Connection::processEvents()
libkwin.so.6:KWin::LibInput::Connection::updateScreens()
libkwin.so.6:KWin::LibInput::Connection::applyDeviceConfig(KWin::LibInput::Device*)
libkwin.so.6:KWin::LibInput::Connection::applyScreenToDevice(KWin::LibInput::Device*)
libkwin.so.6:KWin::LibInput::Connection::slotKGlobalSettingsNotifyChange(int, int)
libkwin.so.6:KWin::LibInput::Connection::setup()
libkwin.so.6:KWin::LibInput::Connection::create(KWin::Session*)
libkwin.so.6:KWin::LibInput::Connection::doSetup()
libkwin.so.6:KWin::LibInput::Connection::Connection(std::unique_ptr<KWin::LibInput::Context, std::default_delete<KWin::LibInput::Context> >&&)
libkwin.so.6:KWin::LibInput::Connection::Connection(std::unique_ptr<KWin::LibInput::Context, std::default_delete<KWin::LibInput::Context> >&&)
libkwin.so.6:KWin::LibInput::Connection::~Connection()
libkwin.so.6:KWin::LibInput::Connection::~Connection()
libkwin.so.6:KWin::LibInput::Connection::~Connection()
libkwin.so.6:KWin::LibInput::Device::setEnabled(bool)
libkwin.so.6:KWin::LibInput::Device::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::LibInput::Device::qt_metacast(char const*)
libkwin.so.6:KWin::LibInput::Device::setLeftHanded(bool)
libkwin.so.6:KWin::LibInput::Device::setOutputArea(QRectF const&)
libkwin.so.6:KWin::LibInput::Device::setOutputName(QString const&)
libkwin.so.6:KWin::LibInput::Device::setTapAndDrag(bool)
libkwin.so.6:KWin::LibInput::Device::setTapToClick(bool)
libkwin.so.6:KWin::LibInput::Device::enabledChanged()
libkwin.so.6:KWin::LibInput::Device::setClickMethod(bool, libinput_config_click_method)
libkwin.so.6:KWin::LibInput::Device::setOrientation(Qt::ScreenOrientation)
libkwin.so.6:KWin::LibInput::Device::setTapDragLock(bool)
libkwin.so.6:KWin::LibInput::Device::setScrollButton(unsigned int)
libkwin.so.6:KWin::LibInput::Device::setScrollFactor(double)
libkwin.so.6:KWin::LibInput::Device::setScrollMethod(bool, libinput_config_scroll_method)
libkwin.so.6:KWin::LibInput::Device::setNaturalScroll(bool)
libkwin.so.6:KWin::LibInput::Device::leftHandedChanged()
libkwin.so.6:KWin::LibInput::Device::loadConfiguration()
libkwin.so.6:KWin::LibInput::Device::outputAreaChanged()
libkwin.so.6:KWin::LibInput::Device::outputNameChanged()
libkwin.so.6:KWin::LibInput::Device::setMapToWorkspace(bool)
libkwin.so.6:KWin::LibInput::Device::tapAndDragChanged()
libkwin.so.6:KWin::LibInput::Device::tapToClickChanged()
libkwin.so.6:KWin::LibInput::Device::clickMethodChanged()
libkwin.so.6:KWin::LibInput::Device::orientationChanged()
libkwin.so.6:KWin::LibInput::Device::setLmrTapButtonMap(bool)
libkwin.so.6:KWin::LibInput::Device::setMiddleEmulation(bool)
libkwin.so.6:KWin::LibInput::Device::tapDragLockChanged()
libkwin.so.6:KWin::LibInput::Device::scrollButtonChanged()
libkwin.so.6:KWin::LibInput::Device::scrollFactorChanged()
libkwin.so.6:KWin::LibInput::Device::scrollMethodChanged()
libkwin.so.6:KWin::LibInput::Device::tapButtonMapChanged()
libkwin.so.6:KWin::LibInput::Device::naturalScrollChanged()
libkwin.so.6:KWin::LibInput::Device::setCalibrationMatrix(QMatrix4x4 const&)
libkwin.so.6:KWin::LibInput::Device::mapToWorkspaceChanged()
libkwin.so.6:KWin::LibInput::Device::setDisableWhileTyping(bool)
libkwin.so.6:KWin::LibInput::Device::middleEmulationChanged()
libkwin.so.6:KWin::LibInput::Device::setPointerAcceleration(double)
libkwin.so.6:KWin::LibInput::Device::calibrationMatrixChanged()
libkwin.so.6:KWin::LibInput::Device::disableWhileTypingChanged()
libkwin.so.6:KWin::LibInput::Device::pointerAccelerationChanged()
libkwin.so.6:KWin::LibInput::Device::setPointerAccelerationProfile(bool, libinput_config_accel_profile)
libkwin.so.6:KWin::LibInput::Device::pointerAccelerationProfileChanged()
libkwin.so.6:KWin::LibInput::Device::get(libinput_device*)
libkwin.so.6:KWin::LibInput::Device::setLeds(QFlags<KWin::LED>)
libkwin.so.6:KWin::LibInput::Device::setOutput(KWin::Output*)
libkwin.so.6:KWin::LibInput::Device::Device(libinput_device*, QObject*)
libkwin.so.6:KWin::LibInput::Device::Device(libinput_device*, QObject*)
libkwin.so.6:KWin::LibInput::Device::~Device()
libkwin.so.6:KWin::LibInput::Device::~Device()
libkwin.so.6:KWin::LibInput::Device::~Device()
libkwin.so.6:KWin::RootItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::RootItem::qt_metacast(char const*)
libkwin.so.6:KWin::RootItem::RootItem(KWin::Scene*)
libkwin.so.6:KWin::RootItem::RootItem(KWin::Scene*)
libkwin.so.6:KWin::RuleBook::discardUsed(KWin::Window*, bool)
libkwin.so.6:KWin::RuleBook::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::RuleBook::qt_metacast(char const*)
libkwin.so.6:KWin::RuleBook::requestDiskStorage()
libkwin.so.6:KWin::RuleBook::setUpdatesDisabled(bool)
libkwin.so.6:KWin::RuleBook::edit(KWin::Window*, bool)
libkwin.so.6:KWin::RuleBook::load()
libkwin.so.6:KWin::RuleBook::save()
libkwin.so.6:KWin::RuleBook::deleteAll()
libkwin.so.6:KWin::RuleBook::setConfig(QExplicitlySharedDataPointer<KSharedConfig> const&)
libkwin.so.6:KWin::RuleBook::RuleBook()
libkwin.so.6:KWin::RuleBook::RuleBook()
libkwin.so.6:KWin::RuleBook::~RuleBook()
libkwin.so.6:KWin::RuleBook::~RuleBook()
libkwin.so.6:KWin::RuleBook::~RuleBook()
libkwin.so.6:KWin::TimeLine::setElapsed(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::TimeLine::setDuration(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::TimeLine::setDirection(KWin::TimeLine::Direction)
libkwin.so.6:KWin::TimeLine::setEasingCurve(QEasingCurve::Type)
libkwin.so.6:KWin::TimeLine::setEasingCurve(QEasingCurve const&)
libkwin.so.6:KWin::TimeLine::toggleDirection()
libkwin.so.6:KWin::TimeLine::setSourceRedirectMode(KWin::TimeLine::RedirectMode)
libkwin.so.6:KWin::TimeLine::setTargetRedirectMode(KWin::TimeLine::RedirectMode)
libkwin.so.6:KWin::TimeLine::reset()
libkwin.so.6:KWin::TimeLine::advance(std::chrono::duration<long, std::ratio<1l, 1000l> >)
libkwin.so.6:KWin::TimeLine::TimeLine(std::chrono::duration<long, std::ratio<1l, 1000l> >, KWin::TimeLine::Direction)
libkwin.so.6:KWin::TimeLine::TimeLine(KWin::TimeLine const&)
libkwin.so.6:KWin::TimeLine::TimeLine(std::chrono::duration<long, std::ratio<1l, 1000l> >, KWin::TimeLine::Direction)
libkwin.so.6:KWin::TimeLine::TimeLine(KWin::TimeLine const&)
libkwin.so.6:KWin::TimeLine::~TimeLine()
libkwin.so.6:KWin::TimeLine::~TimeLine()
libkwin.so.6:KWin::TimeLine::operator=(KWin::TimeLine const&)
libkwin.so.6:KWin::DrmDevice::openWithAuthentication(QString const&, int)
libkwin.so.6:KWin::DrmDevice::open(QString const&)
libkwin.so.6:KWin::DrmDevice::DrmDevice(QString const&, unsigned long, KWin::FileDescriptor&&, gbm_device*)
libkwin.so.6:KWin::DrmDevice::DrmDevice(QString const&, unsigned long, KWin::FileDescriptor&&, gbm_device*)
libkwin.so.6:KWin::DrmDevice::~DrmDevice()
libkwin.so.6:KWin::DrmDevice::~DrmDevice()
libkwin.so.6:KWin::DrmOutput::leaseEnded()
libkwin.so.6:KWin::DrmOutput::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::DrmOutput::qt_metacast(char const*)
libkwin.so.6:KWin::DrmOutput::setDpmsMode(KWin::Output::DpmsMode)
libkwin.so.6:KWin::DrmOutput::queueChanges(std::shared_ptr<KWin::OutputChangeSet> const&)
libkwin.so.6:KWin::DrmOutput::setDrmDpmsMode(KWin::Output::DpmsMode)
libkwin.so.6:KWin::DrmOutput::updateDpmsMode(KWin::Output::DpmsMode)
libkwin.so.6:KWin::DrmOutput::addLeaseObjects(QList<unsigned int>&)
libkwin.so.6:KWin::DrmOutput::setChannelFactors(QVector3D const&)
libkwin.so.6:KWin::DrmOutput::updateCursorLayer()
libkwin.so.6:KWin::DrmOutput::updateInformation()
libkwin.so.6:KWin::DrmOutput::applyQueuedChanges(std::shared_ptr<KWin::OutputChangeSet> const&)
libkwin.so.6:KWin::DrmOutput::doSetChannelFactors(QVector3D const&)
libkwin.so.6:KWin::DrmOutput::revertQueuedChanges()
libkwin.so.6:KWin::DrmOutput::updateConnectorProperties()
libkwin.so.6:KWin::DrmOutput::leased(KWin::DrmLease*)
libkwin.so.6:KWin::DrmOutput::present(std::shared_ptr<KWin::OutputFrame> const&)
libkwin.so.6:KWin::DrmOutput::DrmOutput(std::shared_ptr<KWin::DrmConnector> const&)
libkwin.so.6:KWin::DrmOutput::DrmOutput(std::shared_ptr<KWin::DrmConnector> const&)
libkwin.so.6:KWin::DrmOutput::~DrmOutput()
libkwin.so.6:KWin::DrmOutput::~DrmOutput()
libkwin.so.6:KWin::DrmOutput::~DrmOutput()
libkwin.so.6:KWin::GLTexture::setSwizzle(unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::GLTexture::setWrapMode(unsigned int)
libkwin.so.6:KWin::GLTexture::generateMipmaps()
libkwin.so.6:KWin::GLTexture::supportsSwizzle()
libkwin.so.6:KWin::GLTexture::supportsFormatRG()
libkwin.so.6:KWin::GLTexture::setContentTransform(KWin::OutputTransform)
libkwin.so.6:KWin::GLTexture::createNonOwningWrapper(unsigned int, unsigned int, QSize const&)
libkwin.so.6:KWin::GLTexture::bind()
libkwin.so.6:KWin::GLTexture::clear()
libkwin.so.6:KWin::GLTexture::create()
libkwin.so.6:KWin::GLTexture::render(QRectF const&, QRegion const&, QSizeF const&, bool)
libkwin.so.6:KWin::GLTexture::render(QSizeF const&)
libkwin.so.6:KWin::GLTexture::render(QRegion const&, QSizeF const&, bool)
libkwin.so.6:KWin::GLTexture::unbind()
libkwin.so.6:KWin::GLTexture::update(QImage const&, QPoint const&, QRect const&)
libkwin.so.6:KWin::GLTexture::upload(QImage const&)
libkwin.so.6:KWin::GLTexture::upload(QPixmap const&)
libkwin.so.6:KWin::GLTexture::setSize(QSize const&)
libkwin.so.6:KWin::GLTexture::toImage()
libkwin.so.6:KWin::GLTexture::allocate(unsigned int, QSize const&, int)
libkwin.so.6:KWin::GLTexture::onDamage()
libkwin.so.6:KWin::GLTexture::setDirty()
libkwin.so.6:KWin::GLTexture::setFilter(unsigned int)
libkwin.so.6:KWin::GLTexture::GLTexture(unsigned int)
libkwin.so.6:KWin::GLTexture::GLTexture(unsigned int, unsigned int, unsigned int, QSize const&, int, bool, KWin::OutputTransform)
libkwin.so.6:KWin::GLTexture::GLTexture(unsigned int)
libkwin.so.6:KWin::GLTexture::GLTexture(unsigned int, unsigned int, unsigned int, QSize const&, int, bool, KWin::OutputTransform)
libkwin.so.6:KWin::GLTexture::~GLTexture()
libkwin.so.6:KWin::GLTexture::~GLTexture()
libkwin.so.6:KWin::GLTexture::~GLTexture()
libkwin.so.6:KWin::ImageItem::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::ImageItem::qt_metacast(char const*)
libkwin.so.6:KWin::ImageItem::setImage(QImage const&)
libkwin.so.6:KWin::ImageItem::ImageItem(KWin::Item*)
libkwin.so.6:KWin::ImageItem::ImageItem(KWin::Item*)
libkwin.so.6:KWin::PaintData::setRotationAxis(Qt::Axis)
libkwin.so.6:KWin::PaintData::setRotationAxis(QVector3D const&)
libkwin.so.6:KWin::PaintData::setXTranslation(double)
libkwin.so.6:KWin::PaintData::setYTranslation(double)
libkwin.so.6:KWin::PaintData::setZTranslation(double)
libkwin.so.6:KWin::PaintData::setRotationAngle(double)
libkwin.so.6:KWin::PaintData::setRotationOrigin(QVector3D const&)
libkwin.so.6:KWin::PaintData::setScale(QVector2D const&)
libkwin.so.6:KWin::PaintData::setScale(QVector3D const&)
libkwin.so.6:KWin::PaintData::setXScale(double)
libkwin.so.6:KWin::PaintData::setYScale(double)
libkwin.so.6:KWin::PaintData::setZScale(double)
libkwin.so.6:KWin::PaintData::translate(QVector3D const&)
libkwin.so.6:KWin::PaintData::translate(double, double, double)
libkwin.so.6:KWin::PaintData::PaintData()
libkwin.so.6:KWin::PaintData::PaintData()
libkwin.so.6:KWin::PaintData::~PaintData()
libkwin.so.6:KWin::PaintData::~PaintData()
libkwin.so.6:KWin::PaintData::~PaintData()
libkwin.so.6:KWin::Placement::placeSmart(KWin::Window*, QRectF const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeDialog(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeUtility(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeAtRandom(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeCascaded(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeCentered(KWin::Window*, QRectF const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::cascadeDesktop()
libkwin.so.6:KWin::Placement::placeTransient(KWin::Window*)
libkwin.so.6:KWin::Placement::policyToString(KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeMaximizing(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeUnderMouse(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::reinitCascading(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Placement::reinitCascading()
libkwin.so.6:KWin::Placement::unclutterDesktop()
libkwin.so.6:KWin::Placement::cascadeIfCovering(KWin::Window*, QRectF const&)
libkwin.so.6:KWin::Placement::placeOnMainWindow(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeZeroCornered(KWin::Window*, QRect const&, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::placeOnScreenDisplay(KWin::Window*, QRect const&)
libkwin.so.6:KWin::Placement::place(KWin::Window*, QRectF const&)
libkwin.so.6:KWin::Placement::place(KWin::Window*, QRectF const&, KWin::PlacementPolicy, KWin::PlacementPolicy)
libkwin.so.6:KWin::Placement::Placement()
libkwin.so.6:KWin::Placement::Placement()
libkwin.so.6:KWin::Scripting::loadScript(QString const&, QString const&)
libkwin.so.6:KWin::Scripting::runScripts()
libkwin.so.6:KWin::Scripting::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Scripting::qt_metacast(char const*)
libkwin.so.6:KWin::Scripting::unloadScript(QString const&)
libkwin.so.6:KWin::Scripting::scriptDestroyed(QObject*)
libkwin.so.6:KWin::Scripting::queryScriptsToLoad()
libkwin.so.6:KWin::Scripting::slotScriptsQueried()
libkwin.so.6:KWin::Scripting::loadDeclarativeScript(QString const&, QString const&)
libkwin.so.6:KWin::Scripting::actionsForUserActionMenu(KWin::Window*, QMenu*)
libkwin.so.6:KWin::Scripting::init()
libkwin.so.6:KWin::Scripting::start()
libkwin.so.6:KWin::Scripting::create(QObject*)
libkwin.so.6:KWin::Scripting::Scripting(QObject*)
libkwin.so.6:KWin::Scripting::Scripting(QObject*)
libkwin.so.6:KWin::Scripting::~Scripting()
libkwin.so.6:KWin::Scripting::~Scripting()
libkwin.so.6:KWin::Scripting::~Scripting()
libkwin.so.6:KWin::StrutRect::StrutRect(QRect, KWin::StrutArea)
libkwin.so.6:KWin::StrutRect::StrutRect(KWin::StrutRect const&)
libkwin.so.6:KWin::StrutRect::StrutRect(int, int, int, int, KWin::StrutArea)
libkwin.so.6:KWin::StrutRect::StrutRect(QRect, KWin::StrutArea)
libkwin.so.6:KWin::StrutRect::StrutRect(KWin::StrutRect const&)
libkwin.so.6:KWin::StrutRect::StrutRect(int, int, int, int, KWin::StrutArea)
libkwin.so.6:KWin::StrutRect::operator=(KWin::StrutRect const&)
libkwin.so.6:KWin::TileModel::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::TileModel::qt_metacast(char const*)
libkwin.so.6:KWin::TileModel::endInsertTile()
libkwin.so.6:KWin::TileModel::endRemoveTile()
libkwin.so.6:KWin::TileModel::beginInsertTile(KWin::CustomTile*, int)
libkwin.so.6:KWin::TileModel::beginRemoveTile(KWin::CustomTile*)
libkwin.so.6:KWin::TileModel::TileModel(KWin::TileManager*)
libkwin.so.6:KWin::TileModel::TileModel(KWin::TileManager*)
libkwin.so.6:KWin::TileModel::~TileModel()
libkwin.so.6:KWin::TileModel::~TileModel()
libkwin.so.6:KWin::TileModel::~TileModel()
libkwin.so.6:KWin::Workspace::addDeleted(KWin::Window*)
libkwin.so.6:KWin::Workspace::addToStack(KWin::Window*)
libkwin.so.6:KWin::Workspace::cleanupX11()
libkwin.so.6:KWin::Workspace::delayFocus()
libkwin.so.6:KWin::Workspace::gotFocusIn(KWin::Window const*)
libkwin.so.6:KWin::Workspace::groupAdded(KWin::Group*)
libkwin.so.6:KWin::Workspace::focusToNull()
libkwin.so.6:KWin::Workspace::lowerWindow(KWin::Window*, bool)
libkwin.so.6:KWin::Workspace::outputAdded(KWin::Output*)
libkwin.so.6:KWin::Workspace::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::Workspace::qt_metacast(char const*)
libkwin.so.6:KWin::Workspace::raiseWindow(KWin::Window*, bool)
libkwin.so.6:KWin::Workspace::reconfigure()
libkwin.so.6:KWin::Workspace::tileManager(KWin::Output*)
libkwin.so.6:KWin::Workspace::unconstrain(KWin::Window*, KWin::Window*)
libkwin.so.6:KWin::Workspace::windowAdded(KWin::Window*)
libkwin.so.6:KWin::Workspace::addUnmanaged(KWin::X11Window*)
libkwin.so.6:KWin::Workspace::addX11Window(KWin::X11Window*)
libkwin.so.6:KWin::Workspace::removeWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::requestFocus(KWin::Window*, bool)
libkwin.so.6:KWin::Workspace::restoreFocus()
libkwin.so.6:KWin::Workspace::switchWindow(KWin::Workspace::Direction)
libkwin.so.6:KWin::Workspace::switchWindow(KWin::Window*, KWin::Workspace::Direction, QPoint, KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::takeActivity(KWin::Window*, QFlags<KWin::Workspace::ActivityFlag>)
libkwin.so.6:KWin::Workspace::updateTabbox()
libkwin.so.6:KWin::Workspace::configChanged()
libkwin.so.6:KWin::Workspace::forEachClient(std::function<void (KWin::X11Window*)>)
libkwin.so.6:KWin::Workspace::forEachWindow(std::function<void (KWin::Window*)>)
libkwin.so.6:KWin::Workspace::initShortcuts()
libkwin.so.6:KWin::Workspace::initializeX11()
libkwin.so.6:KWin::Workspace::outputRemoved(KWin::Output*)
libkwin.so.6:KWin::Workspace::removeDeleted(KWin::Window*)
libkwin.so.6:KWin::Workspace::updateOutputs(QList<KWin::Output*> const&)
libkwin.so.6:KWin::Workspace::windowRemoved(KWin::Window*)
libkwin.so.6:KWin::Workspace::activateWindow(KWin::Window*, bool)
libkwin.so.6:KWin::Workspace::deletedRemoved(KWin::Window*)
libkwin.so.6:KWin::Workspace::desktopResized()
libkwin.so.6:KWin::Workspace::outputsChanged()
libkwin.so.6:KWin::Workspace::setOutputOrder(QList<KWin::Output*> const&)
libkwin.so.6:KWin::Workspace::showWindowMenu(QRect const&, KWin::Window*)
libkwin.so.6:KWin::Workspace::slotKillWindow()
libkwin.so.6:KWin::Workspace::slotWindowMove()
libkwin.so.6:KWin::Workspace::switchToOutput(KWin::Output*)
libkwin.so.6:KWin::Workspace::workspaceEvent(xcb_generic_event_t*)
libkwin.so.6:KWin::Workspace::checkTransients(unsigned int)
libkwin.so.6:KWin::Workspace::createUnmanaged(unsigned int)
libkwin.so.6:KWin::Workspace::createX11Window(unsigned int, bool)
libkwin.so.6:KWin::Workspace::geometryChanged()
libkwin.so.6:KWin::Workspace::quickTileWindow(QFlags<KWin::QuickTileFlag>)
libkwin.so.6:KWin::Workspace::removeFromStack(KWin::Window*)
libkwin.so.6:KWin::Workspace::removeUnmanaged(KWin::X11Window*)
libkwin.so.6:KWin::Workspace::removeX11Window(KWin::X11Window*)
libkwin.so.6:KWin::Workspace::setActiveOutput(KWin::Output*)
libkwin.so.6:KWin::Workspace::setActiveOutput(QPointF const&)
libkwin.so.6:KWin::Workspace::setActiveWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::slotReconfigure()
libkwin.so.6:KWin::Workspace::slotWindowAbove()
libkwin.so.6:KWin::Workspace::slotWindowBelow()
libkwin.so.6:KWin::Workspace::slotWindowClose()
libkwin.so.6:KWin::Workspace::slotWindowLower()
libkwin.so.6:KWin::Workspace::slotWindowRaise()
libkwin.so.6:KWin::Workspace::slotWindowShade()
libkwin.so.6:KWin::Workspace::windowActivated(KWin::Window*)
libkwin.so.6:KWin::Workspace::aboutToRearrange()
libkwin.so.6:KWin::Workspace::addWaylandWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::cancelDelayFocus()
libkwin.so.6:KWin::Workspace::closeActivePopup()
libkwin.so.6:KWin::Workspace::createDpmsFilter()
libkwin.so.6:KWin::Workspace::propagateWindows(bool)
libkwin.so.6:KWin::Workspace::slotDesktopAdded(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::slotReloadConfig()
libkwin.so.6:KWin::Workspace::slotWindowCenter()
libkwin.so.6:KWin::Workspace::slotWindowMoveUp()
libkwin.so.6:KWin::Workspace::slotWindowResize()
libkwin.so.6:KWin::Workspace::addInternalWindow(KWin::InternalWindow*)
libkwin.so.6:KWin::Workspace::requestDelayFocus(KWin::Window*)
libkwin.so.6:KWin::Workspace::scheduleRearrange()
libkwin.so.6:KWin::Workspace::setInitialDesktop(int)
libkwin.so.6:KWin::Workspace::setShouldGetFocus(KWin::Window*)
libkwin.so.6:KWin::Workspace::setShowingDesktop(bool, bool)
libkwin.so.6:KWin::Workspace::updateToolWindows(bool)
libkwin.so.6:KWin::Workspace::activateNextWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::lowerWindowRequest(KWin::Window*)
libkwin.so.6:KWin::Workspace::lowerWindowRequest(KWin::X11Window*, NET::RequestSource, unsigned int)
libkwin.so.6:KWin::Workspace::outputOrderChanged()
libkwin.so.6:KWin::Workspace::raiseOrLowerWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::raiseWindowRequest(KWin::Window*, NET::RequestSource, unsigned int)
libkwin.so.6:KWin::Workspace::saveOldScreenSizes()
libkwin.so.6:KWin::Workspace::sendWindowToOutput(KWin::Window*, KWin::Output*)
libkwin.so.6:KWin::Workspace::slotDesktopRemoved(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::slotSwitchToScreen(KWin::Output*)
libkwin.so.6:KWin::Workspace::slotWindowMaximize()
libkwin.so.6:KWin::Workspace::slotWindowMinimize()
libkwin.so.6:KWin::Workspace::slotWindowMoveDown()
libkwin.so.6:KWin::Workspace::slotWindowMoveLeft()
libkwin.so.6:KWin::Workspace::slotWindowNoBorder()
libkwin.so.6:KWin::Workspace::slotWindowToScreen(KWin::Output*)
libkwin.so.6:KWin::Workspace::removeWaylandWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::setMoveResizeWindow(KWin::Window*)
libkwin.so.6:KWin::Workspace::setupWindowShortcut(KWin::Window*)
libkwin.so.6:KWin::Workspace::showApplicationMenu(QRect const&, KWin::Window*, int)
libkwin.so.6:KWin::Workspace::slotWindowMoveRight()
libkwin.so.6:KWin::Workspace::slotWindowToDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::updateStackingOrder(bool)
libkwin.so.6:KWin::Workspace::windowToNextDesktop(KWin::Window*)
libkwin.so.6:KWin::Workspace::blockStackingUpdates(bool)
libkwin.so.6:KWin::Workspace::removeInternalWindow(KWin::InternalWindow*)
libkwin.so.6:KWin::Workspace::sendWindowToDesktops(KWin::Window*, QList<KWin::VirtualDesktop*> const&, bool)
libkwin.so.6:KWin::Workspace::slotWindowFullScreen()
libkwin.so.6:KWin::Workspace::slotWindowOperations()
libkwin.so.6:KWin::Workspace::stackingOrderChanged()
libkwin.so.6:KWin::Workspace::updateXStackingOrder()
libkwin.so.6:KWin::Workspace::workspaceInitialized()
libkwin.so.6:KWin::Workspace::currentDesktopChanged(KWin::VirtualDesktop*, KWin::Window*)
libkwin.so.6:KWin::Workspace::fixPositionAfterCrash(unsigned int, xcb_get_geometry_reply_t const*)
libkwin.so.6:KWin::Workspace::setWasUserInteraction()
libkwin.so.6:KWin::Workspace::showingDesktopChanged(bool, bool)
libkwin.so.6:KWin::Workspace::slotToggleShowDesktop()
libkwin.so.6:KWin::Workspace::slotUpdateToolWindows()
libkwin.so.6:KWin::Workspace::slotWindowToDesktopUp()
libkwin.so.6:KWin::Workspace::updateCurrentActivity(QString const&)
libkwin.so.6:KWin::Workspace::windowShortcutUpdated(KWin::Window*)
libkwin.so.6:KWin::Workspace::allowFullClientRaising(KWin::Window const*, unsigned int)
libkwin.so.6:KWin::Workspace::currentActivityChanged()
libkwin.so.6:KWin::Workspace::currentDesktopChanging(KWin::VirtualDesktop*, QPointF, KWin::Window*)
libkwin.so.6:KWin::Workspace::maybeDestroyDpmsFilter()
libkwin.so.6:KWin::Workspace::performWindowOperation(KWin::Window*, KWin::Options::WindowOperation)
libkwin.so.6:KWin::Workspace::selectWmInputEventMask()
libkwin.so.6:KWin::Workspace::setupWindowConnections(KWin::Window*)
libkwin.so.6:KWin::Workspace::slotLowerWindowOpacity()
libkwin.so.6:KWin::Workspace::slotSwitchToLeftScreen()
libkwin.so.6:KWin::Workspace::slotSwitchToNextScreen()
libkwin.so.6:KWin::Workspace::slotSwitchToPrevScreen()
libkwin.so.6:KWin::Workspace::slotWindowRaiseOrLower()
libkwin.so.6:KWin::Workspace::slotWindowToLeftScreen()
libkwin.so.6:KWin::Workspace::slotWindowToNextScreen()
libkwin.so.6:KWin::Workspace::slotWindowToPrevScreen()
libkwin.so.6:KWin::Workspace::windowAttentionChanged(KWin::Window*, bool)
libkwin.so.6:KWin::Workspace::windowMinimizedChanged(KWin::Window*)
libkwin.so.6:KWin::Workspace::getPlacementTrackerHash()
libkwin.so.6:KWin::Workspace::setupWindowShortcutDone(bool)
libkwin.so.6:KWin::Workspace::slotSetupWindowShortcut()
libkwin.so.6:KWin::Workspace::slotSwitchToAboveScreen()
libkwin.so.6:KWin::Workspace::slotSwitchToBelowScreen()
libkwin.so.6:KWin::Workspace::slotSwitchToRightScreen()
libkwin.so.6:KWin::Workspace::slotWindowOnAllDesktops()
libkwin.so.6:KWin::Workspace::slotWindowToAboveScreen()
libkwin.so.6:KWin::Workspace::slotWindowToBelowScreen()
libkwin.so.6:KWin::Workspace::slotWindowToDesktopDown()
libkwin.so.6:KWin::Workspace::slotWindowToDesktopLeft()
libkwin.so.6:KWin::Workspace::slotWindowToNextDesktop()
libkwin.so.6:KWin::Workspace::slotWindowToRightScreen()
libkwin.so.6:KWin::Workspace::windowToPreviousDesktop(KWin::Window*)
libkwin.so.6:KWin::Workspace::applyOutputConfiguration(KWin::OutputConfiguration const&, QList<KWin::Output*> const&)
libkwin.so.6:KWin::Workspace::checkStartupNotification(unsigned int, KStartupInfoId&, KStartupInfoData&)
libkwin.so.6:KWin::Workspace::constrainedStackingOrder()
libkwin.so.6:KWin::Workspace::restackWindowUnderActive(KWin::Window*)
libkwin.so.6:KWin::Workspace::slotWindowExpandVertical()
libkwin.so.6:KWin::Workspace::slotWindowShrinkVertical()
libkwin.so.6:KWin::Workspace::slotWindowToDesktopRight()
libkwin.so.6:KWin::Workspace::slotCurrentDesktopChanged(KWin::VirtualDesktop*, KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::slotIncreaseWindowOpacity()
libkwin.so.6:KWin::Workspace::updateOutputConfiguration()
libkwin.so.6:KWin::Workspace::activateWindowOnNewDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::slotCurrentDesktopChanging(KWin::VirtualDesktop*, QPointF)
libkwin.so.6:KWin::Workspace::slotWindowExpandHorizontal()
libkwin.so.6:KWin::Workspace::slotWindowMaximizeVertical()
libkwin.so.6:KWin::Workspace::slotWindowShrinkHorizontal()
libkwin.so.6:KWin::Workspace::resetUpdateToolWindowsTimer()
libkwin.so.6:KWin::Workspace::restoreSessionStackingOrder(KWin::X11Window*)
libkwin.so.6:KWin::Workspace::slotActivateAttentionWindow()
libkwin.so.6:KWin::Workspace::slotWindowToPreviousDesktop()
libkwin.so.6:KWin::Workspace::updateMinimizedOfTransients(KWin::Window*)
libkwin.so.6:KWin::Workspace::lowerWindowWithinApplication(KWin::Window*)
libkwin.so.6:KWin::Workspace::raiseWindowWithinApplication(KWin::Window*)
libkwin.so.6:KWin::Workspace::slotWindowMaximizeHorizontal()
libkwin.so.6:KWin::Workspace::findWindowToActivateOnDesktop(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::currentDesktopChangingCancelled()
libkwin.so.6:KWin::Workspace::disableGlobalShortcutsForClient(bool)
libkwin.so.6:KWin::Workspace::slotOutputBackendOutputsQueried()
libkwin.so.6:KWin::Workspace::updateOnAllDesktopsOfTransients(KWin::Window*)
libkwin.so.6:KWin::Workspace::slotCurrentDesktopChangingCancelled()
libkwin.so.6:KWin::Workspace::stackScreenEdgesUnderOverrideRedirect()
libkwin.so.6:KWin::Workspace::updateWindowVisibilityOnDesktopChange(KWin::VirtualDesktop*)
libkwin.so.6:KWin::Workspace::init()
libkwin.so.6:KWin::Workspace::restack(KWin::Window*, KWin::Window*, bool)
libkwin.so.6:KWin::Workspace::constrain(KWin::Window*, KWin::Window*)
libkwin.so.6:KWin::Workspace::hasWindow(KWin::Window const*)
libkwin.so.6:KWin::Workspace::rearrange()
libkwin.so.6:KWin::Workspace::Workspace()
libkwin.so.6:KWin::Workspace::Workspace()
libkwin.so.6:KWin::Workspace::~Workspace()
libkwin.so.6:KWin::Workspace::~Workspace()
libkwin.so.6:KWin::Workspace::~Workspace()
libkwin.so.6:KWin::X11Window::checkGroup(KWin::Group*, bool)
libkwin.so.6:KWin::X11Window::cleanupX11()
libkwin.so.6:KWin::X11Window::createItem(KWin::Item*)
libkwin.so.6:KWin::X11Window::doMinimize()
libkwin.so.6:KWin::X11Window::doSetModal()
libkwin.so.6:KWin::X11Window::doSetShade(KWin::ShadeMode)
libkwin.so.6:KWin::X11Window::handleSync()
libkwin.so.6:KWin::X11Window::killWindow()
libkwin.so.6:KWin::X11Window::pingWindow()
libkwin.so.6:KWin::X11Window::setCaption(QString const&, bool)
libkwin.so.6:KWin::X11Window::checkOutput()
libkwin.so.6:KWin::X11Window::closeWindow()
libkwin.so.6:KWin::X11Window::detectShape()
libkwin.so.6:KWin::X11Window::doSetActive()
libkwin.so.6:KWin::X11Window::doSetHidden()
libkwin.so.6:KWin::X11Window::embedClient(unsigned int, unsigned int, unsigned int, unsigned char)
libkwin.so.6:KWin::X11Window::killProcess(bool, unsigned int)
libkwin.so.6:KWin::X11Window::qt_metacall(QMetaObject::Call, int, void**)
libkwin.so.6:KWin::X11Window::qt_metacast(char const*)
libkwin.so.6:KWin::X11Window::setNoBorder(bool)
libkwin.so.6:KWin::X11Window::updateShape()
libkwin.so.6:KWin::X11Window::windowEvent(xcb_generic_event_t*)
libkwin.so.6:KWin::X11Window::addTransient(KWin::Window*)
libkwin.so.6:KWin::X11Window::deleteClient(KWin::X11Window*)
libkwin.so.6:KWin::X11Window::doSetDesktop()
libkwin.so.6:KWin::X11Window::focusInEvent(xcb_focus_in_event_t*)
libkwin.so.6:KWin::X11Window::internalHide()
libkwin.so.6:KWin::X11Window::internalKeep()
libkwin.so.6:KWin::X11Window::internalShow()
libkwin.so.6:KWin::X11Window::setTransient(unsigned int)
libkwin.so.6:KWin::X11Window::shapeChanged()
libkwin.so.6:KWin::X11Window::NETMoveResize(double, double, NET::Direction, unsigned char)
libkwin.so.6:KWin::X11Window::checkNoBorder()
libkwin.so.6:KWin::X11Window::cleanGrouping()
libkwin.so.6:KWin::X11Window::destroyWindow()
libkwin.so.6:KWin::X11Window::focusOutEvent(xcb_focus_in_event_t*)
libkwin.so.6:KWin::X11Window::getMotifHints()
libkwin.so.6:KWin::X11Window::keyPressEvent(unsigned int, unsigned int)
libkwin.so.6:KWin::X11Window::readTransient()
libkwin.so.6:KWin::X11Window::releaseWindow(bool)
libkwin.so.6:KWin::X11Window::restackWindow(unsigned int, int, NET::RequestSource, unsigned int, bool)
libkwin.so.6:KWin::X11Window::setFullScreen(bool)
libkwin.so.6:KWin::X11Window::updateCaption()
libkwin.so.6:KWin::X11Window::updateUrgency()
libkwin.so.6:KWin::X11Window::checkTransient(unsigned int)
libkwin.so.6:KWin::X11Window::detectNoBorder()
libkwin.so.6:KWin::X11Window::doSetKeepAbove()
libkwin.so.6:KWin::X11Window::doSetKeepBelow()
libkwin.so.6:KWin::X11Window::doSetSkipPager()
libkwin.so.6:KWin::X11Window::getSyncCounter()
libkwin.so.6:KWin::X11Window::readActivities(KWin::Xcb::StringProperty&)
libkwin.so.6:KWin::X11Window::updateUserTime(unsigned int)
libkwin.so.6:KWin::X11Window::checkActivities()
libkwin.so.6:KWin::X11Window::fetchIconicName()
libkwin.so.6:KWin::X11Window::mapRequestEvent(xcb_map_request_event_t*)
libkwin.so.6:KWin::X11Window::sendSyncRequest()
libkwin.so.6:KWin::X11Window::showContextHelp()
libkwin.so.6:KWin::X11Window::updateMouseGrab()
libkwin.so.6:KWin::X11Window::applyWindowRules()
libkwin.so.6:KWin::X11Window::blockCompositing()
libkwin.so.6:KWin::X11Window::buttonPressEvent(unsigned int, int, int, int, int, int, int, unsigned int)
libkwin.so.6:KWin::X11Window::checkActiveModal()
libkwin.so.6:KWin::X11Window::configureRequest(int, double, double, double, double, int, bool)
libkwin.so.6:KWin::X11Window::createDecoration()
libkwin.so.6:KWin::X11Window::doSetSkipTaskbar()
libkwin.so.6:KWin::X11Window::enterNotifyEvent(xcb_enter_notify_event_t*)
libkwin.so.6:KWin::X11Window::getResourceClass()
libkwin.so.6:KWin::X11Window::getWmNormalHints()
libkwin.so.6:KWin::X11Window::leaveNotifyEvent(xcb_enter_notify_event_t*)
libkwin.so.6:KWin::X11Window::resizeDecoration()
libkwin.so.6:KWin::X11Window::resizeWithChecks(QRectF const&, double, double, xcb_gravity_t)
libkwin.so.6:KWin::X11Window::setupCompositing()
libkwin.so.6:KWin::X11Window::showOnScreenEdge()
libkwin.so.6:KWin::X11Window::startupIdChanged()
libkwin.so.6:KWin::X11Window::unmapNotifyEvent(xcb_unmap_notify_event_t*)
libkwin.so.6:KWin::X11Window::updateActivities(bool)
libkwin.so.6:KWin::X11Window::updateDecoration(bool, bool)
libkwin.so.6:KWin::X11Window::updateInputShape()
libkwin.so.6:KWin::X11Window::updateVisibility()
libkwin.so.6:KWin::X11Window::GTKShowWindowMenu(double, double)
libkwin.so.6:KWin::X11Window::damageNotifyEvent()
libkwin.so.6:KWin::X11Window::destroyDecoration()
libkwin.so.6:KWin::X11Window::doSetOnActivities(QList<QString> const&)
libkwin.so.6:KWin::X11Window::doSetSkipSwitcher()
libkwin.so.6:KWin::X11Window::finishCompositing()
libkwin.so.6:KWin::X11Window::getWmClientLeader()
libkwin.so.6:KWin::X11Window::getWmOpaqueRegion()
libkwin.so.6:KWin::X11Window::handleSyncTimeout()
libkwin.so.6:KWin::X11Window::motionNotifyEvent(unsigned int, int, int, int, int, int)
libkwin.so.6:KWin::X11Window::sendClientMessage(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
libkwin.so.6:KWin::X11Window::updateInputWindow()
libkwin.so.6:KWin::X11Window::updateWindowRules(QFlags<KWin::Rules::Type>)
libkwin.so.6:KWin::X11Window::buttonReleaseEvent(unsigned int, int, int, int, int, int, int)
libkwin.so.6:KWin::X11Window::clientMessageEvent(xcb_client_message_event_t*)
libkwin.so.6:KWin::X11Window::destroyNotifyEvent(xcb_destroy_notify_event_t*)
libkwin.so.6:KWin::X11Window::discardShapeRegion()
libkwin.so.6:KWin::X11Window::doSetQuickTileMode()
libkwin.so.6:KWin::X11Window::exportMappingState(int)
libkwin.so.6:KWin::X11Window::getWmClientMachine()
libkwin.so.6:KWin::X11Window::moveResizeInternal(QRectF const&, KWin::Window::MoveResizeMode)
libkwin.so.6:KWin::X11Window::readWmClientLeader(KWin::Xcb::Property&)
libkwin.so.6:KWin::X11Window::unblockCompositing()
libkwin.so.6:KWin::X11Window::updateFrameExtents()
libkwin.so.6:KWin::X11Window::updateWindowPixmap()
libkwin.so.6:KWin::X11Window::verifyTransientFor(unsigned int, bool)
libkwin.so.6:KWin::X11Window::NETMoveResizeWindow(int, double, double, double, double)
libkwin.so.6:KWin::X11Window::cancelFocusOutTimer()
libkwin.so.6:KWin::X11Window::discardWindowPixmap()
libkwin.so.6:KWin::X11Window::propertyNotifyEvent(xcb_property_notify_event_t*)
libkwin.so.6:KWin::X11Window::setShortcutInternal()
libkwin.so.6:KWin::X11Window::updateHiddenPreview()
libkwin.so.6:KWin::X11Window::blockGeometryUpdates(bool)
libkwin.so.6:KWin::X11Window::checkGroupTransients()
libkwin.so.6:KWin::X11Window::configureNotifyEvent(xcb_configure_notify_event_t*)
libkwin.so.6:KWin::X11Window::invalidateDecoration()
libkwin.so.6:KWin::X11Window::readShowOnScreenEdge(KWin::Xcb::Property&)
libkwin.so.6:KWin::X11Window::updateAllowedActions(bool)
libkwin.so.6:KWin::X11Window::updateServerGeometry()
libkwin.so.6:KWin::X11Window::allowWindowActivation(unsigned int, bool)
libkwin.so.6:KWin::X11Window::configureRequestEvent(xcb_configure_request_event_t*)
libkwin.so.6:KWin::X11Window::doSetDemandsAttention()
libkwin.so.6:KWin::X11Window::getSkipCloseAnimation()
libkwin.so.6:KWin::X11Window::readTransientProperty(KWin::Xcb::TransientFor&)
libkwin.so.6:KWin::X11Window::removeFromMainClients()
libkwin.so.6:KWin::X11Window::setClientFrameExtents(NETStrut const&)
libkwin.so.6:KWin::X11Window::readSkipCloseAnimation(KWin::Xcb::Property&)
libkwin.so.6:KWin::X11Window::sameAppWindowRoleMatch(KWin::X11Window const*, KWin::X11Window const*, bool)
libkwin.so.6:KWin::X11Window::setBlockingCompositing(bool)
libkwin.so.6:KWin::X11Window::updateShowOnScreenEdge()
libkwin.so.6:KWin::X11Window::belongToSameApplication(KWin::X11Window const*, KWin::X11Window const*, QFlags<KWin::Window::SameApplicationCheck>)
libkwin.so.6:KWin::X11Window::changeClientLeaderGroup(KWin::Group*)
libkwin.so.6:KWin::X11Window::doInteractiveResizeSync(QRectF const&)
libkwin.so.6:KWin::X11Window::establishCommandAllGrab(unsigned char)
libkwin.so.6:KWin::X11Window::doSetHiddenByShowDesktop()
libkwin.so.6:KWin::X11Window::performInteractiveResize()
libkwin.so.6:KWin::X11Window::updateFullscreenMonitors(NETFullscreenMonitors)
libkwin.so.6:KWin::X11Window::establishCommandWindowGrab(unsigned char)
libkwin.so.6:KWin::X11Window::handleXwaylandScaleChanged()
libkwin.so.6:KWin::X11Window::leaveInteractiveMoveResize()
libkwin.so.6:KWin::X11Window::setSessionActivityOverride(bool)
libkwin.so.6:KWin::X11Window::doStartInteractiveMoveResize()
libkwin.so.6:KWin::X11Window::sendSyntheticConfigureNotify()
libkwin.so.6:KWin::X11Window::readApplicationMenuObjectPath(KWin::Xcb::StringProperty&)
libkwin.so.6:KWin::X11Window::checkApplicationMenuObjectPath()
libkwin.so.6:KWin::X11Window::readApplicationMenuServiceName(KWin::Xcb::StringProperty&)
libkwin.so.6:KWin::X11Window::checkApplicationMenuServiceName()
libkwin.so.6:KWin::X11Window::maybeCreateX11DecorationRenderer()
libkwin.so.6:KWin::X11Window::maybeDestroyX11DecorationRenderer()
libkwin.so.6:KWin::X11Window::map()
libkwin.so.6:KWin::X11Window::track(unsigned int)
libkwin.so.6:KWin::X11Window::unmap()
libkwin.so.6:KWin::X11Window::manage(unsigned int, bool)
libkwin.so.6:KWin::X11Window::gotPing(unsigned int)
libkwin.so.6:KWin::X11Window::getIcons()
libkwin.so.6:KWin::X11Window::maximize(KWin::MaximizeMode)
libkwin.so.6:KWin::X11Window::associate()
libkwin.so.6:KWin::X11Window::fetchName()
libkwin.so.6:KWin::X11Window::takeFocus()
libkwin.so.6:KWin::X11Window::wmCommand()
libkwin.so.6:KWin::X11Window::X11Window()
libkwin.so.6:KWin::X11Window::X11Window()
libkwin.so.6:KWin::X11Window::~X11Window()
libkwin.so.6:KWin::X11Window::~X11Window()
libkwin.so.6:KWin::X11Window::~X11Window()
libkwin.so.6:KWin::operator<<(QDebug, KWin::CustomTile const*)
libkwin.so.6:KWin::operator<<(QDebug, KWin::TileManager const*)
libkwin.so.6:KWin::operator<<(QDebug, KWin::Output const*)
libkwin.so.6:KWin::operator<<(QDebug, KWin::Window const*)
libkwin.so.6:KWin::Activities::metaObject() const
libkwin.so.6:KWin::Activities::serviceStatus() const
libkwin.so.6:KWin::ColorLUT3D::xSize() const
libkwin.so.6:KWin::ColorLUT3D::ySize() const
libkwin.so.6:KWin::ColorLUT3D::zSize() const
libkwin.so.6:KWin::Compositor::findOutput(KWin::RenderLoop*) const
libkwin.so.6:KWin::Compositor::metaObject() const
libkwin.so.6:KWin::Compositor::compositingPossible() const
libkwin.so.6:KWin::Compositor::openGLCompositingIsBroken() const
libkwin.so.6:KWin::Compositor::compositingNotPossibleReason() const
libkwin.so.6:KWin::CursorItem::metaObject() const
libkwin.so.6:KWin::CustomTile::metaObject() const
libkwin.so.6:KWin::CustomTile::nextTileAt(Qt::Edge) const
libkwin.so.6:KWin::CustomTile::layoutDirection() const
libkwin.so.6:KWin::Decoration::DecorationBridge::metaObject() const
libkwin.so.6:KWin::Decoration::DecorationBridge::supportInformation() const
libkwin.so.6:KWin::Decoration::DecorationBridge::readTheme() const
libkwin.so.6:KWin::DrmBackend::metaObject() const
libkwin.so.6:KWin::DrmBackend::primaryGpu() const
libkwin.so.6:KWin::DrmBackend::renderBackend() const
libkwin.so.6:KWin::DrmBackend::supportInformation() const
libkwin.so.6:KWin::DrmBackend::supportedCompositors() const
libkwin.so.6:KWin::DrmBackend::sceneEglDisplayObject() const
libkwin.so.6:KWin::DrmBackend::gpus() const
libkwin.so.6:KWin::DrmBackend::findGpu(unsigned long) const
libkwin.so.6:KWin::DrmBackend::outputs() const
libkwin.so.6:KWin::DrmBackend::session() const
libkwin.so.6:KWin::DrmBackend::gpuCount() const
libkwin.so.6:KWin::EglContext::doneCurrent() const
libkwin.so.6:KWin::EglContext::displayObject() const
libkwin.so.6:KWin::EglContext::importDmaBufAsTexture(KWin::DmaBufAttributes const&) const
libkwin.so.6:KWin::EglContext::config() const
libkwin.so.6:KWin::EglContext::handle() const
libkwin.so.6:KWin::EglContext::isValid() const
libkwin.so.6:KWin::EglDisplay::extensions() const
libkwin.so.6:KWin::EglDisplay::renderNode() const
libkwin.so.6:KWin::EglDisplay::createImage(void*, unsigned int, void*, int const*) const
libkwin.so.6:KWin::EglDisplay::destroyImage(void*) const
libkwin.so.6:KWin::EglDisplay::hasExtension(QByteArray const&) const
libkwin.so.6:KWin::EglDisplay::isExternalOnly(unsigned int, unsigned long) const
libkwin.so.6:KWin::EglDisplay::supportsBufferAge() const
libkwin.so.6:KWin::EglDisplay::queryImportFormats() const
libkwin.so.6:KWin::EglDisplay::importDmaBufAsImage(KWin::DmaBufAttributes const&) const
libkwin.so.6:KWin::EglDisplay::importDmaBufAsImage(KWin::DmaBufAttributes const&, int, int, QSize const&) const
libkwin.so.6:KWin::EglDisplay::supportsNativeFence() const
libkwin.so.6:KWin::EglDisplay::allSupportedDrmFormats() const
libkwin.so.6:KWin::EglDisplay::nonExternalOnlySupportedDrmFormats() const
libkwin.so.6:KWin::EglDisplay::handle() const
libkwin.so.6:KWin::GLPlatform::isPanfrost() const
libkwin.so.6:KWin::GLPlatform::glslVersion() const
libkwin.so.6:KWin::GLPlatform::mesaVersion() const
libkwin.so.6:KWin::GLPlatform::isMesaDriver() const
libkwin.so.6:KWin::GLPlatform::isVideoCore4() const
libkwin.so.6:KWin::GLPlatform::isVirtualBox() const
libkwin.so.6:KWin::GLPlatform::driverVersion() const
libkwin.so.6:KWin::GLPlatform::isVideoCore3D() const
libkwin.so.6:KWin::GLPlatform::glVendorString() const
libkwin.so.6:KWin::GLPlatform::isLooseBinding() const
libkwin.so.6:KWin::GLPlatform::glVersionString() const
libkwin.so.6:KWin::GLPlatform::glRendererString() const
libkwin.so.6:KWin::GLPlatform::isVirtualMachine() const
libkwin.so.6:KWin::GLPlatform::platformInterface() const
libkwin.so.6:KWin::GLPlatform::preferBufferSubData() const
libkwin.so.6:KWin::GLPlatform::recommendedCompositor() const
libkwin.so.6:KWin::GLPlatform::glShadingLanguageVersionString() const
libkwin.so.6:KWin::GLPlatform::driver() const
libkwin.so.6:KWin::GLPlatform::isLima() const
libkwin.so.6:KWin::GLPlatform::isIntel() const
libkwin.so.6:KWin::GLPlatform::isVirgl() const
libkwin.so.6:KWin::GLPlatform::isAdreno() const
libkwin.so.6:KWin::GLPlatform::isNvidia() const
libkwin.so.6:KWin::GLPlatform::isRadeon() const
libkwin.so.6:KWin::GLPlatform::isVMware() const
libkwin.so.6:KWin::GLPlatform::chipClass() const
libkwin.so.6:KWin::GLPlatform::glVersion() const
libkwin.so.6:KWin::IccProfile::brightness() const
libkwin.so.6:KWin::IccProfile::colorimetry() const
libkwin.so.6:KWin::IccProfile::inverseEOTF() const
libkwin.so.6:KWin::IccProfile::vcgt() const
libkwin.so.6:KWin::IccProfile::BtToATag() const
libkwin.so.6:KWin::OutputMode::refreshRate() const
libkwin.so.6:KWin::OutputMode::size() const
libkwin.so.6:KWin::OutputMode::flags() const
libkwin.so.6:KWin::RenderLoop::metaObject() const
libkwin.so.6:KWin::RenderLoop::refreshRate() const
libkwin.so.6:KWin::RenderLoop::predictedRenderTime() const
libkwin.so.6:KWin::RenderLoop::lastPresentationTimestamp() const
libkwin.so.6:KWin::RenderLoop::nextPresentationTimestamp() const
libkwin.so.6:KWin::ShadowItem::buildQuads() const
libkwin.so.6:KWin::ShadowItem::metaObject() const
libkwin.so.6:KWin::ShadowItem::textureProvider() const
libkwin.so.6:KWin::ShadowItem::shadow() const
libkwin.so.6:KWin::UdevDevice::properties() const
libkwin.so.6:KWin::UdevDevice::isHotpluggable() const
libkwin.so.6:KWin::UdevDevice::seat() const
libkwin.so.6:KWin::UdevDevice::action() const
libkwin.so.6:KWin::UdevDevice::devNum() const
libkwin.so.6:KWin::UdevDevice::devNode() const
libkwin.so.6:KWin::UdevDevice::isBootVga() const
libkwin.so.6:KWin::WindowItem::metaObject() const
libkwin.so.6:KWin::WindowItem::shadowItem() const
libkwin.so.6:KWin::WindowItem::surfaceItem() const
libkwin.so.6:KWin::WindowItem::effectWindow() const
libkwin.so.6:KWin::WindowItem::decorationItem() const
libkwin.so.6:KWin::WindowItem::computeVisibility() const
libkwin.so.6:KWin::WindowItem::window() const
libkwin.so.6:KWin::WindowQuad::makeSubQuad(double, double, double, double) const
libkwin.so.6:KWin::Application::metaObject() const
libkwin.so.6:KWin::Application::cursorImage() const
libkwin.so.6:KWin::Application::inputMethod() const
libkwin.so.6:KWin::Application::colorManager() const
libkwin.so.6:KWin::Application::operationMode() const
libkwin.so.6:KWin::Application::pluginManager() const
libkwin.so.6:KWin::Application::tabletModeManager() const
libkwin.so.6:KWin::Application::screenLockerWatcher() const
libkwin.so.6:KWin::Application::processStartupEnvironment() const
libkwin.so.6:KWin::Application::shouldUseWaylandForCompositing() const
libkwin.so.6:KWin::Application::xwayland() const
libkwin.so.6:KWin::ColorDevice::brightness() const
libkwin.so.6:KWin::ColorDevice::metaObject() const
libkwin.so.6:KWin::ColorDevice::temperature() const
libkwin.so.6:KWin::ColorDevice::output() const
libkwin.so.6:KWin::Colorimetry::interpolateGamutTo(KWin::Colorimetry const&, double) const
libkwin.so.6:KWin::Colorimetry::red() const
libkwin.so.6:KWin::Colorimetry::blue() const
libkwin.so.6:KWin::Colorimetry::green() const
libkwin.so.6:KWin::Colorimetry::toXYZ() const
libkwin.so.6:KWin::Colorimetry::white() const
libkwin.so.6:KWin::Colorimetry::fromXYZ() const
libkwin.so.6:KWin::Colorimetry::toOther(KWin::Colorimetry const&) const
libkwin.so.6:KWin::Colorimetry::adaptedTo(QVector2D) const
libkwin.so.6:KWin::Colorimetry::operator==(KWin::NamedColorimetry) const
libkwin.so.6:KWin::Colorimetry::operator==(KWin::Colorimetry const&) const
libkwin.so.6:KWin::CursorScene::metaObject() const
libkwin.so.6:KWin::CursorShape::name() const
libkwin.so.6:KWin::EffectFrame::metaObject() const
libkwin.so.6:KWin::EffectFrame::isCrossFade() const
libkwin.so.6:KWin::EffectFrame::crossFadeProgress() const
libkwin.so.6:KWin::EffectFrame::font() const
libkwin.so.6:KWin::EffectFrame::icon() const
libkwin.so.6:KWin::EffectFrame::text() const
libkwin.so.6:KWin::EffectFrame::style() const
libkwin.so.6:KWin::EffectFrame::geometry() const
libkwin.so.6:KWin::EffectFrame::iconSize() const
libkwin.so.6:KWin::EffectFrame::alignment() const
libkwin.so.6:KWin::InputDevice::metaObject() const
libkwin.so.6:KWin::InputDevice::outputName() const
libkwin.so.6:KWin::InputDevice::isNaturalScroll() const
libkwin.so.6:KWin::InputMethod::metaObject() const
libkwin.so.6:KWin::InputMethod::isAvailable() const
libkwin.so.6:KWin::InputMethod::shouldShowOnActive() const
libkwin.so.6:KWin::InputMethod::activeClientSupportsTextInput() const
libkwin.so.6:KWin::InputMethod::panel() const
libkwin.so.6:KWin::InputMethod::isActive() const
libkwin.so.6:KWin::InputMethod::isVisible() const
libkwin.so.6:KWin::OutputFrame::contentType() const
libkwin.so.6:KWin::OutputFrame::queryRenderTime() const
libkwin.so.6:KWin::OutputFrame::refreshDuration() const
libkwin.so.6:KWin::OutputFrame::presentationMode() const
libkwin.so.6:KWin::OutputFrame::targetPageflipTime() const
libkwin.so.6:KWin::OutputFrame::predictedRenderTime() const
libkwin.so.6:KWin::OutputFrame::damage() const
libkwin.so.6:KWin::OutputLayer::metaObject() const
libkwin.so.6:KWin::OutputLayer::sourceRect() const
libkwin.so.6:KWin::OutputLayer::targetRect() const
libkwin.so.6:KWin::OutputLayer::needsRepaint() const
libkwin.so.6:KWin::OutputLayer::bufferTransform() const
libkwin.so.6:KWin::OutputLayer::offloadTransform() const
libkwin.so.6:KWin::OutputLayer::scale() const
libkwin.so.6:KWin::OutputLayer::hotspot() const
libkwin.so.6:KWin::OutputLayer::repaints() const
libkwin.so.6:KWin::OutputLayer::fixedSize() const
libkwin.so.6:KWin::OutputLayer::isEnabled() const
libkwin.so.6:KWin::RenderLayer::metaObject() const
libkwin.so.6:KWin::RenderLayer::superlayer() const
libkwin.so.6:KWin::RenderLayer::mapToGlobal(QRect const&) const
libkwin.so.6:KWin::RenderLayer::mapToGlobal(QPoint const&) const
libkwin.so.6:KWin::RenderLayer::mapToGlobal(QRectF const&) const
libkwin.so.6:KWin::RenderLayer::mapToGlobal(QPointF const&) const
libkwin.so.6:KWin::RenderLayer::mapToGlobal(QRegion const&) const
libkwin.so.6:KWin::RenderLayer::outputLayer() const
libkwin.so.6:KWin::RenderLayer::boundingRect() const
libkwin.so.6:KWin::RenderLayer::needsRepaint() const
libkwin.so.6:KWin::RenderLayer::mapFromGlobal(QRect const&) const
libkwin.so.6:KWin::RenderLayer::mapFromGlobal(QPoint const&) const
libkwin.so.6:KWin::RenderLayer::mapFromGlobal(QRectF const&) const
libkwin.so.6:KWin::RenderLayer::mapFromGlobal(QPointF const&) const
libkwin.so.6:KWin::RenderLayer::mapFromGlobal(QRegion const&) const
libkwin.so.6:KWin::RenderLayer::computeEffectiveVisibility() const
libkwin.so.6:KWin::RenderLayer::loop() const
libkwin.so.6:KWin::RenderLayer::rect() const
libkwin.so.6:KWin::RenderLayer::delegate() const
libkwin.so.6:KWin::RenderLayer::geometry() const
libkwin.so.6:KWin::RenderLayer::repaints() const
libkwin.so.6:KWin::RenderLayer::isVisible() const
libkwin.so.6:KWin::RenderLayer::sublayers() const
libkwin.so.6:KWin::ScreenEdges::metaObject() const
libkwin.so.6:KWin::ScreenEdges::actionForEdge(KWin::Edge*) const
libkwin.so.6:KWin::ScreenEdges::actionForTouchEdge(KWin::Edge*) const
libkwin.so.6:KWin::ScreenEdges::inApproachGeometry(QPoint const&) const
libkwin.so.6:KWin::ScreenEdges::actionForTouchBorder(KWin::ElectricBorder) const
libkwin.so.6:KWin::ScreenEdges::remainActiveOnFullscreen() const
libkwin.so.6:KWin::ScreenEdges::edges() const
libkwin.so.6:KWin::ScreenEdges::windows() const
libkwin.so.6:KWin::SurfaceItem::bufferSize() const
libkwin.so.6:KWin::SurfaceItem::buildQuads() const
libkwin.so.6:KWin::SurfaceItem::metaObject() const
libkwin.so.6:KWin::SurfaceItem::contentType() const
libkwin.so.6:KWin::SurfaceItem::mapFromBuffer(QRegion const&) const
libkwin.so.6:KWin::SurfaceItem::previousPixmap() const
libkwin.so.6:KWin::SurfaceItem::bufferSourceBox() const
libkwin.so.6:KWin::SurfaceItem::bufferTransform() const
libkwin.so.6:KWin::SurfaceItem::destinationSize() const
libkwin.so.6:KWin::SurfaceItem::bufferReleasePoint() const
libkwin.so.6:KWin::SurfaceItem::frameTimeEstimation() const
libkwin.so.6:KWin::SurfaceItem::damage() const
libkwin.so.6:KWin::SurfaceItem::pixmap() const
libkwin.so.6:KWin::SurfaceRole::name() const
libkwin.so.6:KWin::TileManager::metaObject() const
libkwin.so.6:KWin::TileManager::tearingDown() const
libkwin.so.6:KWin::TileManager::model() const
libkwin.so.6:KWin::TileManager::output() const
libkwin.so.6:KWin::TileManager::rootTile() const
libkwin.so.6:KWin::TileManager::quickTile(QFlags<KWin::QuickTileFlag>) const
libkwin.so.6:KWin::Transaction::next(KWin::SurfaceInterface*) const
libkwin.so.6:KWin::Transaction::isReady() const
libkwin.so.6:KWin::UdevMonitor::fd() const
libkwin.so.6:KWin::ColorManager::findDevice(KWin::Output*) const
libkwin.so.6:KWin::ColorManager::metaObject() const
libkwin.so.6:KWin::ColorManager::devices() const
libkwin.so.6:KWin::CursorSource::metaObject() const
libkwin.so.6:KWin::CursorSource::size() const
libkwin.so.6:KWin::CursorSource::hotspot() const
libkwin.so.6:KWin::CursorSource::isBlank() const
libkwin.so.6:KWin::DebugConsole::metaObject() const
libkwin.so.6:KWin::EffectLoader::metaObject() const
libkwin.so.6:KWin::EffectLoader::isEffectSupported(QString const&) const
libkwin.so.6:KWin::EffectLoader::listOfKnownEffects() const
libkwin.so.6:KWin::EffectLoader::hasEffect(QString const&) const
libkwin.so.6:KWin::EffectWindow::activities() const
libkwin.so.6:KWin::EffectWindow::decoration() const
libkwin.so.6:KWin::EffectWindow::internalId() const
libkwin.so.6:KWin::EffectWindow::isComboBox() const
libkwin.so.6:KWin::EffectWindow::isUserMove() const
libkwin.so.6:KWin::EffectWindow::metaObject() const
libkwin.so.6:KWin::EffectWindow::windowItem() const
libkwin.so.6:KWin::EffectWindow::windowRole() const
libkwin.so.6:KWin::EffectWindow::windowType() const
libkwin.so.6:KWin::EffectWindow::isMinimized() const
libkwin.so.6:KWin::EffectWindow::isOnDesktop(KWin::VirtualDesktop*) const
libkwin.so.6:KWin::EffectWindow::isPopupMenu() const
libkwin.so.6:KWin::EffectWindow::isX11Client() const
libkwin.so.6:KWin::EffectWindow::mainWindows() const
libkwin.so.6:KWin::EffectWindow::windowClass() const
libkwin.so.6:KWin::EffectWindow::acceptsFocus() const
libkwin.so.6:KWin::EffectWindow::contentsRect() const
libkwin.so.6:KWin::EffectWindow::iconGeometry() const
libkwin.so.6:KWin::EffectWindow::isFullScreen() const
libkwin.so.6:KWin::EffectWindow::isLockScreen() const
libkwin.so.6:KWin::EffectWindow::isOnActivity(QString const&) const
libkwin.so.6:KWin::EffectWindow::isUserResize() const
libkwin.so.6:KWin::EffectWindow::readProperty(long, long, int) const
libkwin.so.6:KWin::EffectWindow::frameGeometry() const
libkwin.so.6:KWin::EffectWindow::hasDecoration() const
libkwin.so.6:KWin::EffectWindow::isAppletPopup() const
libkwin.so.6:KWin::EffectWindow::isInputMethod() const
libkwin.so.6:KWin::EffectWindow::isPopupWindow() const
libkwin.so.6:KWin::EffectWindow::bufferGeometry() const
libkwin.so.6:KWin::EffectWindow::clientGeometry() const
libkwin.so.6:KWin::EffectWindow::deleteProperty(long) const
libkwin.so.6:KWin::EffectWindow::internalWindow() const
libkwin.so.6:KWin::EffectWindow::isDropdownMenu() const
libkwin.so.6:KWin::EffectWindow::isNormalWindow() const
libkwin.so.6:KWin::EffectWindow::isNotification() const
libkwin.so.6:KWin::EffectWindow::isSkipSwitcher() const
libkwin.so.6:KWin::EffectWindow::isUnresponsive() const
libkwin.so.6:KWin::EffectWindow::isOnAllDesktops() const
libkwin.so.6:KWin::EffectWindow::isSpecialWindow() const
libkwin.so.6:KWin::EffectWindow::isWaylandClient() const
libkwin.so.6:KWin::EffectWindow::expandedGeometry() const
libkwin.so.6:KWin::EffectWindow::isOnAllActivities() const
libkwin.so.6:KWin::EffectWindow::isOnScreenDisplay() const
libkwin.so.6:KWin::EffectWindow::decorationHasAlpha() const
libkwin.so.6:KWin::EffectWindow::isOnCurrentDesktop() const
libkwin.so.6:KWin::EffectWindow::decorationInnerRect() const
libkwin.so.6:KWin::EffectWindow::isOnCurrentActivity() const
libkwin.so.6:KWin::EffectWindow::skipsCloseAnimation() const
libkwin.so.6:KWin::EffectWindow::x() const
libkwin.so.6:KWin::EffectWindow::y() const
libkwin.so.6:KWin::EffectWindow::isHiddenByShowDesktop() const
libkwin.so.6:KWin::EffectWindow::isCriticalNotification() const
libkwin.so.6:KWin::EffectWindow::isMovableAcrossScreens() const
libkwin.so.6:KWin::EffectWindow::pid() const
libkwin.so.6:KWin::EffectWindow::pos() const
libkwin.so.6:KWin::EffectWindow::data(int) const
libkwin.so.6:KWin::EffectWindow::icon() const
libkwin.so.6:KWin::EffectWindow::rect() const
libkwin.so.6:KWin::EffectWindow::size() const
libkwin.so.6:KWin::EffectWindow::group() const
libkwin.so.6:KWin::EffectWindow::width() const
libkwin.so.6:KWin::EffectWindow::height() const
libkwin.so.6:KWin::EffectWindow::isDock() const
libkwin.so.6:KWin::EffectWindow::isMenu() const
libkwin.so.6:KWin::EffectWindow::screen() const
libkwin.so.6:KWin::EffectWindow::window() const
libkwin.so.6:KWin::EffectWindow::caption() const
libkwin.so.6:KWin::EffectWindow::isModal() const
libkwin.so.6:KWin::EffectWindow::opacity() const
libkwin.so.6:KWin::EffectWindow::surface() const
libkwin.so.6:KWin::EffectWindow::desktops() const
libkwin.so.6:KWin::EffectWindow::isDialog() const
libkwin.so.6:KWin::EffectWindow::isHidden() const
libkwin.so.6:KWin::EffectWindow::isSplash() const
libkwin.so.6:KWin::EffectWindow::windowId() const
libkwin.so.6:KWin::EffectWindow::basicUnit() const
libkwin.so.6:KWin::EffectWindow::isDNDIcon() const
libkwin.so.6:KWin::EffectWindow::isDeleted() const
libkwin.so.6:KWin::EffectWindow::isDesktop() const
libkwin.so.6:KWin::EffectWindow::isManaged() const
libkwin.so.6:KWin::EffectWindow::isMovable() const
libkwin.so.6:KWin::EffectWindow::isOutline() const
libkwin.so.6:KWin::EffectWindow::isToolbar() const
libkwin.so.6:KWin::EffectWindow::isTooltip() const
libkwin.so.6:KWin::EffectWindow::isUtility() const
libkwin.so.6:KWin::EffectWindow::isVisible() const
libkwin.so.6:KWin::EffectWindow::keepAbove() const
libkwin.so.6:KWin::EffectWindow::keepBelow() const
libkwin.so.6:KWin::EglSwapchain::size() const
libkwin.so.6:KWin::EglSwapchain::format() const
libkwin.so.6:KWin::EglSwapchain::modifier() const
libkwin.so.6:KWin::FTraceLogger::metaObject() const
libkwin.so.6:KWin::FTraceLogger::isEnabled() const
libkwin.so.6:KWin::IdleDetector::metaObject() const
libkwin.so.6:KWin::IdleDetector::isInhibited() const
libkwin.so.6:KWin::InputBackend::metaObject() const
libkwin.so.6:KWin::InputBackend::config() const
libkwin.so.6:KWin::ItemRenderer::painter() const
libkwin.so.6:KWin::RenderTarget::framebuffer() const
libkwin.so.6:KWin::RenderTarget::colorDescription() const
libkwin.so.6:KWin::RenderTarget::size() const
libkwin.so.6:KWin::RenderTarget::image() const
libkwin.so.6:KWin::RenderTarget::texture() const
libkwin.so.6:KWin::RenderTarget::transform() const
libkwin.so.6:KWin::SyncTimeline::eventFd(unsigned long) const
libkwin.so.6:KWin::VsyncMonitor::metaObject() const
libkwin.so.6:KWin::BlurInterface::metaObject() const
libkwin.so.6:KWin::GLFramebuffer::colorAttachment() const
libkwin.so.6:KWin::GlLookUpTable::size() const
libkwin.so.6:KWin::GlLookUpTable::handle() const
libkwin.so.6:KWin::IdleInterface::metaObject() const
libkwin.so.6:KWin::KXcursorTheme::devicePixelRatio() const
libkwin.so.6:KWin::KXcursorTheme::name() const
libkwin.so.6:KWin::KXcursorTheme::size() const
libkwin.so.6:KWin::KXcursorTheme::shape(QByteArray const&) const
libkwin.so.6:KWin::KXcursorTheme::isEmpty() const
libkwin.so.6:KWin::OpenGLBackend::metaObject() const
libkwin.so.6:KWin::OpenGLBackend::compositingType() const
libkwin.so.6:KWin::OpenGLBackend::eglDisplayObject() const
libkwin.so.6:KWin::OpenGLBackend::textureForOutput(KWin::Output*) const
libkwin.so.6:KWin::OpenGlContext::glPlatform() const
libkwin.so.6:KWin::OpenGlContext::hasVersion(KWin::Version const&) const
libkwin.so.6:KWin::OpenGlContext::isOpenGLES() const
libkwin.so.6:KWin::OpenGlContext::glslVersion() const
libkwin.so.6:KWin::OpenGlContext::indexBuffer() const
libkwin.so.6:KWin::OpenGlContext::streamingVbo() const
libkwin.so.6:KWin::OpenGlContext::openglVersion() const
libkwin.so.6:KWin::OpenGlContext::shaderManager() const
libkwin.so.6:KWin::OpenGlContext::supportsBlits() const
libkwin.so.6:KWin::OpenGlContext::checkSupported() const
libkwin.so.6:KWin::OpenGlContext::haveSyncFences() const
libkwin.so.6:KWin::OpenGlContext::openglExtensions() const
libkwin.so.6:KWin::OpenGlContext::glslVersionString() const
libkwin.so.6:KWin::OpenGlContext::hasMapBufferRange() const
libkwin.so.6:KWin::OpenGlContext::haveBufferStorage() const
libkwin.so.6:KWin::OpenGlContext::hasOpenglExtension(QByteArrayView) const
libkwin.so.6:KWin::OpenGlContext::isSoftwareRenderer() const
libkwin.so.6:KWin::OpenGlContext::supportsPackInvert() const
libkwin.so.6:KWin::OpenGlContext::supportsRGTextures() const
libkwin.so.6:KWin::OpenGlContext::openglVersionString() const
libkwin.so.6:KWin::OpenGlContext::supportsTimerQueries() const
libkwin.so.6:KWin::OpenGlContext::supports16BitTextures() const
libkwin.so.6:KWin::OpenGlContext::supportsTextureUnpack() const
libkwin.so.6:KWin::OpenGlContext::checkTimerQuerySupport() const
libkwin.so.6:KWin::OpenGlContext::supportsARGB32Textures() const
libkwin.so.6:KWin::OpenGlContext::supportsTextureStorage() const
libkwin.so.6:KWin::OpenGlContext::supportsTextureSwizzle() const
libkwin.so.6:KWin::OpenGlContext::supportsGLES24BitDepthBuffers() const
libkwin.so.6:KWin::OpenGlContext::vendor() const
libkwin.so.6:KWin::OpenGlContext::renderer() const
libkwin.so.6:KWin::OutputBackend::findOutput(QString const&) const
libkwin.so.6:KWin::OutputBackend::metaObject() const
libkwin.so.6:KWin::OutputBackend::supportInformation() const
libkwin.so.6:KWin::OutputBackend::sceneEglGlobalShareContext() const
libkwin.so.6:KWin::OutputBackend::session() const
libkwin.so.6:KWin::PluginFactory::metaObject() const
libkwin.so.6:KWin::PluginManager::metaObject() const
libkwin.so.6:KWin::PluginManager::loadedPlugins() const
libkwin.so.6:KWin::PluginManager::availablePlugins() const
libkwin.so.6:KWin::QuickRootTile::metaObject() const
libkwin.so.6:KWin::QuickRootTile::verticalSplit() const
libkwin.so.6:KWin::QuickRootTile::horizontalSplit() const
libkwin.so.6:KWin::RenderBackend::metaObject() const
libkwin.so.6:KWin::RenderBackend::overlayWindow() const
libkwin.so.6:KWin::RenderBackend::supportedFormats() const
libkwin.so.6:KWin::RenderBackend::drmDevice() const
libkwin.so.6:KWin::RenderJournal::result() const
libkwin.so.6:KWin::SceneDelegate::scanoutCandidate() const
libkwin.so.6:KWin::SceneDelegate::scale() const
libkwin.so.6:KWin::SceneDelegate::output() const
libkwin.so.6:KWin::SceneDelegate::viewport() const
libkwin.so.6:KWin::SeatInterface::dragSource() const
libkwin.so.6:KWin::SeatInterface::hasPointer() const
libkwin.so.6:KWin::SeatInterface::metaObject() const
libkwin.so.6:KWin::SeatInterface::pointerPos() const
libkwin.so.6:KWin::SeatInterface::dragSurface() const
libkwin.so.6:KWin::SeatInterface::hasKeyboard() const
libkwin.so.6:KWin::SeatInterface::isDragTouch() const
libkwin.so.6:KWin::SeatInterface::textInputV1() const
libkwin.so.6:KWin::SeatInterface::textInputV2() const
libkwin.so.6:KWin::SeatInterface::textInputV3() const
libkwin.so.6:KWin::SeatInterface::isDragPointer() const
libkwin.so.6:KWin::SeatInterface::isTouchSequence() const
libkwin.so.6:KWin::SeatInterface::xdgTopleveldrag() const
libkwin.so.6:KWin::SeatInterface::primarySelection() const
libkwin.so.6:KWin::SeatInterface::focusedTouchSurface() const
libkwin.so.6:KWin::SeatInterface::pointerButtonSerial(Qt::MouseButton) const
libkwin.so.6:KWin::SeatInterface::pointerButtonSerial(unsigned int) const
libkwin.so.6:KWin::SeatInterface::hasImplicitTouchGrab(unsigned int) const
libkwin.so.6:KWin::SeatInterface::dropHandlerForSurface(KWin::SurfaceInterface*) const
libkwin.so.6:KWin::SeatInterface::focusedPointerSurface() const
libkwin.so.6:KWin::SeatInterface::focusedKeyboardSurface() const
libkwin.so.6:KWin::SeatInterface::hasImplicitPointerGrab(unsigned int) const
libkwin.so.6:KWin::SeatInterface::isPointerButtonPressed(Qt::MouseButton) const
libkwin.so.6:KWin::SeatInterface::isPointerButtonPressed(unsigned int) const
libkwin.so.6:KWin::SeatInterface::firstTouchPointPosition() const
libkwin.so.6:KWin::SeatInterface::focusedTextInputSurface() const
libkwin.so.6:KWin::SeatInterface::dragSurfaceTransformation() const
libkwin.so.6:KWin::SeatInterface::focusedTouchSurfacePosition() const
libkwin.so.6:KWin::SeatInterface::focusedPointerSurfacePosition() const
libkwin.so.6:KWin::SeatInterface::focusedPointerSurfaceTransformation() const
libkwin.so.6:KWin::SeatInterface::name() const
libkwin.so.6:KWin::SeatInterface::touch() const
libkwin.so.6:KWin::SeatInterface::isDrag() const
libkwin.so.6:KWin::SeatInterface::display() const
libkwin.so.6:KWin::SeatInterface::pointer() const
libkwin.so.6:KWin::SeatInterface::dragIcon() const
libkwin.so.6:KWin::SeatInterface::hasTouch() const
libkwin.so.6:KWin::SeatInterface::keyboard() const
libkwin.so.6:KWin::SeatInterface::selection() const
libkwin.so.6:KWin::SeatInterface::timestamp() const
libkwin.so.6:KWin::ShaderManager::preprocess(QByteArray const&, int) const
libkwin.so.6:KWin::ShaderManager::isShaderBound() const
libkwin.so.6:KWin::ShaderManager::getBoundShader() const
libkwin.so.6:KWin::ShaderManager::generateVertexSource(QFlags<KWin::ShaderTrait>) const
libkwin.so.6:KWin::ShaderManager::bindAttributeLocations(KWin::GLShader*) const
libkwin.so.6:KWin::ShaderManager::generateFragmentSource(QFlags<KWin::ShaderTrait>) const
libkwin.so.6:KWin::SurfacePixmap::metaObject() const
libkwin.so.6:KWin::SurfacePixmap::isDiscarded() const
libkwin.so.6:KWin::SurfacePixmap::bufferOrigin() const
libkwin.so.6:KWin::SurfacePixmap::hasAlphaChannel() const
libkwin.so.6:KWin::SurfacePixmap::size() const
libkwin.so.6:KWin::SurfacePixmap::buffer() const
libkwin.so.6:KWin::SurfacePixmap::texture() const
libkwin.so.6:KWin::WaylandServer::findWindow(KWin::SurfaceInterface const*) const
libkwin.so.6:KWin::WaylandServer::metaObject() const
libkwin.so.6:KWin::WaylandServer::socketName() const
libkwin.so.6:KWin::WaylandServer::linuxSyncObj() const
libkwin.so.6:KWin::WaylandServer::isScreenLocked() const
libkwin.so.6:KWin::WaylandServer::xWaylandConnection() const
libkwin.so.6:KWin::WaylandServer::findXdgSurfaceWindow(KWin::SurfaceInterface*) const
libkwin.so.6:KWin::WaylandServer::findXdgToplevelWindow(KWin::SurfaceInterface*) const
libkwin.so.6:KWin::WaylandServer::inputMethodConnection() const
libkwin.so.6:KWin::WaylandServer::hasGlobalShortcutSupport() const
libkwin.so.6:KWin::WaylandServer::hasScreenLockerIntegration() const
libkwin.so.6:KWin::WaylandServer::isKeyboardShortcutsInhibited() const
libkwin.so.6:KWin::WindowItemX11::metaObject() const
libkwin.so.6:KWin::X11Compositor::metaObject() const
libkwin.so.6:KWin::X11Compositor::syncManager() const
libkwin.so.6:KWin::X11Compositor::compositingPossible() const
libkwin.so.6:KWin::X11Compositor::openGLCompositingIsBroken() const
libkwin.so.6:KWin::X11Compositor::compositingNotPossibleReason() const
libkwin.so.6:KWin::XdgPositioner::isComplete() const
libkwin.so.6:KWin::XdgPositioner::isReactive() const
libkwin.so.6:KWin::XdgPositioner::size() const
libkwin.so.6:KWin::XdgPositioner::placement(QRectF const&) const
libkwin.so.6:KWin::AbstractScript::metaObject() const
libkwin.so.6:KWin::AbstractScript::config() const
libkwin.so.6:KWin::DecorationItem::buildQuads() const
libkwin.so.6:KWin::DecorationItem::metaObject() const
libkwin.so.6:KWin::DecorationItem::shape() const
libkwin.so.6:KWin::DecorationItem::opaque() const
libkwin.so.6:KWin::DecorationItem::window() const
libkwin.so.6:KWin::DecorationItem::renderer() const
libkwin.so.6:KWin::EGLNativeFence::fileDescriptor() const
libkwin.so.6:KWin::EGLNativeFence::isValid() const
libkwin.so.6:KWin::EGLNativeFence::waitSync() const
libkwin.so.6:KWin::EffectsHandler::clientArea(KWin::clientAreaOption, KWin::EffectWindow const*) const
libkwin.so.6:KWin::EffectsHandler::clientArea(KWin::clientAreaOption, KWin::Output const*, KWin::VirtualDesktop const*) const
libkwin.so.6:KWin::EffectsHandler::clientArea(KWin::clientAreaOption, QPoint const&, KWin::VirtualDesktop const*) const
libkwin.so.6:KWin::EffectsHandler::findEffect(QString const&) const
libkwin.so.6:KWin::EffectsHandler::findScreen(QString const&) const
libkwin.so.6:KWin::EffectsHandler::findScreen(int) const
libkwin.so.6:KWin::EffectsHandler::findWindow(QWindow*) const
libkwin.so.6:KWin::EffectsHandler::findWindow(KWin::SurfaceInterface*) const
libkwin.so.6:KWin::EffectsHandler::findWindow(QUuid const&) const
libkwin.so.6:KWin::EffectsHandler::findWindow(unsigned long long) const
libkwin.so.6:KWin::EffectsHandler::inputPanel() const
libkwin.so.6:KWin::EffectsHandler::metaObject() const
libkwin.so.6:KWin::EffectsHandler::cursorImage() const
libkwin.so.6:KWin::EffectsHandler::desktopName(KWin::VirtualDesktop*) const
libkwin.so.6:KWin::EffectsHandler::inputConfig() const
libkwin.so.6:KWin::EffectsHandler::activeScreen() const
libkwin.so.6:KWin::EffectsHandler::activeWindow() const
libkwin.so.6:KWin::EffectsHandler::desktopAbove(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::EffectsHandler::desktopBelow(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::EffectsHandler::sessionState() const
libkwin.so.6:KWin::EffectsHandler::activeEffects() const
libkwin.so.6:KWin::EffectsHandler::desktopCoords(KWin::VirtualDesktop*) const
libkwin.so.6:KWin::EffectsHandler::desktopToLeft(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::EffectsHandler::listOfEffects() const
libkwin.so.6:KWin::EffectsHandler::loadedEffects() const
libkwin.so.6:KWin::EffectsHandler::openglContext() const
libkwin.so.6:KWin::EffectsHandler::stackingOrder() const
libkwin.so.6:KWin::EffectsHandler::x11RootWindow() const
libkwin.so.6:KWin::EffectsHandler::xcbConnection() const
libkwin.so.6:KWin::EffectsHandler::currentDesktop() const
libkwin.so.6:KWin::EffectsHandler::desktopToRight(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::EffectsHandler::isCursorHidden() const
libkwin.so.6:KWin::EffectsHandler::isEffectActive(QString const&) const
libkwin.so.6:KWin::EffectsHandler::isEffectLoaded(QString const&) const
libkwin.so.6:KWin::EffectsHandler::isScreenLocked() const
libkwin.so.6:KWin::EffectsHandler::waylandDisplay() const
libkwin.so.6:KWin::EffectsHandler::workspaceWidth() const
libkwin.so.6:KWin::EffectsHandler::compositingType() const
libkwin.so.6:KWin::EffectsHandler::currentActivity() const
libkwin.so.6:KWin::EffectsHandler::desktopAtCoords(QPoint) const
libkwin.so.6:KWin::EffectsHandler::desktopGridSize() const
libkwin.so.6:KWin::EffectsHandler::hasKeyboardGrab() const
libkwin.so.6:KWin::EffectsHandler::workspaceHeight() const
libkwin.so.6:KWin::EffectsHandler::desktopGridWidth() const
libkwin.so.6:KWin::EffectsHandler::readRootProperty(long, long, int) const
libkwin.so.6:KWin::EffectsHandler::desktopGridCoords(KWin::VirtualDesktop*) const
libkwin.so.6:KWin::EffectsHandler::desktopGridHeight() const
libkwin.so.6:KWin::EffectsHandler::virtualScreenSize() const
libkwin.so.6:KWin::EffectsHandler::supportInformation(QString const&) const
libkwin.so.6:KWin::EffectsHandler::animationTimeFactor() const
libkwin.so.6:KWin::EffectsHandler::animationsSupported() const
libkwin.so.6:KWin::EffectsHandler::blocksDirectScanout() const
libkwin.so.6:KWin::EffectsHandler::currentTabBoxWindow() const
libkwin.so.6:KWin::EffectsHandler::isColorPickerActive() const
libkwin.so.6:KWin::EffectsHandler::isInputPanelOverlay() const
libkwin.so.6:KWin::EffectsHandler::isMouseInterception() const
libkwin.so.6:KWin::EffectsHandler::isOpenGLCompositing() const
libkwin.so.6:KWin::EffectsHandler::decorationsHaveAlpha() const
libkwin.so.6:KWin::EffectsHandler::hasDecorationShadows() const
libkwin.so.6:KWin::EffectsHandler::virtualScreenGeometry() const
libkwin.so.6:KWin::EffectsHandler::activeFullScreenEffect() const
libkwin.so.6:KWin::EffectsHandler::optionRollOverDesktops() const
libkwin.so.6:KWin::EffectsHandler::currentTabBoxWindowList() const
libkwin.so.6:KWin::EffectsHandler::renderOffscreenQuickView(KWin::RenderTarget const&, KWin::RenderViewport const&, KWin::OffscreenQuickView*) const
libkwin.so.6:KWin::EffectsHandler::hasActiveFullScreenEffect() const
libkwin.so.6:KWin::EffectsHandler::debug(QString const&, QString const&) const
libkwin.so.6:KWin::EffectsHandler::config() const
libkwin.so.6:KWin::EffectsHandler::screens() const
libkwin.so.6:KWin::EffectsHandler::desktops() const
libkwin.so.6:KWin::EffectsHandler::screenAt(QPoint const&) const
libkwin.so.6:KWin::EffectsHandler::cursorPos() const
libkwin.so.6:KWin::EffectsHandler::qmlEngine() const
libkwin.so.6:KWin::FileDescriptor::isReadable() const
libkwin.so.6:KWin::FileDescriptor::get() const
libkwin.so.6:KWin::FileDescriptor::isValid() const
libkwin.so.6:KWin::FileDescriptor::isClosed() const
libkwin.so.6:KWin::FileDescriptor::duplicate() const
libkwin.so.6:KWin::GraphicsBuffer::metaObject() const
libkwin.so.6:KWin::GraphicsBuffer::isReferenced() const
libkwin.so.6:KWin::GraphicsBuffer::shmAttributes() const
libkwin.so.6:KWin::GraphicsBuffer::dmabufAttributes() const
libkwin.so.6:KWin::GraphicsBuffer::isDropped() const
libkwin.so.6:KWin::InternalWindow::isInternal() const
libkwin.so.6:KWin::InternalWindow::metaObject() const
libkwin.so.6:KWin::InternalWindow::wantsInput() const
libkwin.so.6:KWin::InternalWindow::windowRole() const
libkwin.so.6:KWin::InternalWindow::windowType() const
libkwin.so.6:KWin::InternalWindow::bufferScale() const
libkwin.so.6:KWin::InternalWindow::isCloseable() const
libkwin.so.6:KWin::InternalWindow::isPlaceable() const
libkwin.so.6:KWin::InternalWindow::isResizable() const
libkwin.so.6:KWin::InternalWindow::acceptsFocus() const
libkwin.so.6:KWin::InternalWindow::hasPopupGrab() const
libkwin.so.6:KWin::InternalWindow::isLockScreen() const
libkwin.so.6:KWin::InternalWindow::captionNormal() const
libkwin.so.6:KWin::InternalWindow::captionSuffix() const
libkwin.so.6:KWin::InternalWindow::isPopupWindow() const
libkwin.so.6:KWin::InternalWindow::graphicsBuffer() const
libkwin.so.6:KWin::InternalWindow::userCanSetNoBorder() const
libkwin.so.6:KWin::InternalWindow::graphicsBufferOrigin() const
libkwin.so.6:KWin::InternalWindow::isMovableAcrossScreens() const
libkwin.so.6:KWin::InternalWindow::belongsToSameApplication(KWin::Window const*, QFlags<KWin::Window::SameApplicationCheck>) const
libkwin.so.6:KWin::InternalWindow::handle() const
libkwin.so.6:KWin::InternalWindow::hitTest(QPointF const&) const
libkwin.so.6:KWin::InternalWindow::maxSize() const
libkwin.so.6:KWin::InternalWindow::minSize() const
libkwin.so.6:KWin::InternalWindow::isClient() const
libkwin.so.6:KWin::InternalWindow::noBorder() const
libkwin.so.6:KWin::InternalWindow::isMovable() const
libkwin.so.6:KWin::InternalWindow::isOutline() const
libkwin.so.6:KWin::KXcursorSprite::data() const
libkwin.so.6:KWin::KXcursorSprite::delay() const
libkwin.so.6:KWin::KXcursorSprite::hotspot() const
libkwin.so.6:KWin::KeyboardLayout::metaObject() const
libkwin.so.6:KWin::QuickSceneView::metaObject() const
libkwin.so.6:KWin::QuickSceneView::effect() const
libkwin.so.6:KWin::QuickSceneView::screen() const
libkwin.so.6:KWin::QuickSceneView::isDirty() const
libkwin.so.6:KWin::QuickSceneView::rootItem() const
libkwin.so.6:KWin::RenderViewport::renderRect() const
libkwin.so.6:KWin::RenderViewport::projectionMatrix() const
libkwin.so.6:KWin::RenderViewport::mapToRenderTarget(QRect const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTarget(QPoint const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTarget(QRectF const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTarget(QPointF const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTarget(QRegion const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTargetTexture(QRect const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTargetTexture(QPoint const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTargetTexture(QRectF const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTargetTexture(QPointF const&) const
libkwin.so.6:KWin::RenderViewport::mapToRenderTargetTexture(QRegion const&) const
libkwin.so.6:KWin::RenderViewport::scale() const
libkwin.so.6:KWin::ScriptedEffect::findShader(unsigned int) const
libkwin.so.6:KWin::ScriptedEffect::metaObject() const
libkwin.so.6:KWin::ScriptedEffect::displayWidth() const
libkwin.so.6:KWin::ScriptedEffect::animationTime(int) const
libkwin.so.6:KWin::ScriptedEffect::displayHeight() const
libkwin.so.6:KWin::ScriptedEffect::blocksDirectScanout() const
libkwin.so.6:KWin::ScriptedEffect::touchEdgesForAction(QString const&) const
libkwin.so.6:KWin::ScriptedEffect::isActiveFullScreenEffect() const
libkwin.so.6:KWin::ScriptedEffect::engine() const
libkwin.so.6:KWin::ScriptedEffect::pluginId() const
libkwin.so.6:KWin::SlideInterface::metaObject() const
libkwin.so.6:KWin::SlideInterface::offset() const
libkwin.so.6:KWin::SlideInterface::location() const
libkwin.so.6:KWin::SurfaceItemX11::metaObject() const
libkwin.so.6:KWin::SurfaceItemX11::shape() const
libkwin.so.6:KWin::SurfaceItemX11::opaque() const
libkwin.so.6:KWin::SurfaceItemX11::window() const
libkwin.so.6:KWin::TouchInterface::metaObject() const
libkwin.so.6:KWin::TouchInterface::focusedSurface() const
libkwin.so.6:KWin::VirtualBackend::metaObject() const
libkwin.so.6:KWin::VirtualBackend::supportedCompositors() const
libkwin.so.6:KWin::VirtualBackend::sceneEglDisplayObject() const
libkwin.so.6:KWin::VirtualBackend::outputs() const
libkwin.so.6:KWin::VirtualBackend::drmDevice() const
libkwin.so.6:KWin::VirtualDesktop::metaObject() const
libkwin.so.6:KWin::WindowQuadList::makeRegularGrid(int, int) const
libkwin.so.6:KWin::WindowQuadList::makeGrid(int) const
libkwin.so.6:KWin::WindowQuadList::splitAtX(double) const
libkwin.so.6:KWin::WindowQuadList::splitAtY(double) const
libkwin.so.6:KWin::WorkspaceScene::metaObject() const
libkwin.so.6:KWin::WorkspaceScene::overlayItem() const
libkwin.so.6:KWin::WorkspaceScene::containerItem() const
libkwin.so.6:KWin::WorkspaceScene::openglContext() const
libkwin.so.6:KWin::WorkspaceScene::scanoutCandidate() const
libkwin.so.6:KWin::WorkspaceScene::supportsNativeFence() const
libkwin.so.6:KWin::X11EventFilter::isGenericEvent() const
libkwin.so.6:KWin::AnimationEffect::metaObject() const
libkwin.so.6:KWin::AnimationEffect::interpolated(KWin::AniData const&, int) const
libkwin.so.6:KWin::AnimationEffect::debug(QString const&) const
libkwin.so.6:KWin::AnimationEffect::state() const
libkwin.so.6:KWin::AnimationEffect::clipRect(QRect const&, KWin::AniData const&) const
libkwin.so.6:KWin::AnimationEffect::isActive() const
libkwin.so.6:KWin::AnimationEffect::progress(KWin::AniData const&) const
libkwin.so.6:KWin::AnimationEffect::validate(KWin::AnimationEffect::Attribute, unsigned int&, KWin::FPx2*, KWin::FPx2*, KWin::EffectWindow const*) const
libkwin.so.6:KWin::CrossFadeEffect::metaObject() const
libkwin.so.6:KWin::DragAndDropIcon::metaObject() const
libkwin.so.6:KWin::DragAndDropIcon::surface() const
libkwin.so.6:KWin::DragAndDropIcon::position() const
libkwin.so.6:KWin::FakeInputDevice::isKeyboard() const
libkwin.so.6:KWin::FakeInputDevice::isTouchpad() const
libkwin.so.6:KWin::FakeInputDevice::metaObject() const
libkwin.so.6:KWin::FakeInputDevice::isLidSwitch() const
libkwin.so.6:KWin::FakeInputDevice::isTabletPad() const
libkwin.so.6:KWin::FakeInputDevice::isTabletTool() const
libkwin.so.6:KWin::FakeInputDevice::isAuthenticated() const
libkwin.so.6:KWin::FakeInputDevice::isTabletModeSwitch() const
libkwin.so.6:KWin::FakeInputDevice::leds() const
libkwin.so.6:KWin::FakeInputDevice::name() const
libkwin.so.6:KWin::FakeInputDevice::isTouch() const
libkwin.so.6:KWin::FakeInputDevice::sysName() const
libkwin.so.6:KWin::FakeInputDevice::isEnabled() const
libkwin.so.6:KWin::FakeInputDevice::isPointer() const
libkwin.so.6:KWin::FilteredDisplay::metaObject() const
libkwin.so.6:KWin::GlLookUpTable3D::xSize() const
libkwin.so.6:KWin::GlLookUpTable3D::ySize() const
libkwin.so.6:KWin::GlLookUpTable3D::zSize() const
libkwin.so.6:KWin::GlLookUpTable3D::handle() const
libkwin.so.6:KWin::LibinputBackend::metaObject() const
libkwin.so.6:KWin::OffscreenEffect::metaObject() const
libkwin.so.6:KWin::OutputInterface::metaObject() const
libkwin.so.6:KWin::OutputInterface::clientResources(wl_client*) const
libkwin.so.6:KWin::OutputInterface::handle() const
libkwin.so.6:KWin::OutputInterface::display() const
libkwin.so.6:KWin::OutputInterface::isRemoved() const
libkwin.so.6:KWin::OutputTransform::map(QRect const&, QSize const&) const
libkwin.so.6:KWin::OutputTransform::map(QSize const&) const
libkwin.so.6:KWin::OutputTransform::map(QPoint const&, QSize const&) const
libkwin.so.6:KWin::OutputTransform::map(QRectF const&, QSizeF const&) const
libkwin.so.6:KWin::OutputTransform::map(QSizeF const&) const
libkwin.so.6:KWin::OutputTransform::map(QPointF const&, QSizeF const&) const
libkwin.so.6:KWin::OutputTransform::kind() const
libkwin.so.6:KWin::OutputTransform::combine(KWin::OutputTransform) const
libkwin.so.6:KWin::OutputTransform::inverted() const
libkwin.so.6:KWin::OutputTransform::toMatrix() const
libkwin.so.6:KWin::QPainterBackend::metaObject() const
libkwin.so.6:KWin::QPainterBackend::compositingType() const
libkwin.so.6:KWin::ShadowInterface::bottomLeft() const
libkwin.so.6:KWin::ShadowInterface::metaObject() const
libkwin.so.6:KWin::ShadowInterface::bottomRight() const
libkwin.so.6:KWin::ShadowInterface::top() const
libkwin.so.6:KWin::ShadowInterface::left() const
libkwin.so.6:KWin::ShadowInterface::right() const
libkwin.so.6:KWin::ShadowInterface::bottom() const
libkwin.so.6:KWin::ShadowInterface::offset() const
libkwin.so.6:KWin::ShadowInterface::topLeft() const
libkwin.so.6:KWin::ShadowInterface::topRight() const
libkwin.so.6:KWin::ShmClientBuffer::metaObject() const
libkwin.so.6:KWin::ShmClientBuffer::shmAttributes() const
libkwin.so.6:KWin::ShmClientBuffer::hasAlphaChannel() const
libkwin.so.6:KWin::ShmClientBuffer::size() const
libkwin.so.6:KWin::UserActionsMenu::metaObject() const
libkwin.so.6:KWin::UserActionsMenu::isMenuWindow(KWin::Window const*) const
libkwin.so.6:KWin::UserActionsMenu::isShown() const
libkwin.so.6:KWin::UserActionsMenu::hasWindow() const
libkwin.so.6:KWin::WindowPaintData::brightness() const
libkwin.so.6:KWin::WindowPaintData::saturation() const
libkwin.so.6:KWin::WindowPaintData::setSaturation(double) const
libkwin.so.6:KWin::WindowPaintData::crossFadeProgress() const
libkwin.so.6:KWin::WindowPaintData::opacity() const
libkwin.so.6:KWin::AppMenuInterface::metaObject() const
libkwin.so.6:KWin::AppMenuInterface::address() const
libkwin.so.6:KWin::AppMenuInterface::surface() const
libkwin.so.6:KWin::ClientConnection::metaObject() const
libkwin.so.6:KWin::ClientConnection::getResource(unsigned int) const
libkwin.so.6:KWin::ClientConnection::scaleOverride() const
libkwin.so.6:KWin::ClientConnection::executablePath() const
libkwin.so.6:KWin::ClientConnection::securityContextAppId() const
libkwin.so.6:KWin::ClientConnection::client() const
libkwin.so.6:KWin::ClientConnection::userId() const
libkwin.so.6:KWin::ClientConnection::display() const
libkwin.so.6:KWin::ClientConnection::groupId() const
libkwin.so.6:KWin::ClientConnection::processId() const
libkwin.so.6:KWin::ClientConnection::operator wl_client*() const
libkwin.so.6:KWin::ColorDescription::colorimetry() const
libkwin.so.6:KWin::ColorDescription::sdrBrightness() const
libkwin.so.6:KWin::ColorDescription::sdrColorimetry() const
libkwin.so.6:KWin::ColorDescription::minHdrBrightness() const
libkwin.so.6:KWin::ColorDescription::transferFunction() const
libkwin.so.6:KWin::ColorDescription::maxFrameAverageBrightness() const
libkwin.so.6:KWin::ColorDescription::maxHdrHighlightBrightness() const
libkwin.so.6:KWin::ColorDescription::mapTo(QVector3D, KWin::ColorDescription const&) const
libkwin.so.6:KWin::EglSwapchainSlot::framebuffer() const
libkwin.so.6:KWin::EglSwapchainSlot::age() const
libkwin.so.6:KWin::EglSwapchainSlot::buffer() const
libkwin.so.6:KWin::EglSwapchainSlot::isBusy() const
libkwin.so.6:KWin::EglSwapchainSlot::texture() const
libkwin.so.6:KWin::InputRedirection::hasPointer() const
libkwin.so.6:KWin::InputRedirection::metaObject() const
libkwin.so.6:KWin::InputRedirection::globalPointer() const
libkwin.so.6:KWin::InputRedirection::idleInhibitors() const
libkwin.so.6:KWin::InputRedirection::qtButtonStates() const
libkwin.so.6:KWin::InputRedirection::lastInputHandler() const
libkwin.so.6:KWin::InputRedirection::isSelectingWindow() const
libkwin.so.6:KWin::InputRedirection::keyboardModifiers() const
libkwin.so.6:KWin::InputRedirection::supportsPointerWarping() const
libkwin.so.6:KWin::InputRedirection::modifiersRelevantForGlobalShortcuts() const
libkwin.so.6:KWin::InputRedirection::hasTouch() const
libkwin.so.6:KWin::PointerInterface::metaObject() const
libkwin.so.6:KWin::PointerInterface::focusedSerial() const
libkwin.so.6:KWin::PointerInterface::focusedSurface() const
libkwin.so.6:KWin::PointerInterface::seat() const
libkwin.so.6:KWin::QuickSceneEffect::activeView() const
libkwin.so.6:KWin::QuickSceneEffect::metaObject() const
libkwin.so.6:KWin::QuickSceneEffect::viewForScreen(KWin::Output*) const
libkwin.so.6:KWin::QuickSceneEffect::source() const
libkwin.so.6:KWin::QuickSceneEffect::viewAt(QPoint const&) const
libkwin.so.6:KWin::QuickSceneEffect::delegate() const
libkwin.so.6:KWin::QuickSceneEffect::isActive() const
libkwin.so.6:KWin::QuickSceneEffect::isRunning() const
libkwin.so.6:KWin::SurfaceInterface::bufferSize() const
libkwin.so.6:KWin::SurfaceInterface::compositor() const
libkwin.so.6:KWin::SurfaceInterface::mapToChild(KWin::SurfaceInterface*, QPointF const&) const
libkwin.so.6:KWin::SurfaceInterface::metaObject() const
libkwin.so.6:KWin::SurfaceInterface::subSurface() const
libkwin.so.6:KWin::SurfaceInterface::contentType() const
libkwin.so.6:KWin::SurfaceInterface::boundingRect() const
libkwin.so.6:KWin::SurfaceInterface::bufferDamage() const
libkwin.so.6:KWin::SurfaceInterface::inhibitsIdle() const
libkwin.so.6:KWin::SurfaceInterface::lockedPointer() const
libkwin.so.6:KWin::SurfaceInterface::scaleOverride() const
libkwin.so.6:KWin::SurfaceInterface::toSurfaceLocal(QPoint const&) const
libkwin.so.6:KWin::SurfaceInterface::toSurfaceLocal(QPointF const&) const
libkwin.so.6:KWin::SurfaceInterface::bufferSourceBox() const
libkwin.so.6:KWin::SurfaceInterface::bufferTransform() const
libkwin.so.6:KWin::SurfaceInterface::confinedPointer() const
libkwin.so.6:KWin::SurfaceInterface::lastTransaction() const
libkwin.so.6:KWin::SurfaceInterface::slideOnShowHide() const
libkwin.so.6:KWin::SurfaceInterface::colorDescription() const
libkwin.so.6:KWin::SurfaceInterface::dmabufFeedbackV1() const
libkwin.so.6:KWin::SurfaceInterface::firstTransaction() const
libkwin.so.6:KWin::SurfaceInterface::hasFrameCallbacks() const
libkwin.so.6:KWin::SurfaceInterface::bufferReleasePoint() const
libkwin.so.6:KWin::SurfaceInterface::presentationModeHint() const
libkwin.so.6:KWin::SurfaceInterface::id() const
libkwin.so.6:KWin::SurfaceInterface::blur() const
libkwin.so.6:KWin::SurfaceInterface::role() const
libkwin.so.6:KWin::SurfaceInterface::size() const
libkwin.so.6:KWin::SurfaceInterface::above() const
libkwin.so.6:KWin::SurfaceInterface::below() const
libkwin.so.6:KWin::SurfaceInterface::input() const
libkwin.so.6:KWin::SurfaceInterface::buffer() const
libkwin.so.6:KWin::SurfaceInterface::client() const
libkwin.so.6:KWin::SurfaceInterface::offset() const
libkwin.so.6:KWin::SurfaceInterface::opaque() const
libkwin.so.6:KWin::SurfaceInterface::shadow() const
libkwin.so.6:KWin::SurfaceInterface::outputs() const
libkwin.so.6:KWin::SurfaceInterface::contrast() const
libkwin.so.6:KWin::SurfaceInterface::isMapped() const
libkwin.so.6:KWin::SurfaceInterface::resource() const
libkwin.so.6:KWin::SurfacePixmapX11::metaObject() const
libkwin.so.6:KWin::SurfacePixmapX11::pixmap() const
libkwin.so.6:KWin::SurfacePixmapX11::visual() const
libkwin.so.6:KWin::SurfacePixmapX11::isValid() const
libkwin.so.6:KWin::SyncReleasePoint::timelinePoint() const
libkwin.so.6:KWin::SyncReleasePoint::timeline() const
libkwin.so.6:KWin::ContrastInterface::metaObject() const
libkwin.so.6:KWin::ContrastInterface::saturation() const
libkwin.so.6:KWin::ContrastInterface::frost() const
libkwin.so.6:KWin::ContrastInterface::region() const
libkwin.so.6:KWin::ContrastInterface::contrast() const
libkwin.so.6:KWin::ContrastInterface::intensity() const
libkwin.so.6:KWin::DebugConsoleModel::metaObject() const
libkwin.so.6:KWin::DebugConsoleModel::columnCount(QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::propertyData(QObject*, QModelIndex const&, int) const
libkwin.so.6:KWin::DebugConsoleModel::waylandWindow(QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::internalWindow(QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::topLevelRowCount() const
libkwin.so.6:KWin::DebugConsoleModel::data(QModelIndex const&, int) const
libkwin.so.6:KWin::DebugConsoleModel::index(int, int, QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::parent(QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::rowCount(QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::unmanaged(QModelIndex const&) const
libkwin.so.6:KWin::DebugConsoleModel::x11Window(QModelIndex const&) const
libkwin.so.6:KWin::EffectWindowGroup::members() const
libkwin.so.6:KWin::GestureRecognizer::metaObject() const
libkwin.so.6:KWin::InputMethodGrabV1::metaObject() const
libkwin.so.6:KWin::KeyStateInterface::metaObject() const
libkwin.so.6:KWin::KeyboardInterface::metaObject() const
libkwin.so.6:KWin::KeyboardInterface::keyRepeatRate() const
libkwin.so.6:KWin::KeyboardInterface::focusedSurface() const
libkwin.so.6:KWin::KeyboardInterface::keyRepeatDelay() const
libkwin.so.6:KWin::QPainterSwapchain::size() const
libkwin.so.6:KWin::QPainterSwapchain::format() const
libkwin.so.6:KWin::ShapeCursorSource::metaObject() const
libkwin.so.6:KWin::ShapeCursorSource::image() const
libkwin.so.6:KWin::ShapeCursorSource::shape() const
libkwin.so.6:KWin::ShapeCursorSource::theme() const
libkwin.so.6:KWin::TabletModeManager::metaObject() const
libkwin.so.6:KWin::TabletModeManager::configuredMode() const
libkwin.so.6:KWin::TabletModeManager::effectiveTabletMode() const
libkwin.so.6:KWin::TabletModeManager::isTabletModeAvailable() const
libkwin.so.6:KWin::TabletModeManager::isTablet() const
libkwin.so.6:KWin::TabletV2Interface::metaObject() const
libkwin.so.6:KWin::TabletV2Interface::isSurfaceSupported(KWin::SurfaceInterface*) const
libkwin.so.6:KWin::TabletV2Interface::pad() const
libkwin.so.6:KWin::WaylandCompositor::metaObject() const
libkwin.so.6:KWin::WindowItemWayland::metaObject() const
libkwin.so.6:KWin::X11WindowedOutput::metaObject() const
libkwin.so.6:KWin::X11WindowedOutput::renderLoop() const
libkwin.so.6:KWin::X11WindowedOutput::exposedArea() const
libkwin.so.6:KWin::X11WindowedOutput::hostPosition() const
libkwin.so.6:KWin::X11WindowedOutput::mapFromGlobal(QPointF const&) const
libkwin.so.6:KWin::X11WindowedOutput::internalPosition() const
libkwin.so.6:KWin::X11WindowedOutput::depth() const
libkwin.so.6:KWin::X11WindowedOutput::cursor() const
libkwin.so.6:KWin::X11WindowedOutput::window() const
libkwin.so.6:KWin::X11WindowedOutput::backend() const
libkwin.so.6:KWin::XdgPopupInterface::metaObject() const
libkwin.so.6:KWin::XdgPopupInterface::positioner() const
libkwin.so.6:KWin::XdgPopupInterface::xdgSurface() const
libkwin.so.6:KWin::XdgPopupInterface::isConfigured() const
libkwin.so.6:KWin::XdgPopupInterface::parentSurface() const
libkwin.so.6:KWin::XdgPopupInterface::surface() const
libkwin.so.6:KWin::XdgShellInterface::metaObject() const
libkwin.so.6:KWin::XdgShellInterface::pingTimeoutInterval() const
libkwin.so.6:KWin::XdgShellInterface::display() const
libkwin.so.6:KWin::AbstractDataSource::metaObject() const
libkwin.so.6:KWin::AbstractEglBackend::isOpenGLES() const
libkwin.so.6:KWin::AbstractEglBackend::metaObject() const
libkwin.so.6:KWin::AbstractEglBackend::openglContext() const
libkwin.so.6:KWin::AbstractEglBackend::eglDisplayObject() const
libkwin.so.6:KWin::AbstractEglBackend::openglContextRef() const
libkwin.so.6:KWin::AbstractEglBackend::supportedFormats() const
libkwin.so.6:KWin::AbstractEglBackend::hasClientExtension(QByteArray const&) const
libkwin.so.6:KWin::AbstractEglBackend::importDmaBufAsImage(KWin::DmaBufAttributes const&) const
libkwin.so.6:KWin::AbstractEglBackend::importDmaBufAsImage(KWin::DmaBufAttributes const&, int, int, QSize const&) const
libkwin.so.6:KWin::AbstractEglBackend::importDmaBufAsTexture(KWin::DmaBufAttributes const&) const
libkwin.so.6:KWin::AbstractEglBackend::config() const
libkwin.so.6:KWin::AbstractEglBackend::tranches() const
libkwin.so.6:KWin::ColorPipelineStage::dup() const
libkwin.so.6:KWin::ColorPipelineStage::stage() const
libkwin.so.6:KWin::DataOfferInterface::metaObject() const
libkwin.so.6:KWin::DataOfferInterface::preferredDragAndDropAction() const
libkwin.so.6:KWin::DataOfferInterface::supportedDragAndDropActions() const
libkwin.so.6:KWin::DataOfferInterface::resource() const
libkwin.so.6:KWin::DecorationRenderer::metaObject() const
libkwin.so.6:KWin::DecorationRenderer::devicePixelRatio() const
libkwin.so.6:KWin::DecorationRenderer::effectiveDevicePixelRatio() const
libkwin.so.6:KWin::DecorationRenderer::client() const
libkwin.so.6:KWin::DecorationRenderer::damage() const
libkwin.so.6:KWin::GraphicsBufferView::image() const
libkwin.so.6:KWin::GraphicsBufferView::isNull() const
libkwin.so.6:KWin::InputDeviceHandler::decoration() const
libkwin.so.6:KWin::InputDeviceHandler::metaObject() const
libkwin.so.6:KWin::InputDeviceHandler::focus() const
libkwin.so.6:KWin::InputDeviceHandler::hover() const
libkwin.so.6:KWin::ItemRendererOpenGL::modulate(float, float) const
libkwin.so.6:KWin::OffscreenQuickView::metaObject() const
libkwin.so.6:KWin::OffscreenQuickView::contentItem() const
libkwin.so.6:KWin::OffscreenQuickView::bufferAsImage() const
libkwin.so.6:KWin::OffscreenQuickView::hasAlphaChannel() const
libkwin.so.6:KWin::OffscreenQuickView::automaticRepaint() const
libkwin.so.6:KWin::OffscreenQuickView::size() const
libkwin.so.6:KWin::OffscreenQuickView::window() const
libkwin.so.6:KWin::OffscreenQuickView::opacity() const
libkwin.so.6:KWin::OffscreenQuickView::geometry() const
libkwin.so.6:KWin::OffscreenQuickView::isVisible() const
libkwin.so.6:KWin::SurfaceItemWayland::metaObject() const
libkwin.so.6:KWin::SurfaceItemWayland::contentType() const
libkwin.so.6:KWin::SurfaceItemWayland::shape() const
libkwin.so.6:KWin::SurfaceItemWayland::opaque() const
libkwin.so.6:KWin::SurfaceItemWayland::surface() const
libkwin.so.6:KWin::WindowItemInternal::metaObject() const
libkwin.so.6:KWin::X11WindowedBackend::connection() const
libkwin.so.6:KWin::X11WindowedBackend::driFormats() const
libkwin.so.6:KWin::X11WindowedBackend::findOutput(unsigned int) const
libkwin.so.6:KWin::X11WindowedBackend::metaObject() const
libkwin.so.6:KWin::X11WindowedBackend::rootWindow() const
libkwin.so.6:KWin::X11WindowedBackend::screenNumer() const
libkwin.so.6:KWin::X11WindowedBackend::touchDevice() const
libkwin.so.6:KWin::X11WindowedBackend::pointerDevice() const
libkwin.so.6:KWin::X11WindowedBackend::keyboardDevice() const
libkwin.so.6:KWin::X11WindowedBackend::driMajorVersion() const
libkwin.so.6:KWin::X11WindowedBackend::driMinorVersion() const
libkwin.so.6:KWin::X11WindowedBackend::driFormatForDepth(int) const
libkwin.so.6:KWin::X11WindowedBackend::supportedCompositors() const
libkwin.so.6:KWin::X11WindowedBackend::sceneEglDisplayObject() const
libkwin.so.6:KWin::X11WindowedBackend::screen() const
libkwin.so.6:KWin::X11WindowedBackend::display() const
libkwin.so.6:KWin::X11WindowedBackend::outputs() const
libkwin.so.6:KWin::X11WindowedBackend::drmDevice() const
libkwin.so.6:KWin::X11WindowedBackend::hasXInput() const
libkwin.so.6:KWin::XdgExportedSurface::metaObject() const
libkwin.so.6:KWin::XdgExportedSurface::handle() const
libkwin.so.6:KWin::XdgExportedSurface::surface() const
libkwin.so.6:KWin::AbstractDropHandler::metaObject() const
libkwin.so.6:KWin::ColorTransformation::valid() const
libkwin.so.6:KWin::ColorTransformation::transform(QVector3D) const
libkwin.so.6:KWin::ColorTransformation::transform(unsigned short, unsigned short, unsigned short) const
libkwin.so.6:KWin::CompositorInterface::metaObject() const
libkwin.so.6:KWin::CompositorInterface::display() const
libkwin.so.6:KWin::DataDeviceInterface::metaObject() const
libkwin.so.6:KWin::DataDeviceInterface::seat() const
libkwin.so.6:KWin::DataDeviceInterface::selection() const
libkwin.so.6:KWin::DataSourceInterface::isAccepted() const
libkwin.so.6:KWin::DataSourceInterface::metaObject() const
libkwin.so.6:KWin::DataSourceInterface::xdgToplevelDrag() const
libkwin.so.6:KWin::DataSourceInterface::selectedDndAction() const
libkwin.so.6:KWin::DataSourceInterface::supportedDragAndDropActions() const
libkwin.so.6:KWin::DataSourceInterface::client() const
libkwin.so.6:KWin::DataSourceInterface::resource() const
libkwin.so.6:KWin::DataSourceInterface::mimeTypes() const
libkwin.so.6:KWin::EffectPluginFactory::metaObject() const
libkwin.so.6:KWin::EffectPluginFactory::isSupported() const
libkwin.so.6:KWin::EffectPluginFactory::enabledByDefault() const
libkwin.so.6:KWin::OffscreenQuickScene::rootItem() const
libkwin.so.6:KWin::OutputConfiguration::constChangeSet(KWin::Output*) const
libkwin.so.6:KWin::RenderLayerDelegate::scanoutCandidate() const
libkwin.so.6:KWin::RenderLayerDelegate::layer() const
libkwin.so.6:KWin::ScreenLockerWatcher::metaObject() const
libkwin.so.6:KWin::ScreenLockerWatcher::isLocked() const
libkwin.so.6:KWin::SubSurfaceInterface::metaObject() const
libkwin.so.6:KWin::SubSurfaceInterface::mainSurface() const
libkwin.so.6:KWin::SubSurfaceInterface::parentSurface() const
libkwin.so.6:KWin::SubSurfaceInterface::isSynchronized() const
libkwin.so.6:KWin::SubSurfaceInterface::mode() const
libkwin.so.6:KWin::SubSurfaceInterface::surface() const
libkwin.so.6:KWin::SubSurfaceInterface::position() const
libkwin.so.6:KWin::SurfaceCursorSource::metaObject() const
libkwin.so.6:KWin::SurfaceCursorSource::surface() const
libkwin.so.6:KWin::SurfaceItemInternal::metaObject() const
libkwin.so.6:KWin::SurfaceItemInternal::shape() const
libkwin.so.6:KWin::SurfaceItemInternal::window() const
libkwin.so.6:KWin::SurfaceItemXwayland::metaObject() const
libkwin.so.6:KWin::SurfaceItemXwayland::shape() const
libkwin.so.6:KWin::SurfaceItemXwayland::opaque() const
libkwin.so.6:KWin::ViewporterInterface::metaObject() const
libkwin.so.6:KWin::VirtualKeyboardDBus::metaObject() const
libkwin.so.6:KWin::VirtualKeyboardDBus::isAvailable() const
libkwin.so.6:KWin::VirtualKeyboardDBus::willShowOnActive() const
libkwin.so.6:KWin::VirtualKeyboardDBus::activeClientSupportsTextInput() const
libkwin.so.6:KWin::VirtualKeyboardDBus::isActive() const
libkwin.so.6:KWin::VirtualKeyboardDBus::isEnabled() const
libkwin.so.6:KWin::VirtualKeyboardDBus::isVisible() const
libkwin.so.6:KWin::XdgSurfaceInterface::metaObject() const
libkwin.so.6:KWin::XdgSurfaceInterface::isConfigured() const
libkwin.so.6:KWin::XdgSurfaceInterface::windowGeometry() const
libkwin.so.6:KWin::XdgSurfaceInterface::popup() const
libkwin.so.6:KWin::XdgSurfaceInterface::shell() const
libkwin.so.6:KWin::XdgSurfaceInterface::surface() const
libkwin.so.6:KWin::XdgSurfaceInterface::toplevel() const
libkwin.so.6:KWin::AbstractEffectLoader::metaObject() const
libkwin.so.6:KWin::AbstractEffectLoader::readConfig(QString const&, bool) const
libkwin.so.6:KWin::BlurManagerInterface::metaObject() const
libkwin.so.6:KWin::DpmsInputEventFilter::metaObject() const
libkwin.so.6:KWin::DpmsManagerInterface::metaObject() const
libkwin.so.6:KWin::EffectTogglableState::inProgress() const
libkwin.so.6:KWin::EffectTogglableState::metaObject() const
libkwin.so.6:KWin::ItemRendererQPainter::renderItem(QPainter*, KWin::Item*) const
libkwin.so.6:KWin::ItemRendererQPainter::renderImageItem(QPainter*, KWin::ImageItem*) const
libkwin.so.6:KWin::ItemRendererQPainter::renderSurfaceItem(QPainter*, KWin::SurfaceItem*) const
libkwin.so.6:KWin::ItemRendererQPainter::renderDecorationItem(QPainter*, KWin::DecorationItem*) const
libkwin.so.6:KWin::ItemRendererQPainter::painter() const
libkwin.so.6:KWin::OpenGLSurfaceTexture::backend() const
libkwin.so.6:KWin::OpenGLSurfaceTexture::isValid() const
libkwin.so.6:KWin::OpenGLSurfaceTexture::texture() const
libkwin.so.6:KWin::PlasmaShellInterface::metaObject() const
libkwin.so.6:KWin::PointerSurfaceCursor::hotspot() const
libkwin.so.6:KWin::PointerSurfaceCursor::surface() const
libkwin.so.6:KWin::ScriptedEffectLoader::findEffect(QString const&) const
libkwin.so.6:KWin::ScriptedEffectLoader::metaObject() const
libkwin.so.6:KWin::ScriptedEffectLoader::findAllEffects() const
libkwin.so.6:KWin::ScriptedEffectLoader::isEffectSupported(QString const&) const
libkwin.so.6:KWin::ScriptedEffectLoader::listOfKnownEffects() const
libkwin.so.6:KWin::ScriptedEffectLoader::hasEffect(QString const&) const
libkwin.so.6:KWin::SoftwareVsyncMonitor::metaObject() const
libkwin.so.6:KWin::SoftwareVsyncMonitor::refreshRate() const
libkwin.so.6:KWin::SurfacePixmapWayland::metaObject() const
libkwin.so.6:KWin::SurfacePixmapWayland::isValid() const
libkwin.so.6:KWin::TabletPadV2Interface::metaObject() const
libkwin.so.6:KWin::TabletPadV2Interface::currentSurface() const
libkwin.so.6:KWin::TabletPadV2Interface::ring(unsigned int) const
libkwin.so.6:KWin::TabletPadV2Interface::strip(unsigned int) const
libkwin.so.6:KWin::TextInputV1Interface::metaObject() const
libkwin.so.6:KWin::TextInputV1Interface::contentHints() const
libkwin.so.6:KWin::TextInputV1Interface::contentPurpose() const
libkwin.so.6:KWin::TextInputV1Interface::cursorRectangle() const
libkwin.so.6:KWin::TextInputV1Interface::surroundingText() const
libkwin.so.6:KWin::TextInputV1Interface::preferredLanguage() const
libkwin.so.6:KWin::TextInputV1Interface::clientSupportsTextInput(KWin::ClientConnection*) const
libkwin.so.6:KWin::TextInputV1Interface::surroundingTextCursorPosition() const
libkwin.so.6:KWin::TextInputV1Interface::surroundingTextSelectionAnchor() const
libkwin.so.6:KWin::TextInputV1Interface::surface() const
libkwin.so.6:KWin::TextInputV1Interface::isEnabled() const
libkwin.so.6:KWin::TextInputV2Interface::metaObject() const
libkwin.so.6:KWin::TextInputV2Interface::contentHints() const
libkwin.so.6:KWin::TextInputV2Interface::contentPurpose() const
libkwin.so.6:KWin::TextInputV2Interface::cursorRectangle() const
libkwin.so.6:KWin::TextInputV2Interface::surroundingText() const
libkwin.so.6:KWin::TextInputV2Interface::preferredLanguage() const
libkwin.so.6:KWin::TextInputV2Interface::clientSupportsTextInput(KWin::ClientConnection*) const
libkwin.so.6:KWin::TextInputV2Interface::surroundingTextCursorPosition() const
libkwin.so.6:KWin::TextInputV2Interface::surroundingTextSelectionAnchor() const
libkwin.so.6:KWin::TextInputV2Interface::surface() const
libkwin.so.6:KWin::TextInputV2Interface::isEnabled() const
libkwin.so.6:KWin::TextInputV3Interface::metaObject() const
libkwin.so.6:KWin::TextInputV3Interface::contentHints() const
libkwin.so.6:KWin::TextInputV3Interface::contentPurpose() const
libkwin.so.6:KWin::TextInputV3Interface::cursorRectangle() const
libkwin.so.6:KWin::TextInputV3Interface::surroundingText() const
libkwin.so.6:KWin::TextInputV3Interface::clientSupportsTextInput(KWin::ClientConnection*) const
libkwin.so.6:KWin::TextInputV3Interface::surroundingTextCursorPosition() const
libkwin.so.6:KWin::TextInputV3Interface::surroundingTextSelectionAnchor() const
libkwin.so.6:KWin::TextInputV3Interface::surface() const
libkwin.so.6:KWin::TextInputV3Interface::isEnabled() const
libkwin.so.6:KWin::WorkspaceSceneOpenGL::metaObject() const
libkwin.so.6:KWin::WorkspaceSceneOpenGL::openglContext() const
libkwin.so.6:KWin::WorkspaceSceneOpenGL::textureForOutput(KWin::Output*) const
libkwin.so.6:KWin::WorkspaceSceneOpenGL::animationsSupported() const
libkwin.so.6:KWin::WorkspaceSceneOpenGL::supportsNativeFence() const
libkwin.so.6:KWin::XdgToplevelInterface::metaObject() const
libkwin.so.6:KWin::XdgToplevelInterface::xdgSurface() const
libkwin.so.6:KWin::XdgToplevelInterface::maximumSize() const
libkwin.so.6:KWin::XdgToplevelInterface::minimumSize() const
libkwin.so.6:KWin::XdgToplevelInterface::windowClass() const
libkwin.so.6:KWin::XdgToplevelInterface::windowTitle() const
libkwin.so.6:KWin::XdgToplevelInterface::isConfigured() const
libkwin.so.6:KWin::XdgToplevelInterface::parentXdgToplevel() const
libkwin.so.6:KWin::XdgToplevelInterface::shell() const
libkwin.so.6:KWin::XdgToplevelInterface::surface() const
libkwin.so.6:KWin::IdleNotifyV1Interface::metaObject() const
libkwin.so.6:KWin::InputPanelV1Interface::metaObject() const
libkwin.so.6:KWin::LayerShellV1Interface::metaObject() const
libkwin.so.6:KWin::LayerShellV1Interface::display() const
libkwin.so.6:KWin::LinuxDmaBufV1Feedback::metaObject() const
libkwin.so.6:KWin::PlasmaWindowInterface::internalId() const
libkwin.so.6:KWin::PlasmaWindowInterface::metaObject() const
libkwin.so.6:KWin::PlasmaWindowInterface::plasmaActivities() const
libkwin.so.6:KWin::PlasmaWindowInterface::minimizedGeometries() const
libkwin.so.6:KWin::PlasmaWindowInterface::plasmaVirtualDesktops() const
libkwin.so.6:KWin::PlasmaWindowInterface::uuid() const
libkwin.so.6:KWin::QPainterSwapchainSlot::age() const
libkwin.so.6:KWin::QPainterSwapchainSlot::view() const
libkwin.so.6:KWin::QPainterSwapchainSlot::buffer() const
libkwin.so.6:KWin::ScreencastV1Interface::metaObject() const
libkwin.so.6:KWin::SlideManagerInterface::metaObject() const
libkwin.so.6:KWin::SurfacePixmapInternal::metaObject() const
libkwin.so.6:KWin::SurfacePixmapInternal::isValid() const
libkwin.so.6:KWin::TabletSeatV2Interface::metaObject() const
libkwin.so.6:KWin::TabletSeatV2Interface::hasImplicitGrab(unsigned int) const
libkwin.so.6:KWin::TabletSeatV2Interface::toolByHardwareId(unsigned long long) const
libkwin.so.6:KWin::TabletSeatV2Interface::isClientSupported(KWin::ClientConnection*) const
libkwin.so.6:KWin::TabletSeatV2Interface::toolByHardwareSerial(unsigned long long, KWin::TabletToolV2Interface::Type) const
libkwin.so.6:KWin::TabletSeatV2Interface::padByName(QString const&) const
libkwin.so.6:KWin::TabletSurfaceCursorV2::metaObject() const
libkwin.so.6:KWin::TabletSurfaceCursorV2::enteredSerial() const
libkwin.so.6:KWin::TabletSurfaceCursorV2::hotspot() const
libkwin.so.6:KWin::TabletSurfaceCursorV2::surface() const
libkwin.so.6:KWin::TabletToolV2Interface::downSerial() const
libkwin.so.6:KWin::TabletToolV2Interface::metaObject() const
libkwin.so.6:KWin::TabletToolV2Interface::hasCapability(KWin::TabletToolV2Interface::Capability) const
libkwin.so.6:KWin::TabletToolV2Interface::currentSurface() const
libkwin.so.6:KWin::TabletToolV2Interface::proximitySerial() const
libkwin.so.6:KWin::TabletToolV2Interface::isClientSupported() const
libkwin.so.6:KWin::TouchInputRedirection::metaObject() const
libkwin.so.6:KWin::TouchInputRedirection::positionValid() const
libkwin.so.6:KWin::VirtualDesktopManager::metaObject() const
libkwin.so.6:KWin::VirtualDesktopManager::defaultName(int) const
libkwin.so.6:KWin::VirtualDesktopManager::desktopForId(QString const&) const
libkwin.so.6:KWin::VirtualDesktopManager::currentDesktop() const
libkwin.so.6:KWin::VirtualDesktopManager::desktopForX11Id(unsigned int) const
libkwin.so.6:KWin::VirtualDesktopManager::next(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::VirtualDesktopManager::rows() const
libkwin.so.6:KWin::VirtualDesktopManager::above(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::VirtualDesktopManager::below(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::VirtualDesktopManager::toLeft(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::VirtualDesktopManager::current() const
libkwin.so.6:KWin::VirtualDesktopManager::toRight(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::VirtualDesktopManager::previous(KWin::VirtualDesktop*, bool) const
libkwin.so.6:KWin::XdgForeignV2Interface::metaObject() const
libkwin.so.6:KWin::InputMethodV1Interface::metaObject() const
libkwin.so.6:KWin::InputMethodV1Interface::context() const
libkwin.so.6:KWin::QPainterSurfaceTexture::image() const
libkwin.so.6:KWin::QPainterSurfaceTexture::backend() const
libkwin.so.6:KWin::QPainterSurfaceTexture::isValid() const
libkwin.so.6:KWin::ShadowManagerInterface::metaObject() const
libkwin.so.6:KWin::SubCompositorInterface::metaObject() const
libkwin.so.6:KWin::WorkspaceSceneQPainter::metaObject() const
libkwin.so.6:KWin::AppMenuManagerInterface::metaObject() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::leftMargin() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::metaObject() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::desiredSize() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::isCommitted() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::rightMargin() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::acceptsFocus() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::bottomMargin() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::exclusiveEdge() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::exclusiveZone() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::layer() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::scope() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::anchor() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::output() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::margins() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::surface() const
libkwin.so.6:KWin::LayerSurfaceV1Interface::topMargin() const
libkwin.so.6:KWin::OutputDeviceV2Interface::metaObject() const
libkwin.so.6:KWin::OutputDeviceV2Interface::handle() const
libkwin.so.6:KWin::PointerInputRedirection::metaObject() const
libkwin.so.6:KWin::PointerInputRedirection::cursorTheme() const
libkwin.so.6:KWin::PointerInputRedirection::edgeBarrier(KWin::PointerInputRedirection::EdgeBarrierType) const
libkwin.so.6:KWin::PointerInputRedirection::edgeBarrierType(QPointF const&, QRectF const&) const
libkwin.so.6:KWin::PointerInputRedirection::supportsWarping() const
libkwin.so.6:KWin::PointerInputRedirection::areButtonsPressed() const
libkwin.so.6:KWin::PointerInputRedirection::applyPointerConfinement(QPointF const&) const
libkwin.so.6:KWin::PointerInputRedirection::position() const
libkwin.so.6:KWin::ContrastManagerInterface::metaObject() const
libkwin.so.6:KWin::KeyboardInputRedirection::metaObject() const
libkwin.so.6:KWin::KeyboardInputRedirection::keyboardLayout() const
libkwin.so.6:KWin::KeyboardInputRedirection::modifiersRelevantForGlobalShortcuts() const
libkwin.so.6:KWin::KeyboardInputRedirection::xkb() const
libkwin.so.6:KWin::KeyboardInputRedirection::modifiers() const
libkwin.so.6:KWin::LockedPointerV1Interface::metaObject() const
libkwin.so.6:KWin::LockedPointerV1Interface::cursorPositionHint() const
libkwin.so.6:KWin::LockedPointerV1Interface::region() const
libkwin.so.6:KWin::LockedPointerV1Interface::isLocked() const
libkwin.so.6:KWin::LockedPointerV1Interface::lifeTime() const
libkwin.so.6:KWin::TabletManagerV2Interface::metaObject() const
libkwin.so.6:KWin::TabletManagerV2Interface::seat(KWin::SeatInterface*) const
libkwin.so.6:KWin::TabletPadRingV2Interface::metaObject() const
libkwin.so.6:KWin::XdgActivationV1Interface::metaObject() const
libkwin.so.6:KWin::XwaylandShellV1Interface::metaObject() const
libkwin.so.6:KWin::XwaylandShellV1Interface::findSurface(unsigned long) const
libkwin.so.6:KWin::TabletPadGroupV2Interface::metaObject() const
libkwin.so.6:KWin::TabletPadStripV2Interface::metaObject() const
libkwin.so.6:KWin::ConfinedPointerV1Interface::isConfined() const
libkwin.so.6:KWin::ConfinedPointerV1Interface::metaObject() const
libkwin.so.6:KWin::ConfinedPointerV1Interface::region() const
libkwin.so.6:KWin::ConfinedPointerV1Interface::lifeTime() const
libkwin.so.6:KWin::DataDeviceManagerInterface::metaObject() const
libkwin.so.6:KWin::DrmClientBufferIntegration::metaObject() const
libkwin.so.6:KWin::EglContextAttributeBuilder::build() const
libkwin.so.6:KWin::LinuxDrmSyncObjV1Interface::metaObject() const
libkwin.so.6:KWin::PointerGesturesV1Interface::metaObject() const
libkwin.so.6:KWin::ShmClientBufferIntegration::metaObject() const
libkwin.so.6:KWin::XdgActivationV1Integration::metaObject() const
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::metaObject() const
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::serial() const
libkwin.so.6:KWin::XwaylandSurfaceV1Interface::surface() const
libkwin.so.6:KWin::DataControlOfferV1Interface::metaObject() const
libkwin.so.6:KWin::DataControlOfferV1Interface::resource() const
libkwin.so.6:KWin::OutputDeviceModeV2Interface::metaObject() const
libkwin.so.6:KWin::OutputDeviceModeV2Interface::handle() const
libkwin.so.6:KWin::OutputManagementV2Interface::metaObject() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::metaObject() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::skipTaskbar() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::skipSwitcher() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::isPositionSet() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::panelBehavior() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::panelTakesFocus() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::wantsOpenUnderCursor() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::role() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::surface() const
libkwin.so.6:KWin::PlasmaShellSurfaceInterface::position() const
libkwin.so.6:KWin::ScreencastStreamV1Interface::metaObject() const
libkwin.so.6:KWin::TextInputManagerV1Interface::metaObject() const
libkwin.so.6:KWin::TextInputManagerV2Interface::metaObject() const
libkwin.so.6:KWin::TextInputManagerV3Interface::metaObject() const
libkwin.so.6:KWin::XdgOutputManagerV1Interface::metaObject() const
libkwin.so.6:KWin::DataControlDeviceV1Interface::metaObject() const
libkwin.so.6:KWin::DataControlDeviceV1Interface::primarySelection() const
libkwin.so.6:KWin::DataControlDeviceV1Interface::seat() const
libkwin.so.6:KWin::DataControlDeviceV1Interface::selection() const
libkwin.so.6:KWin::DataControlSourceV1Interface::metaObject() const
libkwin.so.6:KWin::DataControlSourceV1Interface::client() const
libkwin.so.6:KWin::DataControlSourceV1Interface::mimeTypes() const
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::metaObject() const
libkwin.so.6:KWin::InputPanelSurfaceV1Interface::surface() const
libkwin.so.6:KWin::LockscreenOverlayV1Interface::metaObject() const
libkwin.so.6:KWin::ScreenEdgeManagerV1Interface::metaObject() const
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::metaObject() const
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::border() const
libkwin.so.6:KWin::AutoHideScreenEdgeV1Interface::surface() const
libkwin.so.6:KWin::BasicEGLSurfaceTextureWayland::backend() const
libkwin.so.6:KWin::CursorShapeManagerV1Interface::metaObject() const
libkwin.so.6:KWin::IdleInhibitManagerV1Interface::metaObject() const
libkwin.so.6:KWin::InputMethodContextV1Interface::metaObject() const
libkwin.so.6:KWin::InputMethodContextV1Interface::keyboardGrab() const
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::metaObject() const
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::id() const
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::name() const
libkwin.so.6:KWin::PlasmaVirtualDesktopInterface::isActive() const
libkwin.so.6:KWin::PointerConstraintsV1Interface::metaObject() const
libkwin.so.6:KWin::ServerSideDecorationInterface::metaObject() const
libkwin.so.6:KWin::ServerSideDecorationInterface::preferredMode() const
libkwin.so.6:KWin::ServerSideDecorationInterface::mode() const
libkwin.so.6:KWin::ServerSideDecorationInterface::surface() const
libkwin.so.6:KWin::PlasmaWindowManagementInterface::metaObject() const
libkwin.so.6:KWin::PlasmaWindowManagementInterface::plasmaVirtualDesktopManagementInterface() const
libkwin.so.6:KWin::PlasmaWindowManagementInterface::windows() const
libkwin.so.6:KWin::XWaylandKeyboardGrabV1Interface::metaObject() const
libkwin.so.6:KWin::XdgDecorationManagerV1Interface::metaObject() const
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::metaObject() const
libkwin.so.6:KWin::PrimarySelectionOfferV1Interface::resource() const
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::metaObject() const
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::preferredMode() const
libkwin.so.6:KWin::XdgToplevelDecorationV1Interface::toplevel() const
libkwin.so.6:KWin::FractionalScaleManagerV1Interface::metaObject() const
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::metaObject() const
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::seat() const
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::client() const
libkwin.so.6:KWin::PrimarySelectionDeviceV1Interface::selection() const
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::metaObject() const
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::client() const
libkwin.so.6:KWin::PrimarySelectionSourceV1Interface::mimeTypes() const
libkwin.so.6:KWin::RelativePointerManagerV1Interface::metaObject() const
libkwin.so.6:KWin::EglOpenGLESContextAttributeBuilder::build() const
libkwin.so.6:KWin::DataControlDeviceManagerV1Interface::metaObject() const
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::metaObject() const
libkwin.so.6:KWin::LinuxDmaBufV1ClientBufferIntegration::renderBackend() const
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::metaObject() const
libkwin.so.6:KWin::ServerSideDecorationManagerInterface::defaultMode() const
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::metaObject() const
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::palette() const
libkwin.so.6:KWin::ServerSideDecorationPaletteInterface::surface() const
libkwin.so.6:KWin::AbstractOpenGLContextAttributeBuilder::operator<<(QDebug) const
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::metaObject() const
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::seat() const
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::surface() const
libkwin.so.6:KWin::KeyboardShortcutsInhibitorV1Interface::isActive() const
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::metaObject() const
libkwin.so.6:KWin::XWaylandKeyboardGrabManagerV1Interface::hasGrab(KWin::SurfaceInterface*, KWin::SeatInterface*) const
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::metaObject() const
libkwin.so.6:KWin::PlasmaVirtualDesktopManagementInterface::desktops() const
libkwin.so.6:KWin::PlasmaWindowActivationFeedbackInterface::metaObject() const
libkwin.so.6:KWin::Xcb::Extensions::extensions() const
libkwin.so.6:KWin::Xcb::Extensions::randrNotifyEvent() const
libkwin.so.6:KWin::Xcb::Extensions::shapeNotifyEvent() const
libkwin.so.6:KWin::Xcb::Extensions::damageNotifyEvent() const
libkwin.so.6:KWin::Xcb::Extensions::syncAlarmNotifyEvent() const
libkwin.so.6:KWin::Xcb::Extensions::isShapeInputAvailable() const
libkwin.so.6:KWin::Xcb::Extensions::fixesCursorNotifyEvent() const
libkwin.so.6:KWin::Xcb::Extensions::isFixesRegionAvailable() const
libkwin.so.6:KWin::Xcb::Extensions::fixesSelectionNotifyEvent() const
libkwin.so.6:KWin::Xcb::Extensions::isCompositeOverlayAvailable() const
libkwin.so.6:KWin::Xcb::Extensions::hasShape(unsigned int) const
libkwin.so.6:KWin::Xkb::layoutName(unsigned int) const
libkwin.so.6:KWin::Xkb::layoutName() const
libkwin.so.6:KWin::Xkb::metaObject() const
libkwin.so.6:KWin::Xkb::keymapContents() const
libkwin.so.6:KWin::Xkb::layoutShortName(int) const
libkwin.so.6:KWin::Xkb::numberOfLayouts() const
libkwin.so.6:KWin::Xkb::shouldKeyRepeat(unsigned int) const
libkwin.so.6:KWin::Xkb::modifiersRelevantForGlobalShortcuts(unsigned int) const
libkwin.so.6:KWin::Xkb::toQtKey(unsigned int, unsigned int, QFlags<Qt::KeyboardModifier>, bool) const
libkwin.so.6:KWin::PrimarySelectionDeviceManagerV1Interface::metaObject() const
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::metaObject() const
libkwin.so.6:KWin::KeyboardShortcutsInhibitManagerV1Interface::findInhibitor(KWin::SurfaceInterface*, KWin::SeatInterface*) const
libkwin.so.6:KWin::ServerSideDecorationPaletteManagerInterface::metaObject() const
libkwin.so.6:KWin::Edge::metaObject() const
libkwin.so.6:KWin::Edge::triggersFor(QPoint const&) const
libkwin.so.6:KWin::Edge::approachWindow() const
libkwin.so.6:KWin::Edge::activatesForPointer() const
libkwin.so.6:KWin::Edge::activatesForTouchGesture() const
libkwin.so.6:KWin::Edge::output() const
libkwin.so.6:KWin::Edge::window() const
libkwin.so.6:KWin::Edid::identifier() const
libkwin.so.6:KWin::Edid::nameString() const
libkwin.so.6:KWin::Edid::supportsPQ() const
libkwin.so.6:KWin::Edid::colorimetry() const
libkwin.so.6:KWin::Edid::monitorName() const
libkwin.so.6:KWin::Edid::physicalSize() const
libkwin.so.6:KWin::Edid::serialNumber() const
libkwin.so.6:KWin::Edid::supportsBT2020() const
libkwin.so.6:KWin::Edid::manufacturerString() const
libkwin.so.6:KWin::Edid::desiredMaxLuminance() const
libkwin.so.6:KWin::Edid::desiredMinLuminance() const
libkwin.so.6:KWin::Edid::desiredMaxFrameAverageLuminance() const
libkwin.so.6:KWin::Edid::raw() const
libkwin.so.6:KWin::Edid::hash() const
libkwin.so.6:KWin::Edid::eisaId() const
libkwin.so.6:KWin::Edid::vendor() const
libkwin.so.6:KWin::Edid::isValid() const
libkwin.so.6:KWin::Item::buildQuads() const
libkwin.so.6:KWin::Item::childItems() const
libkwin.so.6:KWin::Item::mapToScene(QRectF const&) const
libkwin.so.6:KWin::Item::mapToScene(QRegion const&) const
libkwin.so.6:KWin::Item::metaObject() const
libkwin.so.6:KWin::Item::parentItem() const
libkwin.so.6:KWin::Item::boundingRect() const
libkwin.so.6:KWin::Item::mapFromScene(QRectF const&) const
libkwin.so.6:KWin::Item::explicitVisible() const
libkwin.so.6:KWin::Item::colorDescription() const
libkwin.so.6:KWin::Item::presentationHint() const
libkwin.so.6:KWin::Item::sortedChildItems() const
libkwin.so.6:KWin::Item::z() const
libkwin.so.6:KWin::Item::computeEffectiveVisibility() const
libkwin.so.6:KWin::Item::rect() const
libkwin.so.6:KWin::Item::size() const
libkwin.so.6:KWin::Item::quads() const
libkwin.so.6:KWin::Item::scene() const
libkwin.so.6:KWin::Item::shape() const
libkwin.so.6:KWin::Item::opaque() const
libkwin.so.6:KWin::Item::opacity() const
libkwin.so.6:KWin::Item::position() const
libkwin.so.6:KWin::Item::repaints(KWin::SceneDelegate*) const
libkwin.so.6:KWin::Item::isVisible() const
libkwin.so.6:KWin::Item::transform() const
libkwin.so.6:KWin::Tile::childCount() const
libkwin.so.6:KWin::Tile::childTiles() const
libkwin.so.6:KWin::Tile::metaObject() const
libkwin.so.6:KWin::Tile::parentTile() const
libkwin.so.6:KWin::Tile::descendants() const
libkwin.so.6:KWin::Tile::nextSibling() const
libkwin.so.6:KWin::Tile::canBeRemoved() const
libkwin.so.6:KWin::Tile::quickTileMode() const
libkwin.so.6:KWin::Tile::windowGeometry() const
libkwin.so.6:KWin::Tile::previousSibling() const
libkwin.so.6:KWin::Tile::absoluteGeometry() const
libkwin.so.6:KWin::Tile::relativeGeometry() const
libkwin.so.6:KWin::Tile::visitDescendants(std::function<void (KWin::Tile const*)>) const
libkwin.so.6:KWin::Tile::maximizedWindowGeometry() const
libkwin.so.6:KWin::Tile::absoluteGeometryInScreen() const
libkwin.so.6:KWin::Tile::row() const
libkwin.so.6:KWin::Tile::manager() const
libkwin.so.6:KWin::Tile::padding() const
libkwin.so.6:KWin::Tile::windows() const
libkwin.so.6:KWin::Tile::isLayout() const
libkwin.so.6:KWin::Scene::metaObject() const
libkwin.so.6:KWin::Scene::scanoutCandidate() const
libkwin.so.6:KWin::Scene::damage() const
libkwin.so.6:KWin::Scene::geometry() const
libkwin.so.6:KWin::Scene::renderer() const
libkwin.so.6:KWin::Scene::delegates() const
libkwin.so.6:KWin::Cursor::isOnOutput(KWin::Output*) const
libkwin.so.6:KWin::Cursor::metaObject() const
libkwin.so.6:KWin::Cursor::rect() const
libkwin.so.6:KWin::Cursor::source() const
libkwin.so.6:KWin::Cursor::hotspot() const
libkwin.so.6:KWin::Cursor::geometry() const
libkwin.so.6:KWin::Effect::metaObject() const
libkwin.so.6:KWin::Effect::blocksDirectScanout() const
libkwin.so.6:KWin::Effect::requestedEffectChainPosition() const
libkwin.so.6:KWin::Effect::debug(QString const&) const
libkwin.so.6:KWin::Effect::isActive() const
libkwin.so.6:KWin::Output::brightness() const
libkwin.so.6:KWin::Output::iccProfile() const
libkwin.so.6:KWin::Output::isInternal() const
libkwin.so.6:KWin::Output::metaObject() const
libkwin.so.6:KWin::Output::currentMode() const
libkwin.so.6:KWin::Output::description() const
libkwin.so.6:KWin::Output::mapToGlobal(QRectF const&) const
libkwin.so.6:KWin::Output::mapToGlobal(QPointF const&) const
libkwin.so.6:KWin::Output::refreshRate() const
libkwin.so.6:KWin::Output::capabilities() const
libkwin.so.6:KWin::Output::isNonDesktop() const
libkwin.so.6:KWin::Output::manufacturer() const
libkwin.so.6:KWin::Output::physicalSize() const
libkwin.so.6:KWin::Output::serialNumber() const
libkwin.so.6:KWin::Output::isPlaceholder() const
libkwin.so.6:KWin::Output::mapFromGlobal(QRect const&) const
libkwin.so.6:KWin::Output::mapFromGlobal(QRectF const&) const
libkwin.so.6:KWin::Output::mapFromGlobal(QPointF const&) const
libkwin.so.6:KWin::Output::minBrightness() const
libkwin.so.6:KWin::Output::orientateSize(QSize const&) const
libkwin.so.6:KWin::Output::sdrBrightness() const
libkwin.so.6:KWin::Output::iccProfilePath() const
libkwin.so.6:KWin::Output::wideColorGamut() const
libkwin.so.6:KWin::Output::desiredModeSize() const
libkwin.so.6:KWin::Output::manualTransform() const
libkwin.so.6:KWin::Output::colorDescription() const
libkwin.so.6:KWin::Output::highDynamicRange() const
libkwin.so.6:KWin::Output::panelOrientation() const
libkwin.so.6:KWin::Output::sdrGamutWideness() const
libkwin.so.6:KWin::Output::maxPeakBrightness() const
libkwin.so.6:KWin::Output::autoRotationPolicy() const
libkwin.so.6:KWin::Output::colorProfileSource() const
libkwin.so.6:KWin::Output::maxAverageBrightness() const
libkwin.so.6:KWin::Output::minBrightnessOverride() const
libkwin.so.6:KWin::Output::desiredModeRefreshRate() const
libkwin.so.6:KWin::Output::maxPeakBrightnessOverride() const
libkwin.so.6:KWin::Output::maxAverageBrightnessOverride() const
libkwin.so.6:KWin::Output::edid() const
libkwin.so.6:KWin::Output::name() const
libkwin.so.6:KWin::Output::uuid() const
libkwin.so.6:KWin::Output::model() const
libkwin.so.6:KWin::Output::modes() const
libkwin.so.6:KWin::Output::scale() const
libkwin.so.6:KWin::Output::eisaId() const
libkwin.so.6:KWin::Output::mstPath() const
libkwin.so.6:KWin::Output::dpmsMode() const
libkwin.so.6:KWin::Output::geometry() const
libkwin.so.6:KWin::Output::modeSize() const
libkwin.so.6:KWin::Output::overscan() const
libkwin.so.6:KWin::Output::rgbRange() const
libkwin.so.6:KWin::Output::subPixel() const
libkwin.so.6:KWin::Output::geometryF() const
libkwin.so.6:KWin::Output::isEnabled() const
libkwin.so.6:KWin::Output::pixelSize() const
libkwin.so.6:KWin::Output::transform() const
libkwin.so.6:KWin::Output::vrrPolicy() const
libkwin.so.6:KWin::Plugin::metaObject() const
libkwin.so.6:KWin::Shadow::metaObject() const
libkwin.so.6:KWin::Shadow::elementSize(KWin::Shadow::ShadowElements) const
libkwin.so.6:KWin::Shadow::decorationShadowImage() const
libkwin.so.6:KWin::Shadow::window() const
libkwin.so.6:KWin::TabBox::TabBox::metaObject() const
libkwin.so.6:KWin::TabBox::TabBox::nextClientStatic(KWin::Window*) const
libkwin.so.6:KWin::TabBox::TabBox::previousClientStatic(KWin::Window*) const
libkwin.so.6:KWin::Window::activities() const
libkwin.so.6:KWin::Window::borderLeft() const
libkwin.so.6:KWin::Window::desktopIds() const
libkwin.so.6:KWin::Window::isOnOutput(KWin::Output*) const
libkwin.so.6:KWin::Window::mapToFrame(QPointF const&) const
libkwin.so.6:KWin::Window::mapToLocal(QPointF const&) const
libkwin.so.6:KWin::Window::metaObject() const
libkwin.so.6:KWin::Window::strutRects() const
libkwin.so.6:KWin::Window::windowRole() const
libkwin.so.6:KWin::Window::borderRight() const
libkwin.so.6:KWin::Window::colorScheme() const
libkwin.so.6:KWin::Window::isLocalhost() const
libkwin.so.6:KWin::Window::isOnDesktop(KWin::VirtualDesktop*) const
libkwin.so.6:KWin::Window::isPlaceable() const
libkwin.so.6:KWin::Window::isShadeable() const
libkwin.so.6:KWin::Window::isSuspended() const
libkwin.so.6:KWin::Window::isTransient() const
libkwin.so.6:KWin::Window::isUnmanaged() const
libkwin.so.6:KWin::Window::mainWindows() const
libkwin.so.6:KWin::Window::surfaceItem() const
libkwin.so.6:KWin::Window::borderBottom() const
libkwin.so.6:KWin::Window::effectWindow() const
libkwin.so.6:KWin::Window::frameMargins() const
libkwin.so.6:KWin::Window::hasTransient(KWin::Window const*, bool) const
libkwin.so.6:KWin::Window::iconGeometry() const
libkwin.so.6:KWin::Window::isFullScreen() const
libkwin.so.6:KWin::Window::mapFromLocal(QPointF const&) const
libkwin.so.6:KWin::Window::maximizeMode() const
libkwin.so.6:KWin::Window::mouseGravity() const
libkwin.so.6:KWin::Window::titleBarRect(QRectF const&, bool&) const
libkwin.so.6:KWin::Window::transientFor() const
libkwin.so.6:KWin::Window::unresponsive() const
libkwin.so.6:KWin::Window::isMaximizable() const
libkwin.so.6:KWin::Window::isMinimizable() const
libkwin.so.6:KWin::Window::quickTileMode() const
libkwin.so.6:KWin::Window::stackingOrder() const
libkwin.so.6:KWin::Window::wantsTabFocus() const
libkwin.so.6:KWin::Window::allMainWindows() const
libkwin.so.6:KWin::Window::belongsToLayer() const
libkwin.so.6:KWin::Window::dockWantsInput() const
libkwin.so.6:KWin::Window::groupTransient() const
libkwin.so.6:KWin::Window::decoratedClient() const
libkwin.so.6:KWin::Window::geometryRestore() const
libkwin.so.6:KWin::Window::getMouseCommand(Qt::MouseButton, bool*) const
libkwin.so.6:KWin::Window::getWheelCommand(Qt::Orientation, bool*) const
libkwin.so.6:KWin::Window::isSpecialWindow() const
libkwin.so.6:KWin::Window::lastUsageSerial() const
libkwin.so.6:KWin::Window::visibleGeometry() const
libkwin.so.6:KWin::Window::wmClientMachine(bool) const
libkwin.so.6:KWin::Window::belongsToDesktop() const
libkwin.so.6:KWin::Window::isFullScreenable() const
libkwin.so.6:KWin::Window::isOnActiveOutput() const
libkwin.so.6:KWin::Window::moveResizeOutput() const
libkwin.so.6:KWin::Window::resizeIncrements() const
libkwin.so.6:KWin::Window::titlebarPosition() const
libkwin.so.6:KWin::Window::quickTileGeometry(QFlags<KWin::QuickTileFlag>, QPointF const&) const
libkwin.so.6:KWin::Window::wantsAdaptiveSync() const
libkwin.so.6:KWin::Window::constrainFrameSize(QSizeF const&, KWin::Window::SizeMode) const
libkwin.so.6:KWin::Window::decorationHasAlpha() const
libkwin.so.6:KWin::Window::hasApplicationMenu() const
libkwin.so.6:KWin::Window::isActiveFullScreen() const
libkwin.so.6:KWin::Window::isOnCurrentDesktop() const
libkwin.so.6:KWin::Window::moveResizeGeometry() const
libkwin.so.6:KWin::Window::transientPlacement() const
libkwin.so.6:KWin::Window::userCanSetNoBorder() const
libkwin.so.6:KWin::Window::clientPosToFramePos(QPointF const&) const
libkwin.so.6:KWin::Window::constrainClientSize(QSizeF const&, KWin::Window::SizeMode) const
libkwin.so.6:KWin::Window::framePosToClientPos(QPointF const&) const
libkwin.so.6:KWin::Window::iconFromDesktopFile() const
libkwin.so.6:KWin::Window::inputTransformation() const
libkwin.so.6:KWin::Window::isLockScreenOverlay() const
libkwin.so.6:KWin::Window::isOnCurrentActivity() const
libkwin.so.6:KWin::Window::providesContextHelp() const
libkwin.so.6:KWin::Window::skipsCloseAnimation() const
libkwin.so.6:KWin::Window::supportsWindowRules() const
libkwin.so.6:KWin::Window::isMostRecentlyRaised() const
libkwin.so.6:KWin::Window::isOffscreenRendering() const
libkwin.so.6:KWin::Window::preferredBufferScale() const
libkwin.so.6:KWin::Window::preferredColorScheme() const
libkwin.so.6:KWin::Window::clientRectToFrameRect(QRectF const&) const
libkwin.so.6:KWin::Window::clientSizeToFrameSize(QSizeF const&) const
libkwin.so.6:KWin::Window::frameRectToClientRect(QRectF const&) const
libkwin.so.6:KWin::Window::frameSizeToClientSize(QSizeF const&) const
libkwin.so.6:KWin::Window::isHiddenByShowDesktop() const
libkwin.so.6:KWin::Window::isRequestedFullScreen() const
libkwin.so.6:KWin::Window::layoutDecorationRects(QRectF&, QRectF&, QRectF&, QRectF&) const
libkwin.so.6:KWin::Window::requestedMaximizeMode() const
libkwin.so.6:KWin::Window::shortcutCaptionSuffix() const
libkwin.so.6:KWin::Window::requestedQuickTileMode() const
libkwin.so.6:KWin::Window::keyboardGeometryRestore() const
libkwin.so.6:KWin::Window::virtualKeyboardGeometry() const
libkwin.so.6:KWin::Window::wantsShadowToBeRendered() const
libkwin.so.6:KWin::Window::preferredBufferTransform() const
libkwin.so.6:KWin::Window::quickTileGeometryRestore() const
libkwin.so.6:KWin::Window::fullscreenGeometryRestore() const
libkwin.so.6:KWin::Window::hasTransientPlacementHint() const
libkwin.so.6:KWin::Window::preferredColorDescription() const
libkwin.so.6:KWin::Window::interactiveMoveResizeCount() const
libkwin.so.6:KWin::Window::titlebarPositionUnderMouse() const
libkwin.so.6:KWin::Window::nextInteractiveMoveGeometry(QPointF const&) const
libkwin.so.6:KWin::Window::nextInteractiveResizeGeometry(QPointF const&) const
libkwin.so.6:KWin::Window::isWaitingForInteractiveResizeSync() const
libkwin.so.6:KWin::Window::pid() const
libkwin.so.6:KWin::Window::tile() const
libkwin.so.6:KWin::Window::group() const
libkwin.so.6:KWin::Window::layer() const
libkwin.so.6:KWin::Window::output() const
libkwin.so.6:KWin::Window::shadow() const
libkwin.so.6:KWin::Window::caption() const
libkwin.so.6:KWin::Window::hitTest(QPointF const&) const
libkwin.so.6:KWin::Window::isModal() const
libkwin.so.6:KWin::Window::isShown() const
libkwin.so.6:KWin::Window::maxSize() const
libkwin.so.6:KWin::Window::minSize() const
libkwin.so.6:KWin::Window::opacity() const
libkwin.so.6:KWin::Window::surface() const
libkwin.so.6:KWin::Window::desktops() const
libkwin.so.6:KWin::Window::hasStrut() const
libkwin.so.6:KWin::Window::isClient() const
libkwin.so.6:KWin::Window::isHidden() const
libkwin.so.6:KWin::Window::noBorder() const
libkwin.so.6:KWin::Window::userTime() const
libkwin.so.6:KWin::Window::borderTop() const
libkwin.so.6:KWin::Window::findModal() const
libkwin.so.6:KWin::Window::isDeleted() const
libkwin.so.6:KWin::Window::shadeMode() const
libkwin.so.6:KWin::Window::strutRect(KWin::StrutArea) const
libkwin.so.6:KWin::AniData::isActive() const
libkwin.so.6:KWin::AniData::debugInfo() const
libkwin.so.6:KWin::Cursors::metaObject() const
libkwin.so.6:KWin::Cursors::isCursorHidden() const
libkwin.so.6:KWin::Display::metaObject() const
libkwin.so.6:KWin::Display::socketNames() const
libkwin.so.6:KWin::Display::outputDevices() const
libkwin.so.6:KWin::Display::outputsIntersecting(QRect const&) const
libkwin.so.6:KWin::Display::largestIntersectingOutput(QRect const&) const
libkwin.so.6:KWin::Display::seats() const
libkwin.so.6:KWin::Display::outputs() const
libkwin.so.6:KWin::Display::isRunning() const
libkwin.so.6:KWin::Display::operator wl_display*() const
libkwin.so.6:KWin::Options::metaObject() const
libkwin.so.6:KWin::Options::allowTearing() const
libkwin.so.6:KWin::Options::condensedTitle() const
libkwin.so.6:KWin::Options::isUseCompositing() const
libkwin.so.6:KWin::Options::animationTimeFactor() const
libkwin.so.6:KWin::Options::wheelToMouseCommand(KWin::Options::MouseWheelCommand, int) const
libkwin.so.6:KWin::Options::operationMaxButtonClick(QFlags<Qt::MouseButton>) const
libkwin.so.6:KWin::Outline::metaObject() const
libkwin.so.6:KWin::Outline::unifiedGeometry() const
libkwin.so.6:KWin::Outline::visualParentGeometry() const
libkwin.so.6:KWin::Outline::geometry() const
libkwin.so.6:KWin::Outline::isActive() const
libkwin.so.6:KWin::RamFile::effectiveFlags() const
libkwin.so.6:KWin::RamFile::fd() const
libkwin.so.6:KWin::RamFile::size() const
libkwin.so.6:KWin::RamFile::isValid() const
libkwin.so.6:KWin::Session::metaObject() const
libkwin.so.6:KWin::Version::toByteArray() const
libkwin.so.6:KWin::Version::majorVersion() const
libkwin.so.6:KWin::Version::minorVersion() const
libkwin.so.6:KWin::Version::patchVersion() const
libkwin.so.6:KWin::Version::isValid() const
libkwin.so.6:KWin::Version::toString() const
libkwin.so.6:KWin::Wayland::WaylandBackend::findOutput(KWayland::Client::Surface*) const
libkwin.so.6:KWin::Wayland::WaylandBackend::metaObject() const
libkwin.so.6:KWin::Wayland::WaylandBackend::supportedCompositors() const
libkwin.so.6:KWin::Wayland::WaylandBackend::sceneEglDisplayObject() const
libkwin.so.6:KWin::Wayland::WaylandBackend::outputs() const
libkwin.so.6:KWin::Wayland::WaylandBackend::drmDevice() const
libkwin.so.6:KWin::ColorLUT::transformation() const
libkwin.so.6:KWin::ColorLUT::red() const
libkwin.so.6:KWin::ColorLUT::blue() const
libkwin.so.6:KWin::ColorLUT::size() const
libkwin.so.6:KWin::ColorLUT::green() const
libkwin.so.6:KWin::GLShader::prepareSource(unsigned int, QByteArray const&) const
libkwin.so.6:KWin::GLShader::compile(unsigned int, unsigned int, QByteArray const&) const
libkwin.so.6:KWin::KeyEvent::timestamp() const
libkwin.so.6:KWin::LibInput::Connection::metaObject() const
libkwin.so.6:KWin::LibInput::Connection::devicesSysNames() const
libkwin.so.6:KWin::LibInput::Device::metaObject() const
libkwin.so.6:KWin::LibInput::Device::outputArea() const
libkwin.so.6:KWin::LibInput::Device::ringsCount() const
libkwin.so.6:KWin::LibInput::Device::stripsCount() const
libkwin.so.6:KWin::LibInput::Device::groupUserData() const
libkwin.so.6:KWin::LibInput::Device::defaultOutputArea() const
libkwin.so.6:KWin::LibInput::Device::supportsOutputArea() const
libkwin.so.6:KWin::LibInput::Device::leds() const
libkwin.so.6:KWin::LibInput::Device::output() const
libkwin.so.6:KWin::RootItem::metaObject() const
libkwin.so.6:KWin::RuleBook::metaObject() const
libkwin.so.6:KWin::RuleBook::find(KWin::Window const*) const
libkwin.so.6:KWin::TimeLine::easingCurve() const
libkwin.so.6:KWin::TimeLine::sourceRedirectMode() const
libkwin.so.6:KWin::TimeLine::targetRedirectMode() const
libkwin.so.6:KWin::TimeLine::done() const
libkwin.so.6:KWin::TimeLine::value() const
libkwin.so.6:KWin::TimeLine::elapsed() const
libkwin.so.6:KWin::TimeLine::running() const
libkwin.so.6:KWin::TimeLine::duration() const
libkwin.so.6:KWin::TimeLine::progress() const
libkwin.so.6:KWin::TimeLine::direction() const
libkwin.so.6:KWin::DrmDevice::fileDescriptor() const
libkwin.so.6:KWin::DrmDevice::supportsSyncObjTimelines() const
libkwin.so.6:KWin::DrmDevice::path() const
libkwin.so.6:KWin::DrmDevice::deviceId() const
libkwin.so.6:KWin::DrmDevice::allocator() const
libkwin.so.6:KWin::DrmDevice::gbmDevice() const
libkwin.so.6:KWin::DrmOutput::metaObject() const
libkwin.so.6:KWin::DrmOutput::cursorLayer() const
libkwin.so.6:KWin::DrmOutput::primaryLayer() const
libkwin.so.6:KWin::DrmOutput::channelFactors() const
libkwin.so.6:KWin::DrmOutput::computeCapabilities() const
libkwin.so.6:KWin::DrmOutput::needsColormanagement() const
libkwin.so.6:KWin::DrmOutput::createColorDescription(std::shared_ptr<KWin::OutputChangeSet> const&) const
libkwin.so.6:KWin::DrmOutput::lease() const
libkwin.so.6:KWin::DrmOutput::getModes() const
libkwin.so.6:KWin::DrmOutput::pipeline() const
libkwin.so.6:KWin::DrmOutput::connector() const
libkwin.so.6:KWin::GLTexture::internalFormat() const
libkwin.so.6:KWin::GLTexture::contentTransform() const
libkwin.so.6:KWin::GLTexture::size() const
libkwin.so.6:KWin::GLTexture::width() const
libkwin.so.6:KWin::GLTexture::filter() const
libkwin.so.6:KWin::GLTexture::height() const
libkwin.so.6:KWin::GLTexture::isNull() const
libkwin.so.6:KWin::GLTexture::matrix(KWin::TextureCoordinateType) const
libkwin.so.6:KWin::GLTexture::target() const
libkwin.so.6:KWin::GLTexture::isDirty() const
libkwin.so.6:KWin::GLTexture::texture() const
libkwin.so.6:KWin::ImageItem::metaObject() const
libkwin.so.6:KWin::ImageItem::image() const
libkwin.so.6:KWin::PaintData::translation() const
libkwin.so.6:KWin::PaintData::rotationAxis() const
libkwin.so.6:KWin::PaintData::xTranslation() const
libkwin.so.6:KWin::PaintData::yTranslation() const
libkwin.so.6:KWin::PaintData::zTranslation() const
libkwin.so.6:KWin::PaintData::rotationAngle() const
libkwin.so.6:KWin::PaintData::rotationOrigin() const
libkwin.so.6:KWin::PaintData::scale() const
libkwin.so.6:KWin::PaintData::xScale() const
libkwin.so.6:KWin::PaintData::yScale() const
libkwin.so.6:KWin::PaintData::zScale() const
libkwin.so.6:KWin::PaintData::toMatrix(double) const
libkwin.so.6:KWin::Scripting::findScript(QString const&) const
libkwin.so.6:KWin::Scripting::metaObject() const
libkwin.so.6:KWin::Scripting::isScriptLoaded(QString const&) const
libkwin.so.6:KWin::TileModel::metaObject() const
libkwin.so.6:KWin::TileModel::columnCount(QModelIndex const&) const
libkwin.so.6:KWin::TileModel::data(QModelIndex const&, int) const
libkwin.so.6:KWin::TileModel::flags(QModelIndex const&) const
libkwin.so.6:KWin::TileModel::index(int, int, QModelIndex const&) const
libkwin.so.6:KWin::TileModel::parent(QModelIndex const&) const
libkwin.so.6:KWin::TileModel::rowCount(QModelIndex const&) const
libkwin.so.6:KWin::TileModel::roleNames() const
libkwin.so.6:KWin::Workspace::activities() const
libkwin.so.6:KWin::Workspace::clientArea(KWin::clientAreaOption, KWin::Output const*, KWin::VirtualDesktop const*) const
libkwin.so.6:KWin::Workspace::clientArea(KWin::clientAreaOption, KWin::Window const*) const
libkwin.so.6:KWin::Workspace::clientArea(KWin::clientAreaOption, KWin::Window const*, KWin::Output const*) const
libkwin.so.6:KWin::Workspace::clientArea(KWin::clientAreaOption, KWin::Window const*, QPointF const&) const
libkwin.so.6:KWin::Workspace::findClient(KWin::Predicate, unsigned int) const
libkwin.so.6:KWin::Workspace::findClient(std::function<bool (KWin::X11Window const*)>) const
libkwin.so.6:KWin::Workspace::findOutput(KWin::Output*, KWin::Workspace::Direction, bool) const
libkwin.so.6:KWin::Workspace::findWindow(QUuid const&) const
libkwin.so.6:KWin::Workspace::findWindow(std::function<bool (KWin::Window const*)>) const
libkwin.so.6:KWin::Workspace::focusChain() const
libkwin.so.6:KWin::Workspace::metaObject() const
libkwin.so.6:KWin::Workspace::findDesktop(bool, KWin::VirtualDesktop*) const
libkwin.so.6:KWin::Workspace::inRearrange() const
libkwin.so.6:KWin::Workspace::outputOrder() const
libkwin.so.6:KWin::Workspace::screenEdges() const
libkwin.so.6:KWin::Workspace::activeOutput() const
libkwin.so.6:KWin::Workspace::findInternal(QWindow*) const
libkwin.so.6:KWin::Workspace::cascadeOffset(KWin::Window const*) const
libkwin.so.6:KWin::Workspace::findUnmanaged(std::function<bool (KWin::X11Window const*)>) const
libkwin.so.6:KWin::Workspace::findUnmanaged(unsigned int) const
libkwin.so.6:KWin::Workspace::packPositionUp(KWin::Window const*, double, bool) const
libkwin.so.6:KWin::Workspace::applicationMenu() const
libkwin.so.6:KWin::Workspace::adjustClientArea(KWin::Window*, QRectF const&) const
libkwin.so.6:KWin::Workspace::adjustWindowSize(KWin::Window const*, QRectF, KWin::Gravity) const
libkwin.so.6:KWin::Workspace::decorationBridge() const
libkwin.so.6:KWin::Workspace::packPositionDown(KWin::Window const*, double, bool) const
libkwin.so.6:KWin::Workspace::packPositionLeft(KWin::Window const*, double, bool) const
libkwin.so.6:KWin::Workspace::windowUnderMouse(KWin::Output*) const
libkwin.so.6:KWin::Workspace::packPositionRight(KWin::Window const*, double, bool) const
libkwin.so.6:KWin::Workspace::shortcutAvailable(QKeySequence const&, KWin::Window*) const
libkwin.so.6:KWin::Workspace::restrictedMoveArea(KWin::VirtualDesktop const*, QFlags<KWin::StrutArea>) const
libkwin.so.6:KWin::Workspace::supportInformation() const
libkwin.so.6:KWin::Workspace::topWindowOnDesktop(KWin::VirtualDesktop*, KWin::Output*, bool, bool) const
libkwin.so.6:KWin::Workspace::ensureStackingOrder(QList<KWin::Window*> const&) const
libkwin.so.6:KWin::Workspace::ensureStackingOrder(QList<KWin::X11Window*> const&) const
libkwin.so.6:KWin::Workspace::previousScreenSizes() const
libkwin.so.6:KWin::Workspace::adjustWindowPosition(KWin::Window const*, QPointF, bool, double) const
libkwin.so.6:KWin::Workspace::breaksShowingDesktop(KWin::Window*) const
libkwin.so.6:KWin::Workspace::findClientLeaderGroup(KWin::X11Window const*) const
libkwin.so.6:KWin::Workspace::xineramaIndexToOutput(int) const
libkwin.so.6:KWin::Workspace::previousRestrictedMoveArea(KWin::VirtualDesktop const*, QFlags<KWin::StrutArea>) const
libkwin.so.6:KWin::Workspace::unconstrainedStackingOrder() const
libkwin.so.6:KWin::Workspace::tabbox() const
libkwin.so.6:KWin::Workspace::outline() const
libkwin.so.6:KWin::Workspace::geometry() const
libkwin.so.6:KWin::Workspace::outputAt(QPointF const&) const
libkwin.so.6:KWin::Workspace::rulebook() const
libkwin.so.6:KWin::Workspace::findGroup(unsigned int) const
libkwin.so.6:KWin::Workspace::placement() const
libkwin.so.6:KWin::X11Window::activities() const
libkwin.so.6:KWin::X11Window::metaObject() const
libkwin.so.6:KWin::X11Window::wantsInput() const
libkwin.so.6:KWin::X11Window::windowRole() const
libkwin.so.6:KWin::X11Window::windowType() const
libkwin.so.6:KWin::X11Window::wrapperPos() const
libkwin.so.6:KWin::X11Window::isCloseable() const
libkwin.so.6:KWin::X11Window::isResizable() const
libkwin.so.6:KWin::X11Window::isShadeable() const
libkwin.so.6:KWin::X11Window::isUnmanaged() const
libkwin.so.6:KWin::X11Window::mainWindows() const
libkwin.so.6:KWin::X11Window::shapeRegion() const
libkwin.so.6:KWin::X11Window::acceptsFocus() const
libkwin.so.6:KWin::X11Window::hasTransient(KWin::Window const*, bool) const
libkwin.so.6:KWin::X11Window::iconGeometry() const
libkwin.so.6:KWin::X11Window::implicitSize() const
libkwin.so.6:KWin::X11Window::userNoBorder() const
libkwin.so.6:KWin::X11Window::isMaximizable() const
libkwin.so.6:KWin::X11Window::isMinimizable() const
libkwin.so.6:KWin::X11Window::fetchTransient() const
libkwin.so.6:KWin::X11Window::wmClientLeader() const
libkwin.so.6:KWin::X11Window::fetchActivities() const
libkwin.so.6:KWin::X11Window::belongsToDesktop() const
libkwin.so.6:KWin::X11Window::isFullScreenable() const
libkwin.so.6:KWin::X11Window::resizeIncrements() const
libkwin.so.6:KWin::X11Window::wantsSyncCounter() const
libkwin.so.6:KWin::X11Window::gravityAdjustment(xcb_gravity_t) const
libkwin.so.6:KWin::X11Window::findInternalWindow() const
libkwin.so.6:KWin::X11Window::userCanSetNoBorder() const
libkwin.so.6:KWin::X11Window::clientPosToFramePos(QPointF const&) const
libkwin.so.6:KWin::X11Window::constrainClientSize(QSizeF const&, KWin::Window::SizeMode) const
libkwin.so.6:KWin::X11Window::fetchWmClientLeader() const
libkwin.so.6:KWin::X11Window::framePosToClientPos(QPointF const&) const
libkwin.so.6:KWin::X11Window::hasScheduledRelease() const
libkwin.so.6:KWin::X11Window::providesContextHelp() const
libkwin.so.6:KWin::X11Window::supportsWindowRules() const
libkwin.so.6:KWin::X11Window::calculateGravitation(bool) const
libkwin.so.6:KWin::X11Window::hasTransientInternal(KWin::X11Window const*, bool, QList<KWin::X11Window const*>&) const
libkwin.so.6:KWin::X11Window::preferredColorScheme() const
libkwin.so.6:KWin::X11Window::readUserCreationTime() const
libkwin.so.6:KWin::X11Window::clientSizeToFrameSize(QSizeF const&) const
libkwin.so.6:KWin::X11Window::fetchShowOnScreenEdge() const
libkwin.so.6:KWin::X11Window::frameRectToBufferRect(QRectF const&) const
libkwin.so.6:KWin::X11Window::frameSizeToClientSize(QSizeF const&) const
libkwin.so.6:KWin::X11Window::fullscreenMonitorsArea(NETFullscreenMonitors) const
libkwin.so.6:KWin::X11Window::isMovableAcrossScreens() const
libkwin.so.6:KWin::X11Window::fetchSkipCloseAnimation() const
libkwin.so.6:KWin::X11Window::belongsToSameApplication(KWin::Window const*, QFlags<KWin::Window::SameApplicationCheck>) const
libkwin.so.6:KWin::X11Window::readPreferredColorScheme(KWin::Xcb::StringProperty&) const
libkwin.so.6:KWin::X11Window::readUserTimeMapTimestamp(KStartupInfoId const*, KStartupInfoData const*, bool) const
libkwin.so.6:KWin::X11Window::fetchPreferredColorScheme() const
libkwin.so.6:KWin::X11Window::fetchApplicationMenuObjectPath() const
libkwin.so.6:KWin::X11Window::fetchApplicationMenuServiceName() const
libkwin.so.6:KWin::X11Window::isWaitingForInteractiveResizeSync() const
libkwin.so.6:KWin::X11Window::pid() const
libkwin.so.6:KWin::X11Window::strut() const
libkwin.so.6:KWin::X11Window::window() const
libkwin.so.6:KWin::X11Window::frameId() const
libkwin.so.6:KWin::X11Window::maxSize() const
libkwin.so.6:KWin::X11Window::minSize() const
libkwin.so.6:KWin::X11Window::hasStrut() const
libkwin.so.6:KWin::X11Window::isClient() const
libkwin.so.6:KWin::X11Window::noBorder() const
libkwin.so.6:KWin::X11Window::readName() const
libkwin.so.6:KWin::X11Window::userTime() const
libkwin.so.6:KWin::X11Window::basicUnit() const
libkwin.so.6:KWin::X11Window::desktopId() const
libkwin.so.6:KWin::X11Window::isMovable() const
libkwin.so.6:KWin::X11Window::isOutline() const
libkwin.so.6:KWin::X11Window::sessionId() const
libkwin.so.6:KWin::X11Window::strutRect(KWin::StrutArea) const
libkwin.so.6:KWin::X11Window::wrapperId() const
libkwin.so.6:non-virtual thunk to KWin::DebugConsole::~DebugConsole()
libkwin.so.6:non-virtual thunk to KWin::DebugConsole::~DebugConsole()
libkwin.so.6:non-virtual thunk to KWin::KeyboardLayout::~KeyboardLayout()
libkwin.so.6:non-virtual thunk to KWin::KeyboardLayout::~KeyboardLayout()
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::wheelEvent(KWin::WheelEvent*)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::touchMotion(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::pointerEvent(KWin::MouseEvent*, unsigned int)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::tabletToolEvent(KWin::TabletEvent*)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::tabletPadRingEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::tabletPadStripEvent(int, int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::tabletPadButtonEvent(unsigned int, bool, KWin::TabletPadId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::tabletToolButtonEvent(unsigned int, bool, KWin::TabletToolId const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::touchUp(int, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::keyEvent(KWin::KeyEvent*)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::touchDown(int, QPointF const&, std::chrono::duration<long, std::ratio<1l, 1000000l> >)
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::~DpmsInputEventFilter()
libkwin.so.6:non-virtual thunk to KWin::DpmsInputEventFilter::~DpmsInputEventFilter()
libkwin.so.6:non-virtual thunk to KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_destroy(QtWaylandServer::wp_linux_drm_syncobj_manager_v1::Resource*)
libkwin.so.6:non-virtual thunk to KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_get_surface(QtWaylandServer::wp_linux_drm_syncobj_manager_v1::Resource*, unsigned int, wl_resource*)
libkwin.so.6:non-virtual thunk to KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_destroy_global()
libkwin.so.6:non-virtual thunk to KWin::LinuxDrmSyncObjV1Interface::wp_linux_drm_syncobj_manager_v1_import_timeline(QtWaylandServer::wp_linux_drm_syncobj_manager_v1::Resource*, unsigned int, int)
libkwin.so.6:std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::_FUN()
